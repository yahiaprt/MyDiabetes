From 60df001c207b3168686bfebeeb911aaa9dd7d348 Mon Sep 17 00:00:00 2001
From: Philipp Fahlteich <philipp.fahlteich@gmail.com>
Date: Mon, 1 Sep 2014 19:09:14 +0200
Subject: [PATCH] More CRUD operations working

---
 .idea/dictionaries/Filip.xml                       |   2 +
 .../com/mydiabetesprt/diabetes/MainActivity.java     |   3 +
 .../diaguard/database/DatabaseDataSource.java      | 273 ++++++++-------------
 .../diaguard/fragments/DatePickerFragment.java     |   3 +-
 .../diaguard/fragments/LogFragment.java            |   8 +-
 .../diaguard/fragments/MainFragment.java           |  18 +-
 .../diaguard/fragments/TimelineFragment.java       |  13 +-
 Diaguard/src/main/res/menu/main.xml                |   5 +
 Diaguard/src/main/res/values-de/strings.xml        |   2 +-
 Diaguard/src/main/res/values/strings.xml           |   2 +-
 10 files changed, 130 insertions(+), 199 deletions(-)

diff --git a/.idea/dictionaries/Filip.xml b/.idea/dictionaries/Filip.xml
index ed978c3..1725ff3 100644
--- a/.idea/dictionaries/Filip.xml
+++ b/.idea/dictionaries/Filip.xml
@@ -3,6 +3,8 @@
     <words>
       <w>diaguard</w>
       <w>mydiabetesprt</w>
+      <w>hypers</w>
+      <w>timeline</w>
     </words>
   </dictionary>
 </component>
\ No newline at end of file
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/MainActivity.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/MainActivity.java
index 5008d0a..0108ace 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/MainActivity.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/MainActivity.java
@@ -105,6 +105,9 @@ public class MainActivity extends ActionBarActivity {
             case R.id.action_calculator:
                 startActivity(new Intent(this, CalculatorActivity.class));
                 return true;
+            case R.id.action_export:
+                startActivity(new Intent(this, ExportActivity.class));
+                return true;
             case R.id.action_settings:
                 startActivity(new Intent(this, PreferenceActivity.class));
                 return true;
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/DatabaseDataSource.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/DatabaseDataSource.java
index 06683e4..f84c9cd 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/DatabaseDataSource.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/DatabaseDataSource.java
@@ -9,8 +9,10 @@ import android.database.sqlite.SQLiteDatabase;
 import com.mydiabetesprt.diabetes.helpers.Helper;
 
 import org.joda.time.DateTime;
+import org.joda.time.format.DateTimeFormatter;
 
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.List;
 
 /**
@@ -207,6 +209,63 @@ public class DatabaseDataSource {
         return entries;
     }
 
+    public float getBloodSugarAverage(int rangeInDays) {
+        DateTimeFormatter format = Helper.getDateDatabaseFormat();
+        DateTime now = new DateTime();
+        String query = "SELECT AVG(" + DatabaseHelper.VALUE + ") FROM " + DatabaseHelper.MEASUREMENT +
+                " INNER JOIN " + DatabaseHelper.ENTRY +
+                " ON " + DatabaseHelper.MEASUREMENT + "." + DatabaseHelper.ENTRY_ID +
+                " = " + DatabaseHelper.ENTRY + "." + DatabaseHelper.ID +
+                " AND " + DatabaseHelper.ENTRY + "." + DatabaseHelper.DATE +
+                " >= Datetime('" + format.print(now.minusDays(rangeInDays).withTimeAtStartOfDay()) + "')" +
+                " AND " + DatabaseHelper.ENTRY + "." + DatabaseHelper.DATE +
+                " <= Datetime('" + format.print(now.withTime(23, 59, 59, 999)) + "')" +
+                " AND " + DatabaseHelper.MEASUREMENT + "." + DatabaseHelper.CATEGORY +
+                " = '" + Measurement.Category.BloodSugar.toString() + "';";
+        Cursor cursor = db.rawQuery(query, null);
+
+        float average = 0;
+        if(cursor.moveToFirst())
+            average = cursor.getFloat(0);
+
+        return average;
+    }
+
+    public float[][] getAverageDataTable(DateTime day, Measurement.Category[] categories, int columns) {
+        float[][] values = new float[categories.length][columns];
+        int counter = 1;
+        for(Measurement.Category category : categories) {
+            List<Entry> entriesOfDay = getEntriesOfDay(day, category);
+            int row = Arrays.asList(categories).indexOf(category);
+
+            for(Entry entry : entriesOfDay) {
+                Measurement measurement = entry.getMeasurements().get(0);
+                int hour = entry.getDate().getHourOfDay() / 2;
+                float oldValue = values[row][hour];
+                float newValue;
+
+                // Sum of everything but Blood Sugar (average)
+                if (measurement.getCategory() == Measurement.Category.BloodSugar ||
+                        measurement.getCategory() == Measurement.Category.HbA1c ||
+                        measurement.getCategory() == Measurement.Category.Weight ||
+                        measurement.getCategory() == Measurement.Category.Pulse) {
+                    if (oldValue > 0) {
+                        // Calculate Average per hour
+                        newValue = ((oldValue * counter) + (measurement.getValue())) / (counter + 1);
+                        counter++;
+                    } else {
+                        newValue = measurement.getValue();
+                        counter = 1;
+                    }
+                } else
+                    newValue = oldValue + measurement.getValue();
+
+                values[row][hour] = newValue;
+            }
+        }
+        return values;
+    }
+
     public int count(String table, String selection, String selectionArg) {
         String query = "SELECT COUNT(*) FROM " + table + " WHERE " + selection + " = '" + selectionArg + "';";
         Cursor cursor = db.rawQuery(query, null);
@@ -216,6 +275,45 @@ public class DatabaseDataSource {
         return count;
     }
 
+    public int countMeasurements(DateTime day, Measurement.Category category) {
+        String query = "SELECT COUNT(*) FROM " + DatabaseHelper.ENTRY +
+                " INNER JOIN " + DatabaseHelper.MEASUREMENT +
+                " ON " + DatabaseHelper.MEASUREMENT + "." + DatabaseHelper.ENTRY_ID +
+                " = " + DatabaseHelper.ENTRY + "." + DatabaseHelper.ID +
+                " AND " + DatabaseHelper.ENTRY + "." + DatabaseHelper.DATE +
+                " >= Datetime('" + day.withTimeAtStartOfDay() + "')" +
+                " AND " + DatabaseHelper.ENTRY + "." + DatabaseHelper.DATE +
+                " <= Datetime('" + day.withTime(23, 59, 59, 999) + "')" +
+                " AND " + DatabaseHelper.MEASUREMENT + "." + DatabaseHelper.CATEGORY +
+                " = '" + category + "';";
+        Cursor cursor = db.rawQuery(query, null);
+        cursor.moveToFirst();
+        int count = cursor.getInt(0);
+        cursor.close();
+        return count;
+    }
+
+    public int countMeasurements(DateTime day, Measurement.Category category, float limit, boolean countHigherValues) {
+        String comparisonSymbol = countHigherValues ? " >= " : " <= ";
+        String query = "SELECT COUNT(*) FROM " + DatabaseHelper.ENTRY +
+                " INNER JOIN " + DatabaseHelper.MEASUREMENT +
+                " ON " + DatabaseHelper.MEASUREMENT + "." + DatabaseHelper.ENTRY_ID +
+                " = " + DatabaseHelper.ENTRY + "." + DatabaseHelper.ID +
+                " AND " + DatabaseHelper.ENTRY + "." + DatabaseHelper.DATE +
+                " >= Datetime('" + day.withTimeAtStartOfDay() + "')" +
+                " AND " + DatabaseHelper.ENTRY + "." + DatabaseHelper.DATE +
+                " <= Datetime('" + day.withTime(23, 59, 59, 999) + "')" +
+                " AND " + DatabaseHelper.MEASUREMENT + "." + DatabaseHelper.CATEGORY +
+                " = '" + category + "' " +
+                " AND " + DatabaseHelper.MEASUREMENT + "." + DatabaseHelper.VALUE +
+                comparisonSymbol + limit + ";";
+        Cursor cursor = db.rawQuery(query, null);
+        cursor.moveToFirst();
+        int count = cursor.getInt(0);
+        cursor.close();
+        return count;
+    }
+
     // endregion
 
     // region Write
@@ -249,179 +347,4 @@ public class DatabaseDataSource {
     }
 
     // endregion
-
-    /*
-
-    public Measurement getLatestMeasurement(Measurement.Category category) {
-        String query = "SELECT * FROM " + DatabaseHelper.EVENTS + " WHERE " +
-                DatabaseHelper.CATEGORY + " = '" + category.name() + "' " +
-                "ORDER BY " + DatabaseHelper.DATE + " DESC LIMIT 1;";
-        Cursor cursor = db.rawQuery(query, null);
-
-        if (cursor.moveToLast()) {
-            Event event = new Event();
-            event.setId(Integer.parseInt(cursor.getString(0)));
-            event.setValue(Float.parseFloat(cursor.getString(1)));
-            event.setDate(cursor.getString(2));
-            event.setNotes(cursor.getString(3));
-            event.setCategory(Event.Category.valueOf(cursor.getString(4)));
-            return event;
-        }
-        else
-            return null;
-    }
-
-    public List<Event> getEventsOfDay(Calendar date) {
-        String dateString = new SimpleDateFormat(DB_FORMAT_DATE).format(date.getTime());
-
-        String query = "SELECT * FROM " + DatabaseHelper.EVENTS + " WHERE " +
-                DatabaseHelper.DATE + " >= Datetime('" + dateString + " " + FIRST_SECOND_OF_DAY + "') AND " +
-                DatabaseHelper.DATE + " <= Datetime('" + dateString + " " + LAST_SECOND_OF_DAY + "') " +
-                "ORDER BY " + DatabaseHelper.DATE + ";";
-        Cursor cursor = db.rawQuery(query, null);
-
-        List<Event> events = new ArrayList<Event>();
-
-        if (cursor.moveToFirst()) {
-            while(!cursor.isAfterLast()) {
-
-                Event event = new Event();
-                event.setId(Integer.parseInt(cursor.getString(0)));
-                event.setValue(Float.parseFloat(cursor.getString(1)));
-                event.setDate(cursor.getString(2));
-                event.setNotes(cursor.getString(3));
-                event.setCategory(Event.Category.valueOf(cursor.getString(4)));
-
-                events.add(event);
-
-                cursor.moveToNext();
-            }
-        }
-        return events;
-    }
-
-    public List<Event> getEventsOfDay(Calendar date, Event.Category category) {
-
-        String dateString = new SimpleDateFormat(DB_FORMAT_DATE).format(date.getTime());
-
-        String query = "SELECT * FROM " + DatabaseHelper.EVENTS + " WHERE " +
-                DatabaseHelper.DATE + " >= Datetime('" + dateString + " " + FIRST_SECOND_OF_DAY + "') AND " +
-                DatabaseHelper.DATE + " <= Datetime('" + dateString + " " + LAST_SECOND_OF_DAY + "') AND " +
-                DatabaseHelper.CATEGORY + " = '" + category.name() + "' " +
-                " ORDER BY " + DatabaseHelper.DATE;
-        Cursor cursor = db.rawQuery(query, null);
-
-        List<Event> events = new ArrayList<Event>();
-
-        if (cursor.moveToFirst()) {
-
-            while(!cursor.isAfterLast()) {
-
-                Event event = new Event();
-                event.setId(Integer.parseInt(cursor.getString(0)));
-                event.setValue(Float.parseFloat(cursor.getString(1)));
-                event.setDate(cursor.getString(2));
-                event.setNotes(cursor.getString(3));
-                event.setCategory(Event.Category.valueOf(cursor.getString(4)));
-
-                events.add(event);
-
-                cursor.moveToNext();
-            }
-        }
-        return events;
-    }
-
-    public List<Event> getEventsOfDay(Calendar date, Event.Category[] categories) {
-
-        String dateString = new SimpleDateFormat(DB_FORMAT_DATE).format(date.getTime());
-
-        String whereCategory = "";
-        for(Event.Category category : categories) {
-            whereCategory = whereCategory + ",'" + category.name() + "'";
-        }
-        whereCategory = whereCategory.substring(1);
-
-        String query = "SELECT * FROM " + DatabaseHelper.EVENTS + " WHERE " +
-                DatabaseHelper.DATE + " >= Datetime('" + dateString + " " + FIRST_SECOND_OF_DAY + "') AND " +
-                DatabaseHelper.DATE + " <= Datetime('" + dateString + " " + LAST_SECOND_OF_DAY + "') AND " +
-                DatabaseHelper.CATEGORY + " in (" + whereCategory + ") " +
-                " ORDER BY " + DatabaseHelper.DATE;
-        Cursor cursor = db.rawQuery(query, null);
-
-        List<Event> events = new ArrayList<Event>();
-
-        if (cursor.moveToFirst()) {
-
-            while(!cursor.isAfterLast()) {
-
-                Event event = new Event();
-                event.setId(Integer.parseInt(cursor.getString(0)));
-                event.setValue(Float.parseFloat(cursor.getString(1)));
-                event.setDate(cursor.getString(2));
-                event.setNotes(cursor.getString(3));
-                event.setCategory(Event.Category.valueOf(cursor.getString(4)));
-
-                events.add(event);
-
-                cursor.moveToNext();
-            }
-        }
-        return events;
-    }
-
-    public float getBloodSugarAverage(int rangeInDays) {
-        SimpleDateFormat format = new SimpleDateFormat(DB_FORMAT_DATE_AND_TIME);
-        Calendar now = Calendar.getInstance();
-        Calendar dateBefore = Calendar.getInstance();
-        dateBefore.set(Calendar.HOUR_OF_DAY, now.get(Calendar.HOUR_OF_DAY) - (rangeInDays * 24));
-
-        String query = "SELECT AVG(" + DatabaseHelper.VALUE + ") FROM " + DatabaseHelper.EVENTS + " WHERE " +
-                DatabaseHelper.DATE + " >= Datetime('" + format.format(dateBefore.getTime()) + "') AND " +
-                DatabaseHelper.DATE + " <= Datetime('" + format.format(now.getTime()) + "') AND " +
-                DatabaseHelper.CATEGORY + " = '" + Measurement.Category.BloodSugar.toString() + "' ";
-        Cursor cursor = db.rawQuery(query, null);
-
-        float average = 0;
-        if(cursor.moveToFirst())
-            average = cursor.getFloat(0);
-
-        return average;
-    }
-
-
-    public float[][] getAverageDataTable(Calendar date, Measurement.Category[] categories, int columns) {
-        float[][] values = new float[categories.length][columns];
-        List<Event> events = getEventsOfDay(date, categories);
-
-        int counter = 1;
-        for(Event event : events) {
-            int category = Arrays.asList(categories).indexOf(event.getCategory());
-            int hour = event.getDate().get(Calendar.HOUR_OF_DAY) / 2;
-            float oldValue = values[category][hour];
-            float newValue;
-
-            // Sum of everything but Blood Sugar (average)
-            if(event.getCategory() == Event.Category.BloodSugar ||
-                    event.getCategory() == Event.Category.HbA1c ||
-                    event.getCategory() == Event.Category.Weight ||
-                    event.getCategory() == Event.Category.Pulse) {
-                if(oldValue > 0) {
-                    // Calculate Average per hour
-                    newValue = ((oldValue * counter) + (event.getValue())) / (counter + 1);
-                    counter++;
-                }
-                else {
-                    newValue = event.getValue();
-                    counter = 1;
-                }
-            }
-            else
-                newValue = oldValue + event.getValue();
-
-            values[category][hour] = newValue;
-        }
-        return values;
-    }
-    */
 }
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/DatePickerFragment.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/DatePickerFragment.java
index 3177eb1..084927e 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/DatePickerFragment.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/DatePickerFragment.java
@@ -23,7 +23,8 @@ public class DatePickerFragment extends DialogFragment implements DatePickerDial
             date = new DateTime();
 
         int year = date.getYear();
-        int month = date.getMonthOfYear();
+        // Months are zero-based due to the Calendar.class
+        int month = date.getMonthOfYear()-1;
         int day = date.getDayOfMonth();
 
         return new DatePickerDialog(getActivity(), this, year, month, day);
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/LogFragment.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/LogFragment.java
index b0f09c9..a3e996e 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/LogFragment.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/LogFragment.java
@@ -189,7 +189,7 @@ public class LogFragment extends Fragment {
     private void updateListView() {
 
         DateTimeFormatter format = preferenceHelper.getDateFormat();
-        String weekDay = getResources().getStringArray(R.array.weekdays)[time.getDayOfWeek()];
+        String weekDay = getResources().getStringArray(R.array.weekdays)[time.getDayOfWeek()-1];
         ((Button)getView().findViewById(R.id.button_date)).setText(weekDay.substring(0,2) + "., " + format.print(time));
 
         // TODO
@@ -221,12 +221,12 @@ public class LogFragment extends Fragment {
     // LISTENERS
 
     public void previousDay() {
-        time = time.withDayOfMonth(time.getDayOfMonth() - 1);
+        time = time.minusDays(1);
         updateListView();
     }
 
     public void nextDay() {
-        time = time.withDayOfMonth(time.getDayOfMonth() + 1);
+        time = time.plusDays(1);
         updateListView();
     }
 
@@ -234,7 +234,7 @@ public class LogFragment extends Fragment {
         DialogFragment fragment = new DatePickerFragment() {
             @Override
             public void onDateSet(DatePicker view, int year, int month, int day) {
-                time = time.withYear(year).withMonthOfYear(month).withDayOfMonth(day);
+                time = time.withYear(year).withMonthOfYear(month+1).withDayOfMonth(day);
                 updateListView();
             }
         };
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/MainFragment.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/MainFragment.java
index 2df0a13..5f0ba6f 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/MainFragment.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/MainFragment.java
@@ -87,7 +87,7 @@ public class MainFragment extends Fragment {
         if(countBloodSugarMeasurements > 0) {
             textViewLatestValue.setTextSize(60);
             updateLatest();
-            //updateDashboard();
+            updateDashboard();
         }
         else {
             textViewLatestValue.setTextSize(40);
@@ -134,24 +134,23 @@ public class MainFragment extends Fragment {
         textViewLatestAgo.setText(Helper.getTextAgo(getActivity(), differenceInMinutes));
     }
 
-    /*
     private void updateDashboard() {
         updateToday();
         updateAverage();
     }
 
     private void updateToday() {
-        int measurements = dataSource.countEvents(Event.Category.BloodSugar, time);
+        int measurements = dataSource.countMeasurements(time, Measurement.Category.BloodSugar);
         textViewMeasurements.setText(Integer.toString(measurements));
 
-        int countHypers = dataSource.countEventsAboveValue(Event.Category.BloodSugar,
-                time,
-                preferenceHelper.getLimitHyperglycemia());
+        int countHypers = dataSource.countMeasurements(time,
+                Measurement.Category.BloodSugar,
+                preferenceHelper.getLimitHyperglycemia(), true);
         textViewHyperglycemia.setText(Integer.toString(countHypers));
 
-        int countHypos = dataSource.countEventsBelowValue(Event.Category.BloodSugar,
-                time,
-                preferenceHelper.getLimitHypoglycemia());
+        int countHypos = dataSource.countMeasurements(time,
+                Measurement.Category.BloodSugar,
+                preferenceHelper.getLimitHypoglycemia(), false);
         textViewHypoglycemia.setText(Integer.toString(countHypos));
     }
 
@@ -183,5 +182,4 @@ public class MainFragment extends Fragment {
         textViewAverageWeek.setText(avgWeekString);
         textViewAverageDay.setText(avgDayString);
     }
-    */
 }
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/TimelineFragment.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/TimelineFragment.java
index a86279d..1ce17b3 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/TimelineFragment.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/TimelineFragment.java
@@ -78,6 +78,7 @@ public class TimelineFragment extends Fragment {
     @Override
     public void onConfigurationChanged(Configuration newConfig) {
         super.onConfigurationChanged(newConfig);
+        // TODO: Save current date to savedInstanceState
         updateContent();
     }
 
@@ -334,8 +335,8 @@ public class TimelineFragment extends Fragment {
         }
 
         dataSource.open();
-        //float[][] values = dataSource.getAverageDataTable(time,
-        //        checkedCategoriesList.toArray(new Measurement.Category[checkedCategoriesList.size()]), 12);
+        float[][] values = dataSource.getAverageDataTable(time,
+                checkedCategoriesList.toArray(new Measurement.Category[checkedCategoriesList.size()]), 12);
         dataSource.close();
 
         for(int categoryPosition = 0; categoryPosition < checkedCategoriesList.size(); categoryPosition++) {
@@ -343,7 +344,6 @@ public class TimelineFragment extends Fragment {
             XYSeries series = new XYSeries(category.name());
             chartHelperTable.seriesDataset.addSeries(series);
             for(int hour = 0; hour < 12; hour++) {
-                /*
                 float value = values[categoryPosition][hour];
                 if(value > 0) {
                     float x_value = (hour * 2) + 1;
@@ -354,7 +354,6 @@ public class TimelineFragment extends Fragment {
                     series.add(x_value, y_value);
                     series.addAnnotation(valueString, x_value, y_value);
                 }
-                */
             }
         }
     }
@@ -371,12 +370,12 @@ public class TimelineFragment extends Fragment {
     //region Listeners
 
     public void previousDay() {
-        time = time.withDayOfMonth(time.getDayOfMonth() - 1);
+        time = time.minusDays(1);
         updateContent();
     }
 
     public void nextDay() {
-        time = time.withDayOfMonth(time.getDayOfMonth() + 1);
+        time = time.plusDays(1);
         updateContent();
     }
 
@@ -384,7 +383,7 @@ public class TimelineFragment extends Fragment {
         DialogFragment fragment = new DatePickerFragment() {
             @Override
             public void onDateSet(DatePicker view, int year, int month, int day) {
-                time = time.withYear(year).withMonthOfYear(month).withDayOfMonth(day);
+                time = time.withYear(year).withMonthOfYear(month+1).withDayOfMonth(day);
                 updateContent();
             }
         };
diff --git a/Diaguard/src/main/res/menu/main.xml b/Diaguard/src/main/res/menu/main.xml
index 78e57fa..c6d7989 100644
--- a/Diaguard/src/main/res/menu/main.xml
+++ b/Diaguard/src/main/res/menu/main.xml
@@ -8,6 +8,11 @@
         android:title="@string/calculator"
         diaguard:showAsAction="ifRoom"/>
 
+    <item android:id="@+id/action_export"
+        android:icon="@drawable/export"
+        android:title="@string/export"
+        diaguard:showAsAction="ifRoom"/>
+
     <item android:id="@+id/action_settings"
         android:icon="@drawable/ic_action_settings"
         android:title="@string/settings"
diff --git a/Diaguard/src/main/res/values-de/strings.xml b/Diaguard/src/main/res/values-de/strings.xml
index 6f9e17c..406925e 100644
--- a/Diaguard/src/main/res/values-de/strings.xml
+++ b/Diaguard/src/main/res/values-de/strings.xml
@@ -90,13 +90,13 @@
     <string name="weeks">Wochen</string>
 
     <string-array name="weekdays">
-        <item>Sonntag</item>
         <item>Montag</item>
         <item>Dienstag</item>
         <item>Mittwoch</item>
         <item>Donnerstag</item>
         <item>Freitag</item>
         <item>Samstag</item>
+        <item>Sonntag</item>
     </string-array>
 
     <string name="morning">Morgens</string>
diff --git a/Diaguard/src/main/res/values/strings.xml b/Diaguard/src/main/res/values/strings.xml
index 24f8a90..ad50f17 100644
--- a/Diaguard/src/main/res/values/strings.xml
+++ b/Diaguard/src/main/res/values/strings.xml
@@ -104,13 +104,13 @@
     <string name="months">Months</string>
 
     <string-array name="weekdays">
-        <item>Sunday</item>
         <item>Monday</item>
         <item>Tuesday</item>
         <item>Wednesday</item>
         <item>Thursday</item>
         <item>Friday</item>
         <item>Saturday</item>
+        <item>Sunday</item>
     </string-array>
 
     <string name="morning">Morning</string>
-- 
1.9.0.msysgit.0

From 2d92e5c721e60a43534839f53bce4489e1d1c6c3 Mon Sep 17 00:00:00 2001
From: Philipp Fahlteich <philipp.fahlteich@gmail.com>
Date: Thu, 28 Aug 2014 00:20:05 +0200
Subject: [PATCH] Next step for database update and date-handling Working chart
 and last measurement Preferences in one screen instead of two

---
 Diaguard/src/main/AndroidManifest.xml              |   2 +-
 .../mydiabetesprt/diabetes/DiaguardApplication.java  |   5 +-
 .../com/mydiabetesprt/diabetes/ExportActivity.java   |  19 +-
 .../com/mydiabetesprt/diabetes/MainActivity.java     |   2 +-
 .../com/mydiabetesprt/diabetes/NewEventActivity.java | 163 ++++----------
 .../mydiabetesprt/diabetes/PreferenceActivity.java   |  48 +++++
 .../mydiabetesprt/diabetes/PreferencesActivity.java  |  40 ----
 .../diaguard/database/DatabaseDataSource.java      |  56 ++++-
 .../com/mydiabetesprt/diabetes/database/Entry.java   |  11 +
 .../diaguard/fragments/LogFragment.java            |  10 +-
 .../diaguard/fragments/MainFragment.java           |  27 ++-
 .../diaguard/fragments/TimelineFragment.java       |  53 +++--
 .../mydiabetesprt/diabetes/helpers/FileHelper.java   |   8 +-
 .../diaguard/helpers/PreferenceHelper.java         |   8 -
 .../diaguard/preferences/BackupPreference.java     |   4 +-
 .../diaguard/preferences/CleanUpPreference.java    |  10 +-
 Diaguard/src/main/res/layout/fragment_timeline.xml |   3 +-
 Diaguard/src/main/res/menu/item.xml                |  10 -
 Diaguard/src/main/res/xml/headers.xml              |  13 --
 Diaguard/src/main/res/xml/preferences.xml          | 239 ++++++++++-----------
 .../src/main/res/xml/preferences_application.xml   |  43 ----
 Diaguard/src/main/res/xml/preferences_therapy.xml  |  85 --------
 22 files changed, 318 insertions(+), 541 deletions(-)
 create mode 100644 Diaguard/src/main/java/com/mydiabetesprt/diabetes/PreferenceActivity.java
 delete mode 100644 Diaguard/src/main/java/com/mydiabetesprt/diabetes/PreferencesActivity.java
 delete mode 100644 Diaguard/src/main/res/menu/item.xml
 delete mode 100644 Diaguard/src/main/res/xml/headers.xml
 delete mode 100644 Diaguard/src/main/res/xml/preferences_application.xml
 delete mode 100644 Diaguard/src/main/res/xml/preferences_therapy.xml

diff --git a/Diaguard/src/main/AndroidManifest.xml b/Diaguard/src/main/AndroidManifest.xml
index 2b1bb04..6621e9f 100644
--- a/Diaguard/src/main/AndroidManifest.xml
+++ b/Diaguard/src/main/AndroidManifest.xml
@@ -47,7 +47,7 @@
         </activity>
 
         <activity
-            android:name=".PreferencesActivity"
+            android:name=".PreferenceActivity"
             android:label="@string/settings">
             <meta-data
                 android:name="android.support.PARENT_ACTIVITY"
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/DiaguardApplication.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/DiaguardApplication.java
index b7dff75..56fe25d 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/DiaguardApplication.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/DiaguardApplication.java
@@ -2,7 +2,8 @@ package com.mydiabetesprt.diabetes;
 
 import android.app.Application;
 import android.content.Context;
-import android.preference.PreferenceManager;
+
+import net.danlew.android.joda.JodaTimeAndroid;
 
 /**
  * Created by Filip on 26.08.2014.
@@ -19,6 +20,6 @@ public class DiaguardApplication extends Application {
 
         // Initialize global values
         context = getApplicationContext();
-        //JodaTimeAndroid.init(this);
+        JodaTimeAndroid.init(this);
     }
 }
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/ExportActivity.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/ExportActivity.java
index cce8795..ee9c3c6 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/ExportActivity.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/ExportActivity.java
@@ -87,7 +87,7 @@ public class ExportActivity extends ActionBarActivity {
         preferenceHelper = new PreferenceHelper(this);
 
         dateEnd = new DateTime();
-        dateStart = new DateTime().withDayOfMonth(1);
+        dateStart = dateEnd.withDayOfMonth(1);
         dateFormat = preferenceHelper.getDateFormat();
 
         getComponents();
@@ -180,9 +180,7 @@ public class ExportActivity extends ActionBarActivity {
         DatePickerFragment fragment = new DatePickerFragment() {
             @Override
             public void onDateSet(DatePicker view, int year, int month, int day) {
-                dateStart.withYear(year);
-                dateStart.withMonthOfYear(month);
-                dateStart.withDayOfMonth(day);
+                dateStart = dateStart.withYear(year).withMonthOfYear(month).withDayOfMonth(day);
                 buttonDateStart.setText(dateFormat.print(dateStart));
             }
         };
@@ -196,9 +194,7 @@ public class ExportActivity extends ActionBarActivity {
         DatePickerFragment fragment = new DatePickerFragment() {
             @Override
             public void onDateSet(DatePicker view, int year, int month, int day) {
-                dateStart.withYear(year);
-                dateStart.withMonthOfYear(month);
-                dateStart.withDayOfMonth(day);
+                dateStart = dateStart.withYear(year).withMonthOfYear(month).withDayOfMonth(day);
                 buttonDateEnd.setText(dateFormat.print(dateEnd));
             }
         };
@@ -274,8 +270,7 @@ public class ExportActivity extends ActionBarActivity {
                 DateTime dateIteration = dateStart;
 
                 // One day after last chosen day
-                DateTime dateAfter = dateEnd;
-                dateAfter.withDayOfMonth(dateAfter.dayOfMonth().get() + 1);
+                DateTime dateAfter = dateEnd.withDayOfMonth(dateEnd.dayOfMonth().get() + 1);
 
                 // Total number of days to export
                 int totalDays = Days.daysBetween(dateStart, dateEnd).getDays();
@@ -377,7 +372,7 @@ public class ExportActivity extends ActionBarActivity {
                     publishProgress(getString(R.string.day) + " " + currentDay + "/" + totalDays);
 
                     // Next day
-                    dateIteration.withDayOfMonth(dateIteration.dayOfMonth().get() + 1);
+                    dateIteration = dateIteration.withDayOfMonth(dateIteration.dayOfMonth().get() + 1);
                     currentDay++;
                 }
 
@@ -439,9 +434,7 @@ public class ExportActivity extends ActionBarActivity {
             chunk.setFont(FontFactory.getFont(FontFactory.HELVETICA, 12, Font.BOLD));
             paragraph.add(chunk);
 
-            DateTime weekEnd = new DateTime();
-            weekEnd = weekStart;
-            weekEnd.withDayOfWeek(DateTimeConstants.SUNDAY);
+            DateTime weekEnd = weekStart.withDayOfWeek(DateTimeConstants.SUNDAY);
 
             // Dates
             chunk = new Chunk("\n" + preferenceHelper.getDateFormat().print(weekStart) + " - " +
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/MainActivity.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/MainActivity.java
index e9fb376..5008d0a 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/MainActivity.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/MainActivity.java
@@ -106,7 +106,7 @@ public class MainActivity extends ActionBarActivity {
                 startActivity(new Intent(this, CalculatorActivity.class));
                 return true;
             case R.id.action_settings:
-                startActivity(new Intent(this, PreferencesActivity.class));
+                startActivity(new Intent(this, PreferenceActivity.class));
                 return true;
             case R.id.action_newevent:
                 startActivityForResult(new Intent(this, NewEventActivity.class), MainActivity.REQUEST_EVENT_CREATED);
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/NewEventActivity.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/NewEventActivity.java
index 5b415a9..a645496 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/NewEventActivity.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/NewEventActivity.java
@@ -4,19 +4,13 @@ import android.app.Activity;
 import android.app.AlertDialog;
 import android.content.DialogInterface;
 import android.content.Intent;
-import android.graphics.Bitmap;
-import android.net.Uri;
 import android.os.Bundle;
-import android.os.Environment;
-import android.provider.MediaStore;
 import android.support.v4.app.DialogFragment;
 import android.support.v7.app.ActionBarActivity;
 import android.text.Editable;
 import android.text.TextWatcher;
-import android.view.ContextMenu;
 import android.view.LayoutInflater;
 import android.view.Menu;
-import android.view.MenuInflater;
 import android.view.MenuItem;
 import android.view.View;
 import android.widget.ArrayAdapter;
@@ -37,15 +31,13 @@ import com.mydiabetesprt.diabetes.database.Measurement;
 import com.mydiabetesprt.diabetes.database.Model;
 import com.mydiabetesprt.diabetes.fragments.DatePickerFragment;
 import com.mydiabetesprt.diabetes.fragments.TimePickerFragment;
-import com.mydiabetesprt.diabetes.helpers.FileHelper;
+import com.mydiabetesprt.diabetes.helpers.Helper;
 import com.mydiabetesprt.diabetes.helpers.PreferenceHelper;
 import com.mydiabetesprt.diabetes.helpers.Validator;
 import com.mydiabetesprt.diabetes.helpers.ViewHelper;
 
 import org.joda.time.DateTime;
 
-import java.io.File;
-import java.io.IOException;
 import java.util.ArrayList;
 import java.util.List;
 
@@ -56,7 +48,8 @@ import de.keyboardsurfer.android.widget.crouton.Crouton;
  */
 public class NewEventActivity extends ActionBarActivity {
 
-    public static final String EXTRA_ID = "ID";
+    public static final String EXTRA_ENTRY = "Entry";
+    public static final String EXTRA_MEASUREMENT = "Measurement";
     public static final String EXTRA_DATE = "Date";
     static final int REQUEST_IMAGE_CAPTURE = 1;
     static final int REQUEST_TAKE_PHOTO = 1;
@@ -68,7 +61,6 @@ public class NewEventActivity extends ActionBarActivity {
 
     DateTime time;
     boolean inputWasMade;
-    Bitmap imageTemp;
     boolean mealInfoIsVisible;
 
     LinearLayout linearLayoutValues;
@@ -93,29 +85,10 @@ public class NewEventActivity extends ActionBarActivity {
 
     @Override
     public boolean onCreateOptionsMenu(Menu menu) {
-        MenuInflater inflater = getMenuInflater();
-        inflater.inflate(R.menu.formular, menu);
+        getMenuInflater().inflate(R.menu.formular, menu);
         return super.onCreateOptionsMenu(menu);
     }
 
-    @Override
-    public void onCreateContextMenu(ContextMenu menu, View v,
-                                    ContextMenu.ContextMenuInfo menuInfo) {
-        super.onCreateContextMenu(menu, v, menuInfo);
-        MenuInflater inflater = getMenuInflater();
-        inflater.inflate(R.menu.item, menu);
-    }
-
-    @Override
-    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
-        if (requestCode == REQUEST_IMAGE_CAPTURE && resultCode == RESULT_OK) {
-            Bundle extras = data.getExtras();
-            imageTemp = (Bitmap) extras.get("data");
-            imageViewCamera.setImageBitmap(imageTemp);
-            imageViewCamera.setScaleType(ImageView.ScaleType.CENTER_CROP);
-        }
-    }
-
     public void initialize() {
         dataSource = new DatabaseDataSource(this);
         preferenceHelper = new PreferenceHelper(this);
@@ -140,18 +113,31 @@ public class NewEventActivity extends ActionBarActivity {
     private void checkIntents() {
         Bundle extras = getIntent().getExtras();
         if (extras != null) {
-            if (extras.getLong(EXTRA_ID) != 0L) {
+            // Get entry and all of its measurements
+            if(extras.getLong(EXTRA_ENTRY) != 0L || extras.getLong(EXTRA_MEASUREMENT) != 0L) {
                 dataSource.open();
-                Measurement measurement = (Measurement)dataSource.get(DatabaseHelper.MEASUREMENT, extras.getLong("ID"));
-                Entry entry = (Entry)dataSource.get(DatabaseHelper.ENTRY, measurement.getEntryId());
+                Entry entry;
+                if(extras.getLong(EXTRA_ENTRY) != 0L) {
+                    entry = (Entry) dataSource.get(DatabaseHelper.ENTRY, extras.getLong(EXTRA_ENTRY));
+                }
+                else {
+                    Measurement measurement = (Measurement)dataSource.get(DatabaseHelper.MEASUREMENT, extras.getLong("ID"));
+                    entry = (Entry)dataSource.get(DatabaseHelper.ENTRY, measurement.getEntryId());
+                }
+                List<Model> measurements = dataSource.get(DatabaseHelper.MEASUREMENT, null,
+                        DatabaseHelper.ENTRY_ID + "=?", new String[]{Long.toString(entry.getId())},
+                        null, null, null, null);
                 dataSource.close();
 
                 time = entry.getDate();
-                float value = preferenceHelper.
-                        formatDefaultToCustomUnit(measurement.getCategory(), measurement.getValue());
                 editTextNotes.setText(entry.getNote());
-                addValue(measurement.getCategory(), preferenceHelper.getDecimalFormat(
-                        measurement.getCategory()).format(value));
+
+                for(Model model : measurements) {
+                    Measurement measurement = (Measurement) model;
+                    entry.getMeasurements().add(measurement);
+                    addValue(measurement.getCategory(), preferenceHelper.getDecimalFormat(
+                            measurement.getCategory()).format(measurement.getValue()));
+                }
             }
             else if(extras.getSerializable(EXTRA_DATE) != null) {
                 time = (DateTime) extras.getSerializable(EXTRA_DATE);
@@ -164,17 +150,15 @@ public class NewEventActivity extends ActionBarActivity {
     }
 
     private void setTime() {
-        buttonTime.setText(preferenceHelper.getTimeFormat().print(time));
+        buttonTime.setText(Helper.getTimeFormat().print(time));
     }
 
     private void setCategories() {
-        for(Measurement.Category category : preferenceHelper.getActiveCategories()) {
+        for(Measurement.Category category : preferenceHelper.getActiveCategories())
             addValue(category, null);
-        }
     }
 
     private void submit() {
-
         makla makla = null;
         boolean inputIsValid = true;
 
@@ -257,15 +241,21 @@ public class NewEventActivity extends ActionBarActivity {
             // Entry
             Entry entry = new Entry();
             entry.setDate(time);
-            entry.setNote(editTextNotes.getText().toString());
+            if(editTextNotes.length() > 0)
+                entry.setNote(editTextNotes.getText().toString());
             long entryId = dataSource.insert(entry);
+            // Connect measurements with entry
+            for(Measurement measurement : measurements)
+                measurement.setEntryId(entryId);
 
             // Events
             long[] ids;
+            /*
+            TODO
             Bundle extras = getIntent().getExtras();
             // Update existing
-            if (extras != null && extras.getLong(EXTRA_ID) != 0L) {
-                measurements.get(0).setId(extras.getLong(EXTRA_ID));
+            if (extras != null && extras.getLong(EXTRA_ENTRY) != 0L) {
+                measurements.get(0).setId(extras.getLong(EXTRA_ENTRY));
                 ids = new long[1];
                 ids[0] = dataSource.update(measurements.get(0));
             }
@@ -273,6 +263,9 @@ public class NewEventActivity extends ActionBarActivity {
             else {
                 ids = dataSource.insert(measurements);
             }
+            */
+
+            ids = dataSource.insert(measurements);
 
             // makla
             if(makla != null) {
@@ -387,50 +380,13 @@ public class NewEventActivity extends ActionBarActivity {
         }
     }
 
-    private File createImageFile() throws IOException {
-        // Create an image file name
-        String imageFileName = "test";
-        File storageDir = Environment.getExternalStoragePublicDirectory(
-                Environment.DIRECTORY_PICTURES);
-        File image = File.createTempFile(
-                imageFileName,  /* prefix */
-                ".jpg",         /* suffix */
-                storageDir      /* directory */
-        );
-
-        currentPhotoPath = "file:" + image.getAbsolutePath();
-        return image;
-    }
-
-    private void dispatchTakePictureIntent() {
-        Intent takePictureIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
-        // Ensure that there's a camera activity to handle the intent
-        if (takePictureIntent.resolveActivity(getPackageManager()) != null) {
-            // Create the File where the photo should go
-            File photoFile = null;
-            try {
-                photoFile = createImageFile();
-            } catch (IOException ex) {
-                // Error occurred while creating the File
-            }
-            // Continue only if the File was successfully created
-            if (photoFile != null) {
-                takePictureIntent.putExtra(MediaStore.EXTRA_OUTPUT,
-                        Uri.fromFile(photoFile));
-                startActivityForResult(takePictureIntent, REQUEST_TAKE_PHOTO);
-            }
-        }
-    }
-
     // LISTENERS
 
     public void onClickShowDatePicker (View view) {
         DialogFragment fragment = new DatePickerFragment() {
             @Override
             public void onDateSet(DatePicker view, int year, int month, int day) {
-                time.withYear(year);
-                time.withMonthOfYear(month);
-                time.withDayOfMonth(day);
+                time = time.withYear(year).withMonthOfYear(month).withDayOfMonth(day);
                 setDate();
             }
         };
@@ -444,8 +400,7 @@ public class NewEventActivity extends ActionBarActivity {
         DialogFragment fragment = new TimePickerFragment() {
             @Override
             public void onTimeSet(TimePicker view, int hourOfDay, int minute) {
-                time.withHourOfDay(hourOfDay);
-                time.withMinuteOfHour(minute);
+                time = time.withHourOfDay(hourOfDay).withMinuteOfHour(minute);
                 setTime();
             }
         };
@@ -455,25 +410,6 @@ public class NewEventActivity extends ActionBarActivity {
         fragment.show(getSupportFragmentManager(), "TimePicker");
     }
 
-    public void onClickCamera(View view) {
-        // Check if an image has already been shot
-        if(imageTemp == null) {
-            // Open camera app
-            Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
-            Uri uri = Uri.parse(FileHelper.PATH_STORAGE + "/image");
-            if (intent.resolveActivity(getPackageManager()) != null) {
-                intent.putExtra(MediaStore.EXTRA_OUTPUT, uri);
-                startActivityForResult(intent, REQUEST_IMAGE_CAPTURE);
-            }
-        }
-        else {
-            // Open context menu
-            registerForContextMenu(imageViewCamera);
-            openContextMenu(imageViewCamera);
-            unregisterForContextMenu(imageViewCamera);
-        }
-    }
-
     @Override
     public void onBackPressed() {
         if(inputWasMade) {
@@ -510,23 +446,4 @@ public class NewEventActivity extends ActionBarActivity {
                 return super.onOptionsItemSelected(item);
         }
     }
-
-    @Override
-    public boolean onContextItemSelected(MenuItem item) {
-        switch (item.getItemId()) {
-            case R.id.view:
-                Intent intent = new Intent();
-                intent.setAction(Intent.ACTION_VIEW);
-                intent.setDataAndType(Uri.parse("file://" + "/sdcard/test.jpg"), "image/*");
-                startActivity(intent);
-                return true;
-            case R.id.remove:
-                imageViewCamera.setImageDrawable(getResources().getDrawable(R.drawable.camera));
-                imageViewCamera.setScaleType(ImageView.ScaleType.FIT_CENTER);
-                imageTemp = null;
-                return true;
-            default:
-                return super.onContextItemSelected(item);
-        }
-    }
 }
\ No newline at end of file
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/PreferenceActivity.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/PreferenceActivity.java
new file mode 100644
index 0000000..274138b
--- /dev/null
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/PreferenceActivity.java
@@ -0,0 +1,48 @@
+package com.mydiabetesprt.diabetes;
+
+import android.os.Build;
+import android.os.Bundle;
+import android.view.MenuItem;
+
+/**
+ * Created by Filip on 26.10.13.
+ */
+public class PreferenceActivity extends android.preference.PreferenceActivity {
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        if (Build.VERSION.SDK_INT < 11)
+            addPreferencesFromResource(R.xml.preferences);
+        else {
+            getActionBar().setDisplayHomeAsUpEnabled(true);
+            getFragmentManager().beginTransaction()
+                    .replace(android.R.id.content, new PreferenceFragment())
+                    .commit();
+        }
+    }
+
+    @Override
+    protected  boolean isValidFragment(String fragmentName) {
+        // Needed to prevent RuntimeException on API >19
+        return true;
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        switch(item.getItemId()) {
+            case android.R.id.home:
+                finish();
+            default:
+                return super.onOptionsItemSelected(item);
+        }
+    }
+
+    public static class PreferenceFragment extends android.preference.PreferenceFragment {
+        @Override
+        public void onCreate(Bundle savedInstanceState) {
+            super.onCreate(savedInstanceState);
+            addPreferencesFromResource(R.xml.preferences);
+        }
+    }
+}
\ No newline at end of file
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/PreferencesActivity.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/PreferencesActivity.java
deleted file mode 100644
index 2e7a196..0000000
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/PreferencesActivity.java
+++ /dev/null
@@ -1,40 +0,0 @@
-package com.mydiabetesprt.diabetes;
-
-import android.os.Build;
-import android.os.Bundle;
-import android.preference.PreferenceActivity;
-import android.preference.PreferenceFragment;
-
-/**
- * Created by Filip on 26.10.13.
- */
-public class PreferencesActivity extends PreferenceActivity {
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        setTitle(getString(R.string.settings));
-
-        if(Build.VERSION.SDK_INT < 11)
-            addPreferencesFromResource(R.xml.preferences);
-        else
-            getFragmentManager().beginTransaction()
-                    .replace(android.R.id.content, new PreferenceFragmentMain())
-                    .commit();
-    }
-
-    @Override
-    protected  boolean isValidFragment(String fragmentName) {
-        // Needed to prevent RuntimeException on API >19
-        return true;
-    }
-
-    public static class PreferenceFragmentMain extends PreferenceFragment {
-        @Override
-        public void onCreate(Bundle savedInstanceState) {
-            super.onCreate(savedInstanceState);
-            addPreferencesFromResource(R.xml.preferences);
-        }
-    }
-}
\ No newline at end of file
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/DatabaseDataSource.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/DatabaseDataSource.java
index c65b548..06683e4 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/DatabaseDataSource.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/DatabaseDataSource.java
@@ -8,6 +8,8 @@ import android.database.sqlite.SQLiteDatabase;
 
 import com.mydiabetesprt.diabetes.helpers.Helper;
 
+import org.joda.time.DateTime;
+
 import java.util.ArrayList;
 import java.util.List;
 
@@ -95,6 +97,22 @@ public class DatabaseDataSource {
         return entry;
     }
 
+    public Entry getEntryWithMeasurement(Cursor cursor) {
+        Entry entry = new Entry();
+        entry.setId(Integer.parseInt(cursor.getString(0)));
+        entry.setDate(cursor.getString(1));
+        entry.setNote(cursor.getString(2));
+
+        Measurement measurement = new Measurement();
+        measurement.setId(Integer.parseInt(cursor.getString(3)));
+        measurement.setValue(Float.parseFloat(cursor.getString(4)));
+        measurement.setCategory(Measurement.Category.valueOf(cursor.getString(5)));
+        measurement.setEntryId(Integer.parseInt(cursor.getString(6)));
+        entry.getMeasurements().add(measurement);
+
+        return entry;
+    }
+
     public Measurement getMeasurement(Cursor cursor) {
         Measurement measurement = new Measurement();
         measurement.setId(Integer.parseInt(cursor.getString(0)));
@@ -153,25 +171,43 @@ public class DatabaseDataSource {
         return objects;
     }
 
-    public List<Model> getJoin(String tableOne, String tableTwo, String[] columns, String selection, String[] selectionArgs,
-                           String groupBy, String having, String orderBy, String limit) {
-        //String query = String.format("SELECT %s FROM %s INNER JOIN %s ON %s.%s = %s.%s ORDER BY entry.date LIMIT 1",
-        //        Helper.toStringDelimited(columns, ','), tableOne, tableTwo, tableOne, DatabaseHelper.ID, tableTwo, DatabaseHelper.ID);
-        String query = "SELECT * FROM entry INNER JOIN measurement ON measurement.entryId = entry._id ORDER BY entry.date LIMIT 1";
+    public Entry getLatestBloodSugar() {
+        String query = String.format("SELECT * FROM %2$s INNER JOIN %5$s ON %5$s.%3$s = %2$s.%1$s ORDER BY %2$s.%4$s DESC LIMIT 1",
+                DatabaseHelper.ID, DatabaseHelper.ENTRY, DatabaseHelper.ENTRY_ID, DatabaseHelper.DATE, DatabaseHelper.MEASUREMENT);
         Cursor cursor = db.rawQuery(query, null);
+        cursor.moveToFirst();
+        Entry entry = getEntryWithMeasurement(cursor);
+        cursor.close();
+        return entry;
+    }
 
-        List<Model> objects = new ArrayList<Model>();
+    public List<Entry> getEntriesOfDay(DateTime day, Measurement.Category category) {
+        String startOfDay = Helper.getDateDatabaseFormat().print(day.withTimeAtStartOfDay());
+        String endOfDay = Helper.getDateDatabaseFormat().print(day.withTime(23, 59, 59, 999));
+        String query = "SELECT * FROM " + DatabaseHelper.ENTRY +
+                        " INNER JOIN " + DatabaseHelper.MEASUREMENT +
+                        " ON " + DatabaseHelper.MEASUREMENT + "." + DatabaseHelper.ENTRY_ID +
+                        " = " + DatabaseHelper.ENTRY + "." + DatabaseHelper.ID +
+                        " AND " + DatabaseHelper.ENTRY + "." + DatabaseHelper.DATE +
+                        " >= Datetime('" + startOfDay + "') " +
+                        " AND " + DatabaseHelper.ENTRY + "." + DatabaseHelper.DATE +
+                        " <= Datetime('" + endOfDay + "') " +
+                        " AND " + DatabaseHelper.MEASUREMENT + "." + DatabaseHelper.CATEGORY +
+                        " = '" + category + "';";
+        Cursor cursor = db.rawQuery(query, null);
+
+        List<Entry> entries = new ArrayList<Entry>();
         if (cursor.moveToFirst()) {
             while(!cursor.isAfterLast()) {
-
-
+                entries.add(getEntryWithMeasurement(cursor));
                 cursor.moveToNext();
             }
         }
-        return objects;
+        cursor.close();
+        return entries;
     }
 
-    public int count(String table, String[] columns, String selection, String selectionArg) {
+    public int count(String table, String selection, String selectionArg) {
         String query = "SELECT COUNT(*) FROM " + table + " WHERE " + selection + " = '" + selectionArg + "';";
         Cursor cursor = db.rawQuery(query, null);
         cursor.moveToFirst();
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/Entry.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/Entry.java
index 4487fb0..12d9682 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/Entry.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/Entry.java
@@ -4,12 +4,17 @@ import com.mydiabetesprt.diabetes.helpers.Helper;
 
 import org.joda.time.DateTime;
 
+import java.util.ArrayList;
+import java.util.List;
+
 /**
  * Created by Filip on 09.08.2014.
  */
 public class Entry extends Model {
+
     private DateTime date;
     private String note;
+    private List<Measurement> measurements;
 
     public DateTime getDate() {
         return date;
@@ -31,6 +36,12 @@ public class Entry extends Model {
         this.note = note;
     }
 
+    public List<Measurement> getMeasurements() {
+        if(measurements == null)
+            measurements = new ArrayList<Measurement>();
+        return measurements;
+    }
+
     @Override
     public String getTableName() {
         return DatabaseHelper.ENTRY;
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/LogFragment.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/LogFragment.java
index 8f0a440..b0f09c9 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/LogFragment.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/LogFragment.java
@@ -182,7 +182,7 @@ public class LogFragment extends Fragment {
 
     private void editEntry(Entry entry) {
         Intent intent = new Intent(getActivity(), NewEventActivity.class);
-        intent.putExtra(NewEventActivity.EXTRA_ID, entry.getId());
+        intent.putExtra(NewEventActivity.EXTRA_ENTRY, entry.getId());
         startActivity(intent);
     }
 
@@ -221,12 +221,12 @@ public class LogFragment extends Fragment {
     // LISTENERS
 
     public void previousDay() {
-        time.withDayOfMonth(time.getDayOfMonth() - 1);
+        time = time.withDayOfMonth(time.getDayOfMonth() - 1);
         updateListView();
     }
 
     public void nextDay() {
-        time.withDayOfMonth(time.getDayOfMonth() + 1);
+        time = time.withDayOfMonth(time.getDayOfMonth() + 1);
         updateListView();
     }
 
@@ -234,9 +234,7 @@ public class LogFragment extends Fragment {
         DialogFragment fragment = new DatePickerFragment() {
             @Override
             public void onDateSet(DatePicker view, int year, int month, int day) {
-                time.withYear(year);
-                time.withMonthOfYear(month);
-                time.withDayOfMonth(day);
+                time = time.withYear(year).withMonthOfYear(month).withDayOfMonth(day);
                 updateListView();
             }
         };
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/MainFragment.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/MainFragment.java
index 4d1945d..2df0a13 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/MainFragment.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/MainFragment.java
@@ -10,11 +10,13 @@ import android.widget.TextView;
 import com.mydiabetesprt.diabetes.R;
 import com.mydiabetesprt.diabetes.database.DatabaseDataSource;
 import com.mydiabetesprt.diabetes.database.DatabaseHelper;
+import com.mydiabetesprt.diabetes.database.Entry;
 import com.mydiabetesprt.diabetes.database.Measurement;
 import com.mydiabetesprt.diabetes.helpers.Helper;
 import com.mydiabetesprt.diabetes.helpers.PreferenceHelper;
 
 import org.joda.time.DateTime;
+import org.joda.time.Minutes;
 
 public class MainFragment extends Fragment {
 
@@ -79,16 +81,12 @@ public class MainFragment extends Fragment {
 
         int countBloodSugarMeasurements = dataSource.count(
                 DatabaseHelper.MEASUREMENT,
-                null,
                 DatabaseHelper.CATEGORY,
                 Measurement.Category.BloodSugar.toString());
 
         if(countBloodSugarMeasurements > 0) {
             textViewLatestValue.setTextSize(60);
-            dataSource.open();
-            dataSource.getJoin(null, null, null, null, null, null, null, null, null);
-            dataSource.close();
-            //updateLatest();
+            updateLatest();
             //updateDashboard();
         }
         else {
@@ -101,32 +99,32 @@ public class MainFragment extends Fragment {
         dataSource.close();
     }
 
-    /*
     private void updateLatest() {
-        Event latestEvent = dataSource.getLatestEvent(Event.Category.BloodSugar);
+        Entry entry = dataSource.getLatestBloodSugar();
+        Measurement latestBloodSugar = entry.getMeasurements().get(0);
 
         // Value
         float value = preferenceHelper.
-                formatDefaultToCustomUnit(Measurement.Category.BloodSugar, latestEvent.getValue());
+                formatDefaultToCustomUnit(Measurement.Category.BloodSugar, latestBloodSugar.getValue());
         textViewLatestValue.setText(preferenceHelper.
                 getDecimalFormat(Measurement.Category.BloodSugar).format(value));
 
         // Highlighting
         if(preferenceHelper.limitsAreHighlighted()) {
-            if(latestEvent.getValue() > preferenceHelper.getLimitHyperglycemia())
+            if(latestBloodSugar.getValue() > preferenceHelper.getLimitHyperglycemia())
                 textViewLatestValue.setTextColor(getResources().getColor(R.color.red));
-            else if(latestEvent.getValue() < preferenceHelper.getLimitHypoglycemia())
+            else if(latestBloodSugar.getValue() < preferenceHelper.getLimitHypoglycemia())
                 textViewLatestValue.setTextColor(getResources().getColor(R.color.blue));
         }
 
         // Unit
-        textViewLatestUnit.setText(preferenceHelper.getUnitAcronym(Event.Category.BloodSugar));
+        textViewLatestUnit.setText(preferenceHelper.getUnitAcronym(Measurement.Category.BloodSugar));
 
         // Time
         textViewLatestTime.setText(preferenceHelper.
-                getDateAndTimeFormat().format(latestEvent.getDate().getTime()) + " | ");
-        int differenceInMinutes =
-                Helper.getDifferenceInMinutes(latestEvent.getDate(), Calendar.getInstance());
+                getDateFormat().print(entry.getDate()) + " " +
+                Helper.getTimeFormat().print(entry.getDate()) + " | ");
+        int differenceInMinutes = Minutes.minutesBetween(entry.getDate(), new DateTime()).getMinutes();
 
         // Highlight if last measurement is more than eight hours ago
         textViewLatestAgo.setTextColor(getResources().getColor(R.color.green));
@@ -136,6 +134,7 @@ public class MainFragment extends Fragment {
         textViewLatestAgo.setText(Helper.getTextAgo(getActivity(), differenceInMinutes));
     }
 
+    /*
     private void updateDashboard() {
         updateToday();
         updateAverage();
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/TimelineFragment.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/TimelineFragment.java
index 7beb33c..a86279d 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/TimelineFragment.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/TimelineFragment.java
@@ -11,6 +11,7 @@ import android.view.LayoutInflater;
 import android.view.MenuItem;
 import android.view.View;
 import android.view.ViewGroup;
+import android.widget.Button;
 import android.widget.DatePicker;
 import android.widget.ImageView;
 import android.widget.LinearLayout;
@@ -19,6 +20,7 @@ import com.mydiabetesprt.diabetes.MainActivity;
 import com.mydiabetesprt.diabetes.NewEventActivity;
 import com.mydiabetesprt.diabetes.R;
 import com.mydiabetesprt.diabetes.database.DatabaseDataSource;
+import com.mydiabetesprt.diabetes.database.Entry;
 import com.mydiabetesprt.diabetes.database.Measurement;
 import com.mydiabetesprt.diabetes.helpers.ChartHelper;
 import com.mydiabetesprt.diabetes.helpers.Helper;
@@ -27,6 +29,7 @@ import com.mydiabetesprt.diabetes.helpers.PreferenceHelper;
 import org.achartengine.model.XYSeries;
 import org.achartengine.renderer.XYSeriesRenderer;
 import org.joda.time.DateTime;
+import org.joda.time.format.DateTimeFormatter;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -89,8 +92,8 @@ public class TimelineFragment extends Fragment {
         for(int item = 0; item < categories.length; item++)
             activeCategories[item] = preferenceHelper.isCategoryActive(categories[item]);
 
-        //chartHelperChart = new ChartHelper(getActivity(), ChartHelper.ChartType.ScatterChart);
-        //chartHelperTable = new ChartHelper(getActivity(), ChartHelper.ChartType.LineChart);
+        chartHelperChart = new ChartHelper(getActivity(), ChartHelper.ChartType.ScatterChart);
+        chartHelperTable = new ChartHelper(getActivity(), ChartHelper.ChartType.LineChart);
 
         getComponents();
         initializeGUI();
@@ -133,10 +136,9 @@ public class TimelineFragment extends Fragment {
     }
 
     private void updateContent() {
-        /*
-        SimpleDateFormat format = preferenceHelper.getDateFormat();
-        String weekDay = getResources().getStringArray(R.array.weekdays)[time.get(Calendar.DAY_OF_WEEK)-1];
-        ((Button)getView().findViewById(R.id.button_date)).setText(weekDay.substring(0,2) + "., " + format.format(time.getTime()));
+        DateTimeFormatter format = preferenceHelper.getDateFormat();
+        String weekDay = getResources().getStringArray(R.array.weekdays)[time.dayOfWeek().get()-1];
+        ((Button)getView().findViewById(R.id.button_date)).setText(weekDay.substring(0,2) + "., " + format.print(time));
 
         updateChart();
 
@@ -147,7 +149,6 @@ public class TimelineFragment extends Fragment {
         }
         else
             getView().findViewById(R.id.table).setVisibility(View.GONE);
-            */
     }
 
     //region Chart
@@ -207,31 +208,28 @@ public class TimelineFragment extends Fragment {
             chartHelperChart.seriesDataset.addSeries(seriesBloodSugarHypo);
         }
 
-
-        /*
         dataSource.open();
-        HashMap<Entry, List<Measurement>> data = new HashMap<Entry, List<Measurement>>();
-
-        List<Measurement> measurements = dataSource.getEventsOfDay(time, Measurement.Category.BloodSugar);
+        List<Entry> entries = dataSource.getEntriesOfDay(time, Measurement.Category.BloodSugar);
         dataSource.close();
 
-        for(Measurement measurement : measurements) {
-            float x_value = Helper.formatCalendarToHourMinutes(event.getDate());
+        for(Entry entry : entries) {
+            Measurement measurement = entry.getMeasurements().get(0);
+            float x_value = Helper.formatCalendarToHourMinutes(entry.getDate());
 
             float y_value = preferenceHelper.
-                    formatDefaultToCustomUnit(Event.Category.BloodSugar, event.getValue());
+                    formatDefaultToCustomUnit(Measurement.Category.BloodSugar, measurement.getValue());
 
             // Adjust y axis
             if(y_value > chartHelperChart.renderer.getYAxisMax()) {
                 chartHelperChart.renderer.setYAxisMax(preferenceHelper.
-                        formatDefaultToCustomUnit(Event.Category.BloodSugar, event.getValue() + 30));
+                        formatDefaultToCustomUnit(Measurement.Category.BloodSugar, measurement.getValue() + 30));
             }
 
             // Add value
             if(preferenceHelper.limitsAreHighlighted()) {
-                if(event.getValue() > preferenceHelper.getLimitHyperglycemia())
+                if(measurement.getValue() > preferenceHelper.getLimitHyperglycemia())
                     seriesBloodSugarHyper.add(x_value, y_value);
-                else if(event.getValue() < preferenceHelper.getLimitHypoglycemia())
+                else if(measurement.getValue() < preferenceHelper.getLimitHypoglycemia())
                     seriesBloodSugarHypo.add(x_value, y_value);
                 else
                     seriesBloodSugar.add(x_value, y_value);
@@ -240,7 +238,6 @@ public class TimelineFragment extends Fragment {
                 seriesBloodSugar.add(x_value, y_value);
             }
         }
-        */
     }
 
     private void initializeChart() {
@@ -288,7 +285,6 @@ public class TimelineFragment extends Fragment {
         // Table
         int activeCategoryPosition = 0;
         for(int item = 0; item < activeCategories.length; item++) {
-
             if(activeCategories[item] && item != Measurement.Category.BloodSugar.ordinal()) {
                 Measurement.Category category = Measurement.Category.values()[item];
 
@@ -336,10 +332,10 @@ public class TimelineFragment extends Fragment {
             if(activeCategories[position] && position != Measurement.Category.BloodSugar.ordinal())
                 checkedCategoriesList.add(Measurement.Category.values()[position]);
         }
-        /*
+
         dataSource.open();
-        float[][] values = dataSource.getAverageDataTable(time,
-                checkedCategoriesList.toArray(new Measurement.Category[checkedCategoriesList.size()]), 12);
+        //float[][] values = dataSource.getAverageDataTable(time,
+        //        checkedCategoriesList.toArray(new Measurement.Category[checkedCategoriesList.size()]), 12);
         dataSource.close();
 
         for(int categoryPosition = 0; categoryPosition < checkedCategoriesList.size(); categoryPosition++) {
@@ -347,6 +343,7 @@ public class TimelineFragment extends Fragment {
             XYSeries series = new XYSeries(category.name());
             chartHelperTable.seriesDataset.addSeries(series);
             for(int hour = 0; hour < 12; hour++) {
+                /*
                 float value = values[categoryPosition][hour];
                 if(value > 0) {
                     float x_value = (hour * 2) + 1;
@@ -357,9 +354,9 @@ public class TimelineFragment extends Fragment {
                     series.add(x_value, y_value);
                     series.addAnnotation(valueString, x_value, y_value);
                 }
+                */
             }
         }
-        */
     }
 
     private void initializeTable() {
@@ -374,12 +371,12 @@ public class TimelineFragment extends Fragment {
     //region Listeners
 
     public void previousDay() {
-        time.withDayOfMonth(time.getDayOfMonth() - 1);
+        time = time.withDayOfMonth(time.getDayOfMonth() - 1);
         updateContent();
     }
 
     public void nextDay() {
-        time.withDayOfMonth(time.getDayOfMonth() + 1);
+        time = time.withDayOfMonth(time.getDayOfMonth() + 1);
         updateContent();
     }
 
@@ -387,9 +384,7 @@ public class TimelineFragment extends Fragment {
         DialogFragment fragment = new DatePickerFragment() {
             @Override
             public void onDateSet(DatePicker view, int year, int month, int day) {
-                time.withYear(year);
-                time.withMonthOfYear(month);
-                time.withDayOfMonth(day);
+                time = time.withYear(year).withMonthOfYear(month).withDayOfMonth(day);
                 updateContent();
             }
         };
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/helpers/FileHelper.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/helpers/FileHelper.java
index 3128f0a..5f9496f 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/helpers/FileHelper.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/helpers/FileHelper.java
@@ -246,8 +246,7 @@ public class FileHelper {
                 DateTime dateIteration = dateStart;
 
                 // One day after last chosen day
-                DateTime dateAfter = dateEnd;
-                dateAfter.withDayOfMonth(dateAfter.dayOfMonth().get() + 1);
+                DateTime dateAfter = dateEnd.plusDays(1);
 
                 // Total number of days to export
                 int totalDays = Days.daysBetween(dateStart, dateEnd).getDays();
@@ -349,7 +348,7 @@ public class FileHelper {
                     publishProgress(context.getString(R.string.day) + " " + currentDay + "/" + totalDays);
 
                     // Next day
-                    dateIteration.withDayOfMonth(dateIteration.dayOfMonth().get() + 1);
+                    dateIteration = dateIteration.plusDays(1);
                     currentDay++;
                 }
 
@@ -402,8 +401,7 @@ public class FileHelper {
             paragraph.add(chunk);
 
             DateTime weekEnd = new DateTime();
-            weekEnd = weekStart;
-            weekEnd.withDayOfWeek(DateTimeConstants.SUNDAY);
+            weekEnd = weekStart.withDayOfWeek(DateTimeConstants.SUNDAY);
 
             // Dates
             chunk = new Chunk("\n" + preferenceHelper.getDateFormat().print(weekStart) + " - " +
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/helpers/PreferenceHelper.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/helpers/PreferenceHelper.java
index 819ea60..5781b94 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/helpers/PreferenceHelper.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/helpers/PreferenceHelper.java
@@ -57,10 +57,6 @@ public class PreferenceHelper {
 
     // DATES
 
-    public DateTimeFormatter getDateAndTimeFormat() {
-        return DateTimeFormat.forPattern(getDateFormat().toString() + " " + getTimeFormat().toString());
-    }
-
     public DateTimeFormatter getDateFormat() {
         String dateString = sharedPreferences.getString("dateformat",
                 context.getResources().getString(R.string.dateformat_default));
@@ -72,10 +68,6 @@ public class PreferenceHelper {
         return DateTimeFormat.forPattern(dateString);
     }
 
-    public DateTimeFormatter getTimeFormat() {
-        return DateTimeFormat.forPattern("HH:mm");
-    }
-
     // BLOOD SUGAR
 
     public float getTargetValue() {
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/preferences/BackupPreference.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/preferences/BackupPreference.java
index 2a0635b..04d295e 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/preferences/BackupPreference.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/preferences/BackupPreference.java
@@ -10,6 +10,7 @@ import android.util.AttributeSet;
 import com.mydiabetesprt.diabetes.R;
 import com.mydiabetesprt.diabetes.database.DatabaseDataSource;
 import com.mydiabetesprt.diabetes.helpers.FileHelper;
+import com.mydiabetesprt.diabetes.helpers.Helper;
 import com.mydiabetesprt.diabetes.helpers.PreferenceHelper;
 import com.mydiabetesprt.diabetes.helpers.ViewHelper;
 
@@ -88,7 +89,8 @@ public class BackupPreference extends DialogPreference {
         for(int position = 0; position < csvArray.length; position++) {
             String dateString = csvArray[position].substring(6, csvArray[position].lastIndexOf("."));
             DateTime date = DateTimeFormat.forPattern("yyyyMMddHHmmss").parseDateTime(dateString);
-            csvArrayDates[position] = preferenceHelper.getDateAndTimeFormat().print(date);
+            csvArrayDates[position] = preferenceHelper.getDateFormat().print(date) + " " +
+                    Helper.getTimeFormat().print(date);
         }
 
         AlertDialog.Builder builder = new AlertDialog.Builder(activity);
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/preferences/CleanUpPreference.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/preferences/CleanUpPreference.java
index 1e65af3..72f779c 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/preferences/CleanUpPreference.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/preferences/CleanUpPreference.java
@@ -57,13 +57,11 @@ public class CleanUpPreference extends DialogPreference {
 
     @Override
     protected void onDialogClosed(boolean positiveResult) {
-
         if(positiveResult) {
-
-            final DateTime date = new DateTime();
-            date.withYear(datePicker.getYear());
-            date.withMonthOfYear(datePicker.getMonth());
-            date.withDayOfMonth(datePicker.getDayOfMonth());
+            final DateTime date = new DateTime()
+                    .withYear(datePicker.getYear())
+                    .withMonthOfYear(datePicker.getMonth())
+                    .withDayOfMonth(datePicker.getDayOfMonth());
 
             /*
             dataSource.open();
diff --git a/Diaguard/src/main/res/layout/fragment_timeline.xml b/Diaguard/src/main/res/layout/fragment_timeline.xml
index 81041eb..e830bbe 100644
--- a/Diaguard/src/main/res/layout/fragment_timeline.xml
+++ b/Diaguard/src/main/res/layout/fragment_timeline.xml
@@ -3,8 +3,7 @@
 <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
     android:layout_width="fill_parent"
     android:layout_height="fill_parent"
-    android:orientation="vertical"
-    android:background="@color/gray_lt">
+    android:orientation="vertical">
 
     <LinearLayout android:id="@+id/toolbar"
         android:layout_width="fill_parent"
diff --git a/Diaguard/src/main/res/menu/item.xml b/Diaguard/src/main/res/menu/item.xml
deleted file mode 100644
index 10578ef..0000000
--- a/Diaguard/src/main/res/menu/item.xml
+++ /dev/null
@@ -1,10 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<menu xmlns:android="http://schemas.android.com/apk/res/android">
-    <item
-        android:id="@+id/view"
-        android:title="@string/view"/>
-    <item
-        android:id="@+id/remove"
-        android:title="@string/remove"/>
-</menu>
\ No newline at end of file
diff --git a/Diaguard/src/main/res/xml/headers.xml b/Diaguard/src/main/res/xml/headers.xml
deleted file mode 100644
index be94c45..0000000
--- a/Diaguard/src/main/res/xml/headers.xml
+++ /dev/null
@@ -1,13 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<preference-headers xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <header
-        android:fragment="com.mydiabetesprt.diabetes.PreferencesActivity$PreferenceFragmentApplication"
-        android:title="@string/application"/>
-
-    <header
-        android:fragment="com.mydiabetesprt.diabetes.PreferencesActivity$PreferenceFragmentTherapy"
-        android:title="@string/therapy"/>
-
-</preference-headers>
\ No newline at end of file
diff --git a/Diaguard/src/main/res/xml/preferences.xml b/Diaguard/src/main/res/xml/preferences.xml
index 33c6659..a9fbc0a 100644
--- a/Diaguard/src/main/res/xml/preferences.xml
+++ b/Diaguard/src/main/res/xml/preferences.xml
@@ -2,134 +2,115 @@
 
 <PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">
 
-    <PreferenceScreen
-        android:key="preference_application"
-        android:title="@string/application">
-
-        <PreferenceCategory
-            android:title="@string/general">
-
-            <com.mydiabetesprt.diabetes.preferences.CategoryPreference
-                android:key="categories"
-                android:title="@string/categories_active"
-                android:entries="@array/categories"
-                android:entryValues="@array/categories"/>
-
-            <ListPreference
-                android:key="dateformat"
-                android:title="@string/dateformat"
-                android:entries="@array/dateformat"
-                android:entryValues="@array/dateformat"
-                android:defaultValue="@string/dateformat_default"/>
-
-            <ListPreference
-                android:key="start_fragment"
-                android:title="@string/startscreen"
-                android:entries="@array/startscreens"
-                android:entryValues="@array/startscreens_values"
-                android:defaultValue="0"/>
-
-        </PreferenceCategory>
-
-        <PreferenceCategory
-            android:title="@string/data">
-
-            <com.mydiabetesprt.diabetes.preferences.CleanUpPreference
-                android:key="cleanup"
-                android:title="@string/cleanup"/>
-
-            <com.mydiabetesprt.diabetes.preferences.BackupPreference
-                android:key="backup"
-                android:title="@string/backup"/>
-
-        </PreferenceCategory>
-
-    </PreferenceScreen>
-
-    <PreferenceScreen
-        android:key="preference_therapy"
-        android:title="@string/therapy">
-
-        <PreferenceCategory
-            android:title="@string/units">
-
-            <ListPreference
-                android:key="unit_bloodsugar"
-                android:title="@string/bloodsugar"
-                android:entries="@array/bloodsugar_units"
-                android:entryValues="@array/bloodsugar_units_values"
-                android:defaultValue="1"/>
-
-            <ListPreference
-                android:key="unit_meal"
-                android:title="@string/meal"
-                android:entries="@array/meal_units"
-                android:entryValues="@array/meal_units_values"
-                android:defaultValue="0.1"/>
-
-            <ListPreference
-                android:key="unit_hba1c"
-                android:title="@string/hba1c"
-                android:entries="@array/hba1c_units"
-                android:entryValues="@array/hba1c_units_values"
-                android:defaultValue="1"/>
-
-            <ListPreference
-                android:key="unit_weight"
-                android:title="@string/weight"
-                android:entries="@array/weight_units"
-                android:entryValues="@array/weight_units_values"
-                android:defaultValue="1"/>
-
-        </PreferenceCategory>
-
-        <PreferenceCategory
-            android:title="@string/pref_therapy_targets">
-
-            <com.mydiabetesprt.diabetes.preferences.BloodSugarPreference
-                android:key="target"
-                android:title="@string/pref_therapy_targets_target"
-                android:dialogTitle="@string/pref_therapy_targets_target"
-                android:defaultValue="120"
-                android:inputType="number"/>
-
-            <com.mydiabetesprt.diabetes.preferences.BloodSugarPreference
-                android:key="correction_value"
-                android:title="@string/correction"
-                android:dialogTitle="@string/correction"
-                android:defaultValue="40"
-                android:inputType="number"/>
-
-            <com.mydiabetesprt.diabetes.preferences.FactorPreference
-                android:key="factors"
-                android:title="@string/factors"/>
-
-        </PreferenceCategory>
-
-        <PreferenceCategory
-            android:title="@string/pref_therapy_limits">
-
-            <CheckBoxPreference
-                android:key="targets_highlight"
-                android:title="@string/pref_therapy_targets_highlight"
-                android:defaultValue="true"/>
-
-            <com.mydiabetesprt.diabetes.preferences.BloodSugarPreference
-                android:key="hyperclycemia"
-                android:title="@string/pref_therapy_targets_hyperclycemia"
-                android:dialogTitle="@string/pref_therapy_targets_hyperclycemia"
-                android:defaultValue="180"
-                android:inputType="number"/>
-
-            <com.mydiabetesprt.diabetes.preferences.BloodSugarPreference
-                android:key="hypoclycemia"
-                android:title="@string/pref_therapy_targets_hypoclycemia"
-                android:dialogTitle="@string/pref_therapy_targets_hypoclycemia"
-                android:defaultValue="60"
-                android:inputType="number"/>
-
-        </PreferenceCategory>
-
-    </PreferenceScreen>
+    <PreferenceCategory
+        android:title="@string/general">
+
+        <com.mydiabetesprt.diabetes.preferences.CategoryPreference
+            android:key="categories"
+            android:title="@string/categories_active"
+            android:entries="@array/categories"
+            android:entryValues="@array/categories"/>
+
+        <ListPreference
+            android:key="dateformat"
+            android:title="@string/dateformat"
+            android:entries="@array/dateformat"
+            android:entryValues="@array/dateformat"
+            android:defaultValue="@string/dateformat_default"/>
+
+    </PreferenceCategory>
+
+    <PreferenceCategory
+        android:title="@string/data">
+
+        <com.mydiabetesprt.diabetes.preferences.CleanUpPreference
+            android:key="cleanup"
+            android:title="@string/cleanup"/>
+
+        <com.mydiabetesprt.diabetes.preferences.BackupPreference
+            android:key="backup"
+            android:title="@string/backup"/>
+
+    </PreferenceCategory>
+
+    <PreferenceCategory
+        android:title="@string/units">
+
+        <ListPreference
+            android:key="unit_bloodsugar"
+            android:title="@string/bloodsugar"
+            android:entries="@array/bloodsugar_units"
+            android:entryValues="@array/bloodsugar_units_values"
+            android:defaultValue="1"/>
+
+        <ListPreference
+            android:key="unit_meal"
+            android:title="@string/meal"
+            android:entries="@array/meal_units"
+            android:entryValues="@array/meal_units_values"
+            android:defaultValue="0.1"/>
+
+        <ListPreference
+            android:key="unit_hba1c"
+            android:title="@string/hba1c"
+            android:entries="@array/hba1c_units"
+            android:entryValues="@array/hba1c_units_values"
+            android:defaultValue="1"/>
+
+        <ListPreference
+            android:key="unit_weight"
+            android:title="@string/weight"
+            android:entries="@array/weight_units"
+            android:entryValues="@array/weight_units_values"
+            android:defaultValue="1"/>
+
+    </PreferenceCategory>
+
+    <PreferenceCategory
+        android:title="@string/pref_therapy_targets">
+
+        <com.mydiabetesprt.diabetes.preferences.BloodSugarPreference
+            android:key="target"
+            android:title="@string/pref_therapy_targets_target"
+            android:dialogTitle="@string/pref_therapy_targets_target"
+            android:defaultValue="120"
+            android:inputType="number"/>
+
+        <com.mydiabetesprt.diabetes.preferences.BloodSugarPreference
+            android:key="correction_value"
+            android:title="@string/correction"
+            android:dialogTitle="@string/correction"
+            android:defaultValue="40"
+            android:inputType="number"/>
+
+        <com.mydiabetesprt.diabetes.preferences.FactorPreference
+            android:key="factors"
+            android:title="@string/factors"/>
+
+    </PreferenceCategory>
+
+    <PreferenceCategory
+        android:title="@string/pref_therapy_limits">
+
+        <CheckBoxPreference
+            android:key="targets_highlight"
+            android:title="@string/pref_therapy_targets_highlight"
+            android:defaultValue="true"/>
+
+        <com.mydiabetesprt.diabetes.preferences.BloodSugarPreference
+            android:key="hyperclycemia"
+            android:title="@string/pref_therapy_targets_hyperclycemia"
+            android:dialogTitle="@string/pref_therapy_targets_hyperclycemia"
+            android:defaultValue="180"
+            android:inputType="number"/>
+
+        <com.mydiabetesprt.diabetes.preferences.BloodSugarPreference
+            android:key="hypoclycemia"
+            android:title="@string/pref_therapy_targets_hypoclycemia"
+            android:dialogTitle="@string/pref_therapy_targets_hypoclycemia"
+            android:defaultValue="60"
+            android:inputType="number"/>
+
+    </PreferenceCategory>
 
 </PreferenceScreen>
\ No newline at end of file
diff --git a/Diaguard/src/main/res/xml/preferences_application.xml b/Diaguard/src/main/res/xml/preferences_application.xml
deleted file mode 100644
index 376b236..0000000
--- a/Diaguard/src/main/res/xml/preferences_application.xml
+++ /dev/null
@@ -1,43 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <PreferenceCategory
-        android:title="@string/general">
-
-        <com.mydiabetesprt.diabetes.preferences.CategoryPreference
-            android:key="categories"
-            android:title="@string/categories_active"
-            android:entries="@array/categories"
-            android:entryValues="@array/categories"/>
-
-        <ListPreference
-            android:key="dateformat"
-            android:title="@string/dateformat"
-            android:entries="@array/dateformat"
-            android:entryValues="@array/dateformat"
-            android:defaultValue="@string/dateformat_default"/>
-
-        <ListPreference
-            android:key="start_fragment"
-            android:title="@string/startscreen"
-            android:entries="@array/startscreens"
-            android:entryValues="@array/startscreens_values"
-            android:defaultValue="0"/>
-
-    </PreferenceCategory>
-
-    <PreferenceCategory
-        android:title="@string/data">
-
-        <com.mydiabetesprt.diabetes.preferences.CleanUpPreference
-            android:key="cleanup"
-            android:title="@string/cleanup"/>
-
-        <com.mydiabetesprt.diabetes.preferences.BackupPreference
-            android:key="backup"
-            android:title="@string/backup"/>
-
-    </PreferenceCategory>
-
-</PreferenceScreen>
\ No newline at end of file
diff --git a/Diaguard/src/main/res/xml/preferences_therapy.xml b/Diaguard/src/main/res/xml/preferences_therapy.xml
deleted file mode 100644
index eec4586..0000000
--- a/Diaguard/src/main/res/xml/preferences_therapy.xml
+++ /dev/null
@@ -1,85 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <PreferenceCategory
-        android:title="@string/units">
-
-        <ListPreference
-            android:key="unit_bloodsugar"
-            android:title="@string/bloodsugar"
-            android:entries="@array/bloodsugar_units"
-            android:entryValues="@array/bloodsugar_units_values"
-            android:defaultValue="1"/>
-
-        <ListPreference
-            android:key="unit_meal"
-            android:title="@string/meal"
-            android:entries="@array/meal_units"
-            android:entryValues="@array/meal_units_values"
-            android:defaultValue="0.1"/>
-
-        <ListPreference
-            android:key="unit_hba1c"
-            android:title="@string/hba1c"
-            android:entries="@array/hba1c_units"
-            android:entryValues="@array/hba1c_units_values"
-            android:defaultValue="1"/>
-
-        <ListPreference
-            android:key="unit_weight"
-            android:title="@string/weight"
-            android:entries="@array/weight_units"
-            android:entryValues="@array/weight_units_values"
-            android:defaultValue="1"/>
-
-    </PreferenceCategory>
-
-    <PreferenceCategory
-        android:title="@string/pref_therapy_targets">
-
-        <com.mydiabetesprt.diabetes.preferences.BloodSugarPreference
-            android:key="target"
-            android:title="@string/pref_therapy_targets_target"
-            android:dialogTitle="@string/pref_therapy_targets_target"
-            android:defaultValue="120"
-            android:inputType="number"/>
-
-        <com.mydiabetesprt.diabetes.preferences.BloodSugarPreference
-            android:key="correction_value"
-            android:title="@string/correction"
-            android:dialogTitle="@string/correction"
-            android:defaultValue="40"
-            android:inputType="number"/>
-
-        <com.mydiabetesprt.diabetes.preferences.FactorPreference
-            android:key="factors"
-            android:title="@string/factors"/>
-
-    </PreferenceCategory>
-
-    <PreferenceCategory
-        android:title="@string/pref_therapy_limits">
-
-        <CheckBoxPreference
-            android:key="targets_highlight"
-            android:title="@string/pref_therapy_targets_highlight"
-            android:defaultValue="true"/>
-
-        <com.mydiabetesprt.diabetes.preferences.BloodSugarPreference
-            android:key="hyperclycemia"
-            android:title="@string/pref_therapy_targets_hyperclycemia"
-            android:dialogTitle="@string/pref_therapy_targets_hyperclycemia"
-            android:defaultValue="180"
-            android:inputType="number"/>
-
-        <com.mydiabetesprt.diabetes.preferences.BloodSugarPreference
-            android:key="hypoclycemia"
-            android:title="@string/pref_therapy_targets_hypoclycemia"
-            android:dialogTitle="@string/pref_therapy_targets_hypoclycemia"
-            android:defaultValue="60"
-            android:inputType="number"/>
-
-        </PreferenceCategory>
-
-</PreferenceScreen>
\ No newline at end of file
-- 
1.9.0.msysgit.0

From 89d56ec04cc2c73da130bb6a579bfa24f6ac491b Mon Sep 17 00:00:00 2001
From: Philipp Fahlteich <philipp.fahlteich@gmail.com>
Date: Wed, 27 Aug 2014 18:36:49 +0200
Subject: [PATCH] First step for database update and date-handling

---
 .idea/dictionaries/Filip.xml                       |   7 +-
 .idea/libraries/achartengine_1_2_0.xml             |   9 -
 .idea/libraries/adapter_1_0_1.xml                  |  10 -
 .idea/libraries/android_joda_2_4_0.xml             |  10 +
 .idea/libraries/appcompat_v7_20_0_0.xml            |  13 -
 .idea/libraries/crouton_1_8_4.xml                  |  10 -
 .idea/libraries/endless_1_2_3.xml                  |  10 -
 .idea/libraries/itextg_5_4_4.xml                   |   9 -
 .idea/libraries/nineoldandroids_2_4_0.xml          |   9 -
 .idea/libraries/opencsv_2_3.xml                    |   9 -
 .idea/libraries/support_annotations_20_0_0.xml     |  11 -
 .idea/libraries/support_v4_20_0_0.xml              |  11 -
 Diaguard/Diaguard.iml                              |   7 +-
 Diaguard/build.gradle                              |  12 +-
 Diaguard/src/main/AndroidManifest.xml              |  20 +-
 .../mydiabetesprt/diabetes/CalculatorActivity.java   |  76 ++---
 .../mydiabetesprt/diabetes/DiaguardApplication.java  |  24 ++
 .../com/mydiabetesprt/diabetes/ExportActivity.java   | 121 +++----
 .../com/mydiabetesprt/diabetes/MainActivity.java     | 247 +++++---------
 .../com/mydiabetesprt/diabetes/NewEventActivity.java | 109 +++----
 .../diaguard/adapters/DrawerListViewAdapter.java   |  70 ----
 .../diaguard/adapters/EndlessListViewAdapter.java  | 120 -------
 .../diaguard/adapters/ListViewAdapterLog.java      |  20 +-
 .../diaguard/database/DatabaseDataSource.java      | 360 ++++++++-------------
 .../diaguard/database/DatabaseHelper.java          |  11 +-
 .../com/mydiabetesprt/diabetes/database/Entry.java   |  34 +-
 .../com/mydiabetesprt/diabetes/database/Event.java   |  77 -----
 .../com/mydiabetesprt/diabetes/database/makla.java    |  31 +-
 .../mydiabetesprt/diabetes/database/Measurement.java |  19 +-
 .../com/mydiabetesprt/diabetes/database/Model.java   |  19 ++
 .../diaguard/fragments/DatePickerFragment.java     |  14 +-
 .../diaguard/fragments/LogFragment.java            |  59 ++--
 .../diaguard/fragments/MainFragment.java           |  67 ++--
 .../diaguard/fragments/TimePickerFragment.java     |  15 +-
 .../diaguard/fragments/TimelineFragment.java       |  76 +++--
 .../mydiabetesprt/diabetes/helpers/ChartHelper.java  |   4 +-
 .../mydiabetesprt/diabetes/helpers/FileHelper.java   | 119 +++----
 .../com/mydiabetesprt/diabetes/helpers/Helper.java   |  56 ++--
 .../diaguard/helpers/PreferenceHelper.java         |  73 ++---
 .../mydiabetesprt/diabetes/helpers/Validator.java    |   6 +-
 .../diaguard/preferences/BackupPreference.java     |  22 +-
 .../diaguard/preferences/BloodSugarPreference.java |  12 +-
 .../diaguard/preferences/CategoryPreference.java   |   8 +-
 .../diaguard/preferences/CleanUpPreference.java    |  17 +-
 .../diaguard/views/EndlessListView.java            |  93 ------
 .../mydiabetesprt/diabetes/views/EventEditText.java  |  64 ----
 Diaguard/src/main/res/drawable-hdpi/ic_home.png    | Bin 1216 -> 0 bytes
 Diaguard/src/main/res/drawable-mdpi/ic_home.png    | Bin 784 -> 0 bytes
 Diaguard/src/main/res/drawable-xhdpi/ic_home.png   | Bin 1638 -> 0 bytes
 Diaguard/src/main/res/drawable-xxhdpi/ic_home.png  | Bin 2649 -> 0 bytes
 Diaguard/src/main/res/drawable-xxxhdpi/ic_home.png | Bin 3704 -> 2608 bytes
 Diaguard/src/main/res/layout/activity_main.xml     |  21 +-
 Diaguard/src/main/res/layout/fragment_main.xml     |  25 +-
 Diaguard/src/main/res/menu/main.xml                |  21 ++
 Diaguard/src/main/res/values-w820dp/dimens.xml     |   6 +
 Diaguard/src/main/res/values/styles.xml            |   9 +-
 56 files changed, 784 insertions(+), 1498 deletions(-)
 delete mode 100644 .idea/libraries/achartengine_1_2_0.xml
 delete mode 100644 .idea/libraries/adapter_1_0_1.xml
 create mode 100644 .idea/libraries/android_joda_2_4_0.xml
 delete mode 100644 .idea/libraries/appcompat_v7_20_0_0.xml
 delete mode 100644 .idea/libraries/crouton_1_8_4.xml
 delete mode 100644 .idea/libraries/endless_1_2_3.xml
 delete mode 100644 .idea/libraries/itextg_5_4_4.xml
 delete mode 100644 .idea/libraries/nineoldandroids_2_4_0.xml
 delete mode 100644 .idea/libraries/opencsv_2_3.xml
 delete mode 100644 .idea/libraries/support_annotations_20_0_0.xml
 delete mode 100644 .idea/libraries/support_v4_20_0_0.xml
 create mode 100644 Diaguard/src/main/java/com/mydiabetesprt/diabetes/DiaguardApplication.java
 delete mode 100644 Diaguard/src/main/java/com/mydiabetesprt/diabetes/adapters/DrawerListViewAdapter.java
 delete mode 100644 Diaguard/src/main/java/com/mydiabetesprt/diabetes/adapters/EndlessListViewAdapter.java
 delete mode 100644 Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/Event.java
 create mode 100644 Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/Model.java
 delete mode 100644 Diaguard/src/main/java/com/mydiabetesprt/diabetes/views/EndlessListView.java
 delete mode 100644 Diaguard/src/main/java/com/mydiabetesprt/diabetes/views/EventEditText.java
 delete mode 100644 Diaguard/src/main/res/drawable-hdpi/ic_home.png
 delete mode 100644 Diaguard/src/main/res/drawable-mdpi/ic_home.png
 delete mode 100644 Diaguard/src/main/res/drawable-xhdpi/ic_home.png
 delete mode 100644 Diaguard/src/main/res/drawable-xxhdpi/ic_home.png
 create mode 100644 Diaguard/src/main/res/menu/main.xml
 create mode 100644 Diaguard/src/main/res/values-w820dp/dimens.xml

diff --git a/.idea/dictionaries/Filip.xml b/.idea/dictionaries/Filip.xml
index 1a92842..ed978c3 100644
--- a/.idea/dictionaries/Filip.xml
+++ b/.idea/dictionaries/Filip.xml
@@ -1,3 +1,8 @@
 <component name="ProjectDictionaryState">
-  <dictionary name="Filip" />
+  <dictionary name="Filip">
+    <words>
+      <w>diaguard</w>
+      <w>mydiabetesprt</w>
+    </words>
+  </dictionary>
 </component>
\ No newline at end of file
diff --git a/.idea/libraries/achartengine_1_2_0.xml b/.idea/libraries/achartengine_1_2_0.xml
deleted file mode 100644
index 7eb4da6..0000000
--- a/.idea/libraries/achartengine_1_2_0.xml
+++ /dev/null
@@ -1,9 +0,0 @@
-<component name="libraryTable">
-  <library name="achartengine-1.2.0">
-    <CLASSES>
-      <root url="jar://$PROJECT_DIR$/Diaguard/libs/achartengine-1.2.0.jar!/" />
-    </CLASSES>
-    <JAVADOC />
-    <SOURCES />
-  </library>
-</component>
\ No newline at end of file
diff --git a/.idea/libraries/adapter_1_0_1.xml b/.idea/libraries/adapter_1_0_1.xml
deleted file mode 100644
index fdf341b..0000000
--- a/.idea/libraries/adapter_1_0_1.xml
+++ /dev/null
@@ -1,10 +0,0 @@
-<component name="libraryTable">
-  <library name="adapter-1.0.1">
-    <CLASSES>
-      <root url="jar://$PROJECT_DIR$/Diaguard/build/intermediates/exploded-aar/com.commonsware.cwac/adapter/1.0.1/classes.jar!/" />
-      <root url="file://$PROJECT_DIR$/Diaguard/build/intermediates/exploded-aar/com.commonsware.cwac/adapter/1.0.1/res" />
-    </CLASSES>
-    <JAVADOC />
-    <SOURCES />
-  </library>
-</component>
\ No newline at end of file
diff --git a/.idea/libraries/android_joda_2_4_0.xml b/.idea/libraries/android_joda_2_4_0.xml
new file mode 100644
index 0000000..a23078a
--- /dev/null
+++ b/.idea/libraries/android_joda_2_4_0.xml
@@ -0,0 +1,10 @@
+<component name="libraryTable">
+  <library name="android.joda-2.4.0">
+    <CLASSES>
+      <root url="file://$PROJECT_DIR$/Diaguard/build/intermediates/exploded-aar/net.danlew/android.joda/2.4.0/res" />
+      <root url="jar://$PROJECT_DIR$/Diaguard/build/intermediates/exploded-aar/net.danlew/android.joda/2.4.0/classes.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
diff --git a/.idea/libraries/appcompat_v7_20_0_0.xml b/.idea/libraries/appcompat_v7_20_0_0.xml
deleted file mode 100644
index 6dbbd59..0000000
--- a/.idea/libraries/appcompat_v7_20_0_0.xml
+++ /dev/null
@@ -1,13 +0,0 @@
-<component name="libraryTable">
-  <library name="appcompat-v7-20.0.0">
-    <ANNOTATIONS>
-      <root url="jar://$PROJECT_DIR$/Diaguard/build/intermediates/exploded-aar/com.android.support/appcompat-v7/20.0.0/annotations.zip!/" />
-    </ANNOTATIONS>
-    <CLASSES>
-      <root url="jar://$PROJECT_DIR$/Diaguard/build/intermediates/exploded-aar/com.android.support/appcompat-v7/20.0.0/classes.jar!/" />
-      <root url="file://$PROJECT_DIR$/Diaguard/build/intermediates/exploded-aar/com.android.support/appcompat-v7/20.0.0/res" />
-    </CLASSES>
-    <JAVADOC />
-    <SOURCES />
-  </library>
-</component>
\ No newline at end of file
diff --git a/.idea/libraries/crouton_1_8_4.xml b/.idea/libraries/crouton_1_8_4.xml
deleted file mode 100644
index 0e4f7bf..0000000
--- a/.idea/libraries/crouton_1_8_4.xml
+++ /dev/null
@@ -1,10 +0,0 @@
-<component name="libraryTable">
-  <library name="crouton-1.8.4">
-    <CLASSES>
-      <root url="jar://$PROJECT_DIR$/Diaguard/build/intermediates/exploded-aar/de.keyboardsurfer.android.widget/crouton/1.8.4/classes.jar!/" />
-      <root url="file://$PROJECT_DIR$/Diaguard/build/intermediates/exploded-aar/de.keyboardsurfer.android.widget/crouton/1.8.4/res" />
-    </CLASSES>
-    <JAVADOC />
-    <SOURCES />
-  </library>
-</component>
\ No newline at end of file
diff --git a/.idea/libraries/endless_1_2_3.xml b/.idea/libraries/endless_1_2_3.xml
deleted file mode 100644
index 3200378..0000000
--- a/.idea/libraries/endless_1_2_3.xml
+++ /dev/null
@@ -1,10 +0,0 @@
-<component name="libraryTable">
-  <library name="endless-1.2.3">
-    <CLASSES>
-      <root url="file://$PROJECT_DIR$/Diaguard/build/intermediates/exploded-aar/com.commonsware.cwac/endless/1.2.3/res" />
-      <root url="jar://$PROJECT_DIR$/Diaguard/build/intermediates/exploded-aar/com.commonsware.cwac/endless/1.2.3/classes.jar!/" />
-    </CLASSES>
-    <JAVADOC />
-    <SOURCES />
-  </library>
-</component>
\ No newline at end of file
diff --git a/.idea/libraries/itextg_5_4_4.xml b/.idea/libraries/itextg_5_4_4.xml
deleted file mode 100644
index 4ff007a..0000000
--- a/.idea/libraries/itextg_5_4_4.xml
+++ /dev/null
@@ -1,9 +0,0 @@
-<component name="libraryTable">
-  <library name="itextg-5.4.4">
-    <CLASSES>
-      <root url="jar://$PROJECT_DIR$/Diaguard/libs/itextg-5.4.4.jar!/" />
-    </CLASSES>
-    <JAVADOC />
-    <SOURCES />
-  </library>
-</component>
\ No newline at end of file
diff --git a/.idea/libraries/nineoldandroids_2_4_0.xml b/.idea/libraries/nineoldandroids_2_4_0.xml
deleted file mode 100644
index e43d0b7..0000000
--- a/.idea/libraries/nineoldandroids_2_4_0.xml
+++ /dev/null
@@ -1,9 +0,0 @@
-<component name="libraryTable">
-  <library name="nineoldandroids-2.4.0">
-    <CLASSES>
-      <root url="jar://$PROJECT_DIR$/Diaguard/libs/nineoldandroids-2.4.0.jar!/" />
-    </CLASSES>
-    <JAVADOC />
-    <SOURCES />
-  </library>
-</component>
\ No newline at end of file
diff --git a/.idea/libraries/opencsv_2_3.xml b/.idea/libraries/opencsv_2_3.xml
deleted file mode 100644
index 6dc8b5b..0000000
--- a/.idea/libraries/opencsv_2_3.xml
+++ /dev/null
@@ -1,9 +0,0 @@
-<component name="libraryTable">
-  <library name="opencsv-2.3">
-    <CLASSES>
-      <root url="jar://$PROJECT_DIR$/Diaguard/libs/opencsv-2.3.jar!/" />
-    </CLASSES>
-    <JAVADOC />
-    <SOURCES />
-  </library>
-</component>
\ No newline at end of file
diff --git a/.idea/libraries/support_annotations_20_0_0.xml b/.idea/libraries/support_annotations_20_0_0.xml
deleted file mode 100644
index 9e4620b..0000000
--- a/.idea/libraries/support_annotations_20_0_0.xml
+++ /dev/null
@@ -1,11 +0,0 @@
-<component name="libraryTable">
-  <library name="support-annotations-20.0.0">
-    <CLASSES>
-      <root url="jar://$APPLICATION_HOME_DIR$/sdk/extras/android/m2repository/com/android/support/support-annotations/20.0.0/support-annotations-20.0.0.jar!/" />
-    </CLASSES>
-    <JAVADOC />
-    <SOURCES>
-      <root url="jar://$APPLICATION_HOME_DIR$/sdk/extras/android/m2repository/com/android/support/support-annotations/20.0.0/support-annotations-20.0.0-sources.jar!/" />
-    </SOURCES>
-  </library>
-</component>
\ No newline at end of file
diff --git a/.idea/libraries/support_v4_20_0_0.xml b/.idea/libraries/support_v4_20_0_0.xml
deleted file mode 100644
index adb3c5c..0000000
--- a/.idea/libraries/support_v4_20_0_0.xml
+++ /dev/null
@@ -1,11 +0,0 @@
-<component name="libraryTable">
-  <library name="support-v4-20.0.0">
-    <CLASSES>
-      <root url="file://$PROJECT_DIR$/Diaguard/build/intermediates/exploded-aar/com.android.support/support-v4/20.0.0/res" />
-      <root url="jar://$PROJECT_DIR$/Diaguard/build/intermediates/exploded-aar/com.android.support/support-v4/20.0.0/libs/internal_impl-20.0.0.jar!/" />
-      <root url="jar://$PROJECT_DIR$/Diaguard/build/intermediates/exploded-aar/com.android.support/support-v4/20.0.0/classes.jar!/" />
-    </CLASSES>
-    <JAVADOC />
-    <SOURCES />
-  </library>
-</component>
\ No newline at end of file
diff --git a/Diaguard/Diaguard.iml b/Diaguard/Diaguard.iml
index 1004c55..57b8123 100644
--- a/Diaguard/Diaguard.iml
+++ b/Diaguard/Diaguard.iml
@@ -37,22 +37,22 @@
       <sourceFolder url="file://$MODULE_DIR$/build/generated/res/rs/test/debug" type="java-test-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/debug/res" type="java-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/debug/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/debug/assets" type="java-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/debug/aidl" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/src/debug/assets" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/debug/java" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/debug/jni" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/debug/rs" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/res" type="java-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/assets" type="java-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/aidl" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/src/main/assets" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/jni" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/rs" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/res" type="java-test-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/resources" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/assets" type="java-test-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/aidl" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/assets" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/java" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/jni" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/rs" isTestSource="true" />
@@ -81,6 +81,7 @@
     <orderEntry type="sourceFolder" forTests="false" />
     <orderEntry type="library" exported="" name="itextg-5.4.4" level="project" />
     <orderEntry type="library" exported="" name="endless-1.2.3" level="project" />
+    <orderEntry type="library" exported="" name="android.joda-2.4.0" level="project" />
     <orderEntry type="library" exported="" name="nineoldandroids-2.4.0" level="project" />
     <orderEntry type="library" exported="" name="appcompat-v7-20.0.0" level="project" />
     <orderEntry type="library" exported="" name="achartengine-1.2.0" level="project" />
diff --git a/Diaguard/build.gradle b/Diaguard/build.gradle
index ca9db1e..235bf8e 100644
--- a/Diaguard/build.gradle
+++ b/Diaguard/build.gradle
@@ -26,13 +26,15 @@ android {
 dependencies {
     compile 'com.android.support:appcompat-v7:20+'
     compile 'com.android.support:support-v4:20+'
-    compile files('libs/achartengine-1.2.0.jar')
-    compile files('libs/opencsv-2.3.jar')
-    compile files('libs/itextg-5.4.4.jar')
     compile files('libs/nineoldandroids-2.4.0.jar')
-    compile 'com.commonsware.cwac:adapter:1.0.1'
-    compile 'com.commonsware.cwac:endless:1.2.3'
+    compile 'net.danlew:android.joda:2.4.0'
     compile('de.keyboardsurfer.android.widget:crouton:1.8.4@aar') {
         exclude group: 'com.google.android', module: 'support-v4'
     }
+    compile 'com.commonsware.cwac:adapter:1.0.1'
+    compile 'com.commonsware.cwac:endless:1.2.3'
+
+    compile files('libs/achartengine-1.2.0.jar')
+    compile files('libs/opencsv-2.3.jar')
+    compile files('libs/itextg-5.4.4.jar')
 }
diff --git a/Diaguard/src/main/AndroidManifest.xml b/Diaguard/src/main/AndroidManifest.xml
index 39e3962..2b1bb04 100644
--- a/Diaguard/src/main/AndroidManifest.xml
+++ b/Diaguard/src/main/AndroidManifest.xml
@@ -8,6 +8,7 @@
     <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
 
     <application
+        android:name=".DiaguardApplication"
         android:allowBackup="true"
         android:icon="@drawable/ic_launcher"
         android:label="@string/app_name"
@@ -15,8 +16,7 @@
         <activity
             android:name=".MainActivity"
             android:label="@string/app_name"
-            android:windowSoftInputMode="adjustNothing"
-            android:screenOrientation="portrait" >
+            android:windowSoftInputMode="adjustNothing">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
                 <category android:name="android.intent.category.LAUNCHER" />
@@ -25,9 +25,7 @@
         <activity
             android:name=".NewEventActivity"
             android:label="@string/newevent"
-            android:parentActivityName=".MainActivity"
-            android:windowSoftInputMode="adjustResize|stateHidden"
-            android:screenOrientation="portrait">
+            android:windowSoftInputMode="adjustResize|stateHidden">
             <meta-data
                 android:name="android.support.PARENT_ACTIVITY"
                 android:value=".MainActivity" />
@@ -35,18 +33,14 @@
         <activity
             android:name=".CalculatorActivity"
             android:label="@string/calculator"
-            android:parentActivityName=".MainActivity"
-            android:windowSoftInputMode="adjustResize"
-            android:screenOrientation="portrait">
+            android:windowSoftInputMode="adjustResize">
             <meta-data
                 android:name="android.support.PARENT_ACTIVITY"
                 android:value=".MainActivity" />
         </activity>
         <activity
             android:name=".ExportActivity"
-            android:label="@string/export"
-            android:parentActivityName=".MainActivity"
-            android:screenOrientation="portrait">
+            android:label="@string/export">
             <meta-data
                 android:name="android.support.PARENT_ACTIVITY"
                 android:value=".MainActivity" />
@@ -54,9 +48,7 @@
 
         <activity
             android:name=".PreferencesActivity"
-            android:label="@string/settings"
-            android:parentActivityName=".MainActivity"
-            android:screenOrientation="portrait">
+            android:label="@string/settings">
             <meta-data
                 android:name="android.support.PARENT_ACTIVITY"
                 android:value=".MainActivity" />
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/CalculatorActivity.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/CalculatorActivity.java
index 453a3dd..fdf39ec 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/CalculatorActivity.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/CalculatorActivity.java
@@ -18,12 +18,13 @@ import android.widget.Spinner;
 import android.widget.TextView;
 
 import com.mydiabetesprt.diabetes.database.DatabaseDataSource;
-import com.mydiabetesprt.diabetes.database.Event;
+import com.mydiabetesprt.diabetes.database.Entry;
+import com.mydiabetesprt.diabetes.database.Measurement;
 import com.mydiabetesprt.diabetes.helpers.Helper;
 import com.mydiabetesprt.diabetes.helpers.PreferenceHelper;
 import com.mydiabetesprt.diabetes.helpers.Validator;
 
-import java.util.Calendar;
+import org.joda.time.DateTime;
 
 /**
  * Created by Filip on 15.11.13.
@@ -84,25 +85,25 @@ public class CalculatorActivity extends ActionBarActivity {
     }
 
     public void initializeGUI() {
-        String unitAcronym = preferenceHelper.getUnitAcronym(Event.Category.BloodSugar);
+        String unitAcronym = preferenceHelper.getUnitAcronym(Measurement.Category.BloodSugar);
         textViewUnitBloodSugar.setText(unitAcronym);
         textViewUnitTargetValue.setText(unitAcronym);
         textViewUnitCorrection.setText(unitAcronym);
-        textViewUnitMeal.setText(preferenceHelper.getUnitAcronym(Event.Category.Meal));
+        textViewUnitMeal.setText(preferenceHelper.getUnitAcronym(Measurement.Category.Meal));
 
         // Target
         float targetValue = preferenceHelper.formatDefaultToCustomUnit(
-                Event.Category.BloodSugar,
+                Measurement.Category.BloodSugar,
                 preferenceHelper.getTargetValue());
         editTextTargetValue.setHint(
-                preferenceHelper.getDecimalFormat(Event.Category.BloodSugar).format(targetValue));
+                preferenceHelper.getDecimalFormat(Measurement.Category.BloodSugar).format(targetValue));
 
         // Correction
         float correctionValue = preferenceHelper.formatDefaultToCustomUnit(
-                Event.Category.BloodSugar,
+                Measurement.Category.BloodSugar,
                 preferenceHelper.getCorrectionValue());
-        editTextCorrection.setHint(
-                preferenceHelper.getDecimalFormat(Event.Category.BloodSugar).format(correctionValue));
+                editTextCorrection.setHint(preferenceHelper.
+                        getDecimalFormat(Measurement.Category.BloodSugar).format(correctionValue));
 
         // Factor
         spinnerFactors.setSelection(preferenceHelper.getCurrentDaytime().ordinal());
@@ -126,13 +127,13 @@ public class CalculatorActivity extends ActionBarActivity {
         boolean isValid = true;
 
         // Blood Sugar
-        if(!Validator.validateEditTextEvent(this, editTextBloodSugar, Event.Category.BloodSugar))
+        if(!Validator.validateEditTextEvent(this, editTextBloodSugar, Measurement.Category.BloodSugar))
             isValid = false;
 
-        if(!Validator.validateEditTextEvent(this, editTextTargetValue, Event.Category.BloodSugar))
+        if(!Validator.validateEditTextEvent(this, editTextTargetValue, Measurement.Category.BloodSugar))
             isValid = false;
 
-        if(!Validator.validateEditTextEvent(this, editTextCorrection, Event.Category.BloodSugar))
+        if(!Validator.validateEditTextEvent(this, editTextCorrection, Measurement.Category.BloodSugar))
             isValid = false;
 
         // Meal
@@ -144,7 +145,7 @@ public class CalculatorActivity extends ActionBarActivity {
         String valueMeal = editableMeal.toString();
         if(valueMeal.length() > 0) {
 
-            if (!Validator.validateEventValue(this, editTextMeal, Event.Category.Meal, valueMeal)) {
+            if (!Validator.validateEventValue(this, editTextMeal, Measurement.Category.Meal, valueMeal)) {
                 isValid = false;
             }
 
@@ -175,17 +176,17 @@ public class CalculatorActivity extends ActionBarActivity {
     private void submit() {
         // Blood Sugar
         final float currentBloodSugar =
-                preferenceHelper.formatCustomToDefaultUnit(Event.Category.BloodSugar,
+                preferenceHelper.formatCustomToDefaultUnit(Measurement.Category.BloodSugar,
                         Float.parseFloat(editTextBloodSugar.getText().toString()));
 
         String targetValueString = editTextTargetValue.getText().toString();
         float targetBloodSugar;
         if(!Validator.containsNumber(targetValueString))
             targetBloodSugar = preferenceHelper.formatDefaultToCustomUnit(
-                    Event.Category.BloodSugar, preferenceHelper.getTargetValue());
+                    Measurement.Category.BloodSugar, preferenceHelper.getTargetValue());
         else
             targetBloodSugar = Float.parseFloat(targetValueString);
-        targetBloodSugar = preferenceHelper.formatCustomToDefaultUnit(Event.Category.BloodSugar, targetBloodSugar);
+        targetBloodSugar = preferenceHelper.formatCustomToDefaultUnit(Measurement.Category.BloodSugar, targetBloodSugar);
 
         Editable editableText = editTextCorrection.getText();
         CharSequence charSequenceHint = editTextCorrection.getHint();
@@ -200,13 +201,13 @@ public class CalculatorActivity extends ActionBarActivity {
         }
         else
             return;
-        correction = preferenceHelper.formatCustomToDefaultUnit(Event.Category.BloodSugar, correction);
+        correction = preferenceHelper.formatCustomToDefaultUnit(Measurement.Category.BloodSugar, correction);
 
         // Meal
         String mealString = editTextMeal.getText().toString();
         final float meal;
         if(Validator.containsNumber(mealString))
-            meal = preferenceHelper.formatCustomToDefaultUnit(Event.Category.Meal, Float.parseFloat(mealString));
+            meal = preferenceHelper.formatCustomToDefaultUnit(Measurement.Category.Meal, Float.parseFloat(mealString));
         else
             meal = 0;
 
@@ -251,7 +252,7 @@ public class CalculatorActivity extends ActionBarActivity {
         textViewValue.setText(Helper.getDecimalFormat().format(bolus));
 
         TextView textViewUnit = (TextView) viewPopup.findViewById(R.id.textViewUnit);
-        textViewUnit.setText(preferenceHelper.getUnitAcronym(Event.Category.Bolus));
+        textViewUnit.setText(preferenceHelper.getUnitAcronym(Measurement.Category.Bolus));
 
         final CheckBox checkBoxStoreValues = (CheckBox) viewPopup.findViewById(R.id.checkBoxStoreValues);
 
@@ -284,31 +285,30 @@ public class CalculatorActivity extends ActionBarActivity {
     private void storeValues(float currentBloodSugar, float meal, float bolus) {
         dataSource.open();
 
-        Calendar now = Calendar.getInstance();
+        Entry entry = new Entry();
+        entry.setDate(new DateTime());
+        long entryId = dataSource.insert(entry);
 
-        Event event = new Event();
-        event.setValue(currentBloodSugar);
-        event.setDate(now);
-        event.setNotes("");
-        event.setCategory(Event.Category.BloodSugar);
-        dataSource.insertEvent(event);
+        Measurement measurement = new Measurement();
+        measurement.setValue(currentBloodSugar);
+        measurement.setCategory(Measurement.Category.BloodSugar);
+        measurement.setEntryId(entryId);
+        dataSource.insert(measurement);
 
         if(meal > 0) {
-            event = new Event();
-            event.setValue(meal);
-            event.setDate(now);
-            event.setNotes("");
-            event.setCategory(Event.Category.Meal);
-            dataSource.insertEvent(event);
+            measurement = new Measurement();
+            measurement.setValue(meal);
+            measurement.setCategory(Measurement.Category.Meal);
+            measurement.setEntryId(entryId);
+            dataSource.insert(measurement);
         }
 
         if(bolus > 0) {
-            event = new Event();
-            event.setValue(bolus);
-            event.setDate(now);
-            event.setNotes("");
-            event.setCategory(Event.Category.Bolus);
-            dataSource.insertEvent(event);
+            measurement = new Measurement();
+            measurement.setValue(bolus);
+            measurement.setCategory(Measurement.Category.Bolus);
+            measurement.setEntryId(entryId);
+            dataSource.insert(measurement);
         }
 
         dataSource.close();
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/DiaguardApplication.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/DiaguardApplication.java
new file mode 100644
index 0000000..b7dff75
--- /dev/null
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/DiaguardApplication.java
@@ -0,0 +1,24 @@
+package com.mydiabetesprt.diabetes;
+
+import android.app.Application;
+import android.content.Context;
+import android.preference.PreferenceManager;
+
+/**
+ * Created by Filip on 26.08.2014.
+ */
+public class DiaguardApplication extends Application {
+    private static Context context;
+    public static Context getContext() {
+        return context;
+    }
+
+    @Override
+    public void onCreate() {
+        super.onCreate();
+
+        // Initialize global values
+        context = getApplicationContext();
+        //JodaTimeAndroid.init(this);
+    }
+}
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/ExportActivity.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/ExportActivity.java
index b573a31..cce8795 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/ExportActivity.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/ExportActivity.java
@@ -19,10 +19,9 @@ import android.widget.DatePicker;
 import android.widget.Spinner;
 
 import com.mydiabetesprt.diabetes.database.DatabaseDataSource;
-import com.mydiabetesprt.diabetes.database.Event;
+import com.mydiabetesprt.diabetes.database.Measurement;
 import com.mydiabetesprt.diabetes.fragments.DatePickerFragment;
 import com.mydiabetesprt.diabetes.helpers.FileHelper;
-import com.mydiabetesprt.diabetes.helpers.Helper;
 import com.mydiabetesprt.diabetes.helpers.PreferenceHelper;
 import com.mydiabetesprt.diabetes.helpers.ViewHelper;
 import com.itextpdf.text.BaseColor;
@@ -41,10 +40,15 @@ import com.itextpdf.text.pdf.PdfPTable;
 import com.itextpdf.text.pdf.PdfPageEventHelper;
 import com.itextpdf.text.pdf.PdfWriter;
 
+import org.joda.time.DateTime;
+import org.joda.time.DateTimeConstants;
+import org.joda.time.Days;
+import org.joda.time.format.DateTimeFormat;
+import org.joda.time.format.DateTimeFormatter;
+
 import java.io.File;
 import java.io.FileOutputStream;
 import java.text.SimpleDateFormat;
-import java.util.Calendar;
 
 /**
  * Created by Filip on 30.11.13.
@@ -54,9 +58,9 @@ public class ExportActivity extends ActionBarActivity {
     private DatabaseDataSource dataSource;
     private PreferenceHelper preferenceHelper;
 
-    private Calendar dateStart;
-    private Calendar dateEnd;
-    SimpleDateFormat dateFormat;
+    private DateTime dateStart;
+    private DateTime dateEnd;
+    DateTimeFormatter dateFormat;
 
     Spinner spinnerFormat;
     private Button buttonDateStart;
@@ -82,9 +86,8 @@ public class ExportActivity extends ActionBarActivity {
         dataSource = new DatabaseDataSource(this);
         preferenceHelper = new PreferenceHelper(this);
 
-        dateEnd = Calendar.getInstance();
-        dateStart = Calendar.getInstance();
-        dateStart.set(Calendar.DAY_OF_MONTH, 1);
+        dateEnd = new DateTime();
+        dateStart = new DateTime().withDayOfMonth(1);
         dateFormat = preferenceHelper.getDateFormat();
 
         getComponents();
@@ -99,14 +102,14 @@ public class ExportActivity extends ActionBarActivity {
     }
 
     public void initializeGUI() {
-        buttonDateStart.setText(dateFormat.format(dateStart.getTime()));
-        buttonDateEnd.setText(dateFormat.format(dateEnd.getTime()));
+        buttonDateStart.setText(dateFormat.print(dateStart));
+        buttonDateEnd.setText(dateFormat.print(dateEnd));
     }
 
     private boolean validate() {
         boolean isValid = true;
 
-        if(dateStart.after(dateEnd)) {
+        if(dateStart.isAfter(dateEnd)) {
             ViewHelper.showAlert(this, getString(R.string.validator_value_enddate));
             isValid = false;
         }
@@ -145,9 +148,9 @@ public class ExportActivity extends ActionBarActivity {
         intent.setType(FileHelper.MIME_MAIL);
 
         // Diaguard Export: DateStart - DateEnd
-        SimpleDateFormat format = preferenceHelper.getDateFormat();
+        DateTimeFormatter format = preferenceHelper.getDateFormat();
         String subject = getString(R.string.app_name) + " " + getString(R.string.export) + ": " +
-                format.format(dateStart.getTime()) + " - " + format.format(dateEnd.getTime());
+                format.print(dateStart) + " - " + format.print(dateEnd);
         intent.putExtra(Intent.EXTRA_SUBJECT, subject);
         intent.putExtra(Intent.EXTRA_TEXT,
                 getString(R.string.pref_data_export_mail_message));
@@ -177,10 +180,10 @@ public class ExportActivity extends ActionBarActivity {
         DatePickerFragment fragment = new DatePickerFragment() {
             @Override
             public void onDateSet(DatePicker view, int year, int month, int day) {
-                dateStart.set(Calendar.YEAR, year);
-                dateStart.set(Calendar.MONTH, month);
-                dateStart.set(Calendar.DAY_OF_MONTH, day);
-                buttonDateStart.setText(dateFormat.format(dateStart.getTime()));
+                dateStart.withYear(year);
+                dateStart.withMonthOfYear(month);
+                dateStart.withDayOfMonth(day);
+                buttonDateStart.setText(dateFormat.print(dateStart));
             }
         };
         Bundle bundle = new Bundle(1);
@@ -193,10 +196,10 @@ public class ExportActivity extends ActionBarActivity {
         DatePickerFragment fragment = new DatePickerFragment() {
             @Override
             public void onDateSet(DatePicker view, int year, int month, int day) {
-                dateEnd.set(Calendar.YEAR, year);
-                dateEnd.set(Calendar.MONTH, month);
-                dateEnd.set(Calendar.DAY_OF_MONTH, day);
-                buttonDateEnd.setText(dateFormat.format(dateEnd.getTime()));
+                dateStart.withYear(year);
+                dateStart.withMonthOfYear(month);
+                dateStart.withDayOfMonth(day);
+                buttonDateEnd.setText(dateFormat.print(dateEnd));
             }
         };
         Bundle bundle = new Bundle(1);
@@ -219,22 +222,22 @@ public class ExportActivity extends ActionBarActivity {
         }
     }
 
-    private class PDFExportTask extends AsyncTask<Calendar, String, File> {
+    private class PDFExportTask extends AsyncTask<DateTime, String, File> {
         ProgressDialog progressDialog;
         private final int TEXT_SIZE = 9;
 
-        Event.Category[] selectedCategories =
-                new Event.Category[] {
-                        Event.Category.BloodSugar,
-                        Event.Category.Bolus,
-                        Event.Category.Meal,
-                        Event.Category.Activity};
+        Measurement.Category[] selectedCategories =
+                new Measurement.Category[] {
+                        Measurement.Category.BloodSugar,
+                        Measurement.Category.Bolus,
+                        Measurement.Category.Meal,
+                        Measurement.Category.Activity};
 
-        Calendar dateStart;
-        Calendar dateEnd;
+        DateTime dateStart;
+        DateTime dateEnd;
 
         @Override
-        protected File doInBackground(Calendar... params) {
+        protected File doInBackground(DateTime... params) {
 
             if(!Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED))
                 return null;
@@ -244,8 +247,8 @@ public class ExportActivity extends ActionBarActivity {
             if(!directory.exists())
                 directory.mkdirs();
 
-            File file = new File(directory + "/export" + new SimpleDateFormat("yyyyMMddHHmmss").
-                    format(Calendar.getInstance().getTime()) + ".pdf");
+            File file = new File(directory + "/export" + DateTimeFormat.forPattern("yyyyMMddHHmmss").
+                    print(new DateTime()) + ".pdf");
 
             dateStart = params[0];
             dateEnd = params[1];
@@ -268,16 +271,14 @@ public class ExportActivity extends ActionBarActivity {
                 document.open();
                 iTextGMetaData(document);
 
-                final Calendar dateIteration = Calendar.getInstance();
-                dateIteration.setTime(dateStart.getTime());
+                DateTime dateIteration = dateStart;
 
                 // One day after last chosen day
-                Calendar dateAfter = Calendar.getInstance();
-                dateAfter.setTime(dateEnd.getTime());
-                dateAfter.set(Calendar.DAY_OF_MONTH, dateAfter.get(Calendar.DAY_OF_MONTH) + 1);
+                DateTime dateAfter = dateEnd;
+                dateAfter.withDayOfMonth(dateAfter.dayOfMonth().get() + 1);
 
                 // Total number of days to export
-                int totalDays = Helper.getDifferenceInDays(dateStart, dateEnd) + 1;
+                int totalDays = Days.daysBetween(dateStart, dateEnd).getDays();
 
                 String[] weekDays = getResources().getStringArray(R.array.weekdays);
 
@@ -286,10 +287,10 @@ public class ExportActivity extends ActionBarActivity {
 
                 // Day by day
                 int currentDay = 1;
-                while(dateIteration.before(dateAfter)) {
+                while(dateIteration.isBefore(dateAfter)) {
 
                     // title bar for new week
-                    if(currentDay > 1 && dateIteration.get(Calendar.DAY_OF_WEEK) == 2) {
+                    if(currentDay > 1 && dateIteration.getDayOfWeek() == 2) {
                         document.newPage();
                         document.add(getWeekBar(dateIteration));
                         document.add(Chunk.NEWLINE);
@@ -302,8 +303,8 @@ public class ExportActivity extends ActionBarActivity {
                     PdfPCell cell;
 
                     // Header
-                    cell = new PdfPCell(new Phrase(weekDays[dateIteration.get(Calendar.DAY_OF_WEEK)-1].substring(0, 2) + " " +
-                            new SimpleDateFormat("dd.MM.").format(dateIteration.getTime()),
+                    cell = new PdfPCell(new Phrase(weekDays[dateIteration.getDayOfWeek()-1].substring(0, 2) + " " +
+                            new SimpleDateFormat("dd.MM.").format(dateIteration),
                             new Font(fontBold)));
                     cell.setBorder(0);
                     cell.setBorder(Rectangle.BOTTOM);
@@ -318,12 +319,14 @@ public class ExportActivity extends ActionBarActivity {
 
                     // Content
                     dataSource.open();
-                    float[][] values = dataSource.getAverageDataTable(dateIteration, selectedCategories, 12);
+                    // TODO
+                    float[][] values; // = dataSource.getAverageDataTable(dateIteration, selectedCategories, 12);
+                    values = new float[0][0];
                     dataSource.close();
 
                     // Insert values into table
                     for(int categoryPosition = 0; categoryPosition < selectedCategories.length; categoryPosition++) {
-                        Event.Category category = selectedCategories[categoryPosition];
+                        Measurement.Category category = selectedCategories[categoryPosition];
 
                         cell = new PdfPCell(new Paragraph(preferenceHelper.getCategoryName(category), fontGray));
                         cell.setBorder(0);
@@ -341,7 +344,7 @@ public class ExportActivity extends ActionBarActivity {
                                         getDecimalFormat(category).format(value);
 
                                 paragraph = new Paragraph(valueString, fontBasis);
-                                if(category == Event.Category.BloodSugar) {
+                                if(category == Measurement.Category.BloodSugar) {
                                     if (values[categoryPosition][hour] <
                                             preferenceHelper.getLimitHypoglycemia())
                                         paragraph = new Paragraph(valueString, fontBlue);
@@ -374,7 +377,7 @@ public class ExportActivity extends ActionBarActivity {
                     publishProgress(getString(R.string.day) + " " + currentDay + "/" + totalDays);
 
                     // Next day
-                    dateIteration.set(Calendar.DAY_OF_MONTH, dateIteration.get(Calendar.DAY_OF_MONTH) + 1);
+                    dateIteration.withDayOfMonth(dateIteration.dayOfMonth().get() + 1);
                     currentDay++;
                 }
 
@@ -420,29 +423,29 @@ public class ExportActivity extends ActionBarActivity {
         private void iTextGMetaData(Document document) {
             String subject = getResources().getString(R.string.app_name) + " " +
                     getResources().getString(R.string.export) + ": " +
-                    preferenceHelper.getDateFormat().format(dateStart.getTime()) + " - " +
-                    preferenceHelper.getDateFormat().format(dateEnd.getTime());
+                    preferenceHelper.getDateFormat().print(dateStart) + " - " +
+                    preferenceHelper.getDateFormat().print(dateEnd);
             document.addTitle(subject);
             document.addAuthor(getResources().getString(R.string.app_name));
             document.addCreator(getResources().getString(R.string.app_name));
         }
 
-        private Paragraph getWeekBar(Calendar weekStart) {
+        private Paragraph getWeekBar(DateTime weekStart) {
 
             Paragraph paragraph = new Paragraph();
 
             // Week
-            Chunk chunk = new Chunk(getString(R.string.calendarweek) + " " + weekStart.get(Calendar.WEEK_OF_YEAR));
+            Chunk chunk = new Chunk(getString(R.string.calendarweek) + " " + weekStart.getWeekyear());
             chunk.setFont(FontFactory.getFont(FontFactory.HELVETICA, 12, Font.BOLD));
             paragraph.add(chunk);
 
-            Calendar weekEnd = Calendar.getInstance();
-            weekEnd.setTime(weekStart.getTime());
-            weekEnd.set(Calendar.DAY_OF_WEEK, Calendar.SUNDAY);
+            DateTime weekEnd = new DateTime();
+            weekEnd = weekStart;
+            weekEnd.withDayOfWeek(DateTimeConstants.SUNDAY);
 
             // Dates
-            chunk = new Chunk("\n" + preferenceHelper.getDateFormat().format(weekStart.getTime()) + " - " +
-                    preferenceHelper.getDateFormat().format(weekEnd.getTime()));
+            chunk = new Chunk("\n" + preferenceHelper.getDateFormat().print(weekStart) + " - " +
+                    preferenceHelper.getDateFormat().print(weekEnd));
             chunk.setFont(FontFactory.getFont(FontFactory.HELVETICA, 9));
             paragraph.add(chunk);
 
@@ -468,9 +471,9 @@ public class ExportActivity extends ActionBarActivity {
         public void onEndPage(PdfWriter writer, Document document) {
             Rectangle rect = writer.getBoxSize("Header");
 
-            Calendar today = Calendar.getInstance();
+            DateTime today = new DateTime();
             String stamp = getString(R.string.export_stamp) + " " +
-                    preferenceHelper.getDateFormat().format(today.getTime());
+                    preferenceHelper.getDateFormat().print(today);
             Chunk chunk = new Chunk(stamp,
                     FontFactory.getFont(FontFactory.HELVETICA, 9, BaseColor.GRAY));
             ColumnText.showTextAligned(writer.getDirectContent(),
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/MainActivity.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/MainActivity.java
index 736c364..e9fb376 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/MainActivity.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/MainActivity.java
@@ -1,28 +1,21 @@
 package com.mydiabetesprt.diabetes;
 
 import android.content.Intent;
-import android.content.res.Configuration;
-import android.graphics.Typeface;
-import android.os.Build;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
-import android.support.v4.app.ActionBarDrawerToggle;
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
+import android.support.v4.app.FragmentStatePagerAdapter;
 import android.support.v4.app.FragmentTransaction;
-import android.support.v4.widget.DrawerLayout;
+import android.support.v4.view.ViewPager;
+import android.support.v7.app.ActionBar;
 import android.support.v7.app.ActionBarActivity;
+import android.view.Menu;
 import android.view.MenuItem;
-import android.view.View;
-import android.widget.AdapterView;
-import android.widget.ListView;
-import android.widget.TextView;
 
-import com.mydiabetesprt.diabetes.adapters.DrawerListViewAdapter;
 import com.mydiabetesprt.diabetes.fragments.LogFragment;
 import com.mydiabetesprt.diabetes.fragments.MainFragment;
 import com.mydiabetesprt.diabetes.fragments.TimelineFragment;
-import com.mydiabetesprt.diabetes.helpers.PreferenceHelper;
 import com.mydiabetesprt.diabetes.helpers.ViewHelper;
 
 import java.util.ArrayList;
@@ -35,25 +28,21 @@ public class MainActivity extends ActionBarActivity {
     public static final int REQUEST_EVENT_CREATED = 1;
     public static final String EVENT_CREATED = "EVENT_CREATED";
 
-    public enum FragmentType {
-        Home,
-        Timeline,
-        Log,
-        Calculator,
-        Export,
-        Settings
-    }
-
-    private DrawerLayout drawerLayout;
-    private ActionBarDrawerToggle drawerToggle;
-    private ListView drawerList;
+    private ViewPager viewPager;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_main);
-        getSupportActionBar().setTitle(getString(R.string.app_name));
-        initialize();
+        // TODO: Put in DiaguardApplication.java (needs Activity?)
+        PreferenceManager.setDefaultValues(this, R.xml.preferences, true);
+        initializeGUI();
+    }
+
+    @Override
+    public boolean onCreateOptionsMenu(Menu menu) {
+        getMenuInflater().inflate(R.menu.main, menu);
+        return true;
     }
 
     @Override
@@ -77,163 +66,87 @@ public class MainActivity extends ActionBarActivity {
         }
     }
 
-    @Override
-    protected void onPostCreate(Bundle savedInstanceState) {
-        super.onPostCreate(savedInstanceState);
-        // Animate Toggle
-        if(drawerToggle != null)
-            drawerToggle.syncState();
-    }
-
-    @Override
-    public void onConfigurationChanged(Configuration newConfig) {
-        super.onConfigurationChanged(newConfig);
-        if(drawerToggle != null)
-            drawerToggle.onConfigurationChanged(newConfig);
-    }
-
-    private void initialize() {
-        PreferenceManager.setDefaultValues(this, R.xml.preferences, false);
-        initializeDrawer();
-        PreferenceHelper preferenceHelper = new PreferenceHelper(this);
-        replaceFragment(preferenceHelper.getStartFragment());
-    }
+    private void initializeGUI() {
+        viewPager = (ViewPager) findViewById(R.id.viewpager);
+        viewPager.setAdapter(new FragmentPagerAdapter(getSupportFragmentManager()));
+        viewPager.setOnPageChangeListener(
+            new ViewPager.SimpleOnPageChangeListener() {
+                @Override
+                public void onPageSelected(int position) {
+                    getSupportActionBar().setSelectedNavigationItem(position);
+                }
+            }
+        );
 
-    private void initializeDrawer() {
-        List<String> menuItems = new ArrayList<String>();
-        menuItems.add(getString(R.string.home));
-        menuItems.add(getString(R.string.timeline));
-        menuItems.add(getString(R.string.log));
-        //menuItems.add(getString(R.string.statistics));
-        menuItems.add(getString(R.string.calculator));
-        menuItems.add(getString(R.string.export));
-        menuItems.add(getString(R.string.settings));
-
-        int[] menuImages = new int[3];
-        menuImages[0] = R.drawable.calculator;
-        menuImages[1] = R.drawable.export;
-        menuImages[2] = R.drawable.settings;
-
-        drawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);
-        drawerList = (ListView) findViewById(R.id.drawer_navigation);
-        DrawerListViewAdapter adapter = new DrawerListViewAdapter(this,
-                menuItems.toArray(new String[menuItems.size()]), menuImages, 3);
-        drawerList.setAdapter(adapter);
-        drawerList.setOnItemClickListener(new ListView.OnItemClickListener() {
+        ActionBar actionBar = getSupportActionBar();
+        actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_TABS);
+        ActionBar.TabListener tabListener = new ActionBar.TabListener() {
             @Override
-            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
-                replaceFragment(FragmentType.values()[position]);
-                drawerLayout.closeDrawer(drawerList);
+            public void onTabSelected(ActionBar.Tab tab, FragmentTransaction fragmentTransaction) {
+                viewPager.setCurrentItem(tab.getPosition());
             }
-        });
-
-        drawerToggle = new ActionBarDrawerToggle(this, drawerLayout, R.drawable.ic_drawer,
-                R.string.drawer_open, R.string.drawer_close) {
-
-            public void onDrawerClosed(View view) {
-                if(Build.VERSION.SDK_INT < 11)
-                    supportInvalidateOptionsMenu();
-                else
-                    invalidateOptionsMenu();
+            @Override
+            public void onTabUnselected(ActionBar.Tab tab, FragmentTransaction fragmentTransaction) {
             }
-
-            public void onDrawerOpened(View drawerView) {
-                if(Build.VERSION.SDK_INT < 11)
-                    supportInvalidateOptionsMenu();
-                else
-                    invalidateOptionsMenu();
+            @Override
+            public void onTabReselected(ActionBar.Tab tab, FragmentTransaction fragmentTransaction) {
             }
         };
-        drawerLayout.setDrawerListener(drawerToggle);
-
-        /*
-        // Hint for the Navigation Drawer
-        drawerLayout.openDrawer(drawerList);
-        new Handler().postDelayed(new Runnable() {
-                @Override
-                public void run() {
-                    drawerLayout.closeDrawer(drawerList);
-                }
-        }, 1300);
-        */
-
-        getSupportActionBar().setDisplayHomeAsUpEnabled(true);
-        getSupportActionBar().setHomeButtonEnabled(true);
-    }
-
-    /**
-     * Open a new Fragment
-     * @param fragmentType Enum to detect the specific Fragment to open
-     */
-    public void replaceFragment(FragmentType fragmentType) {
-
-        // Highlighting
-        if(drawerList != null && drawerList.getChildCount() > 0 &&
-                fragmentType.ordinal() < ((DrawerListViewAdapter)drawerList.getAdapter()).fragmentCount) {
-
-            // De-highlight every item
-            for (int i = 0; i < drawerList.getChildCount(); i++) {
-                View v = drawerList.getChildAt(i);
-                if(v != null) {
-                    TextView textViewListItem = (TextView) v.findViewById(R.id.title);
-                    if (textViewListItem != null)
-                        textViewListItem.setTypeface(null, Typeface.NORMAL);
-                }
-            }
-
-            // Highlight selected item
-            TextView selectedChild = (TextView) drawerList.getChildAt(fragmentType.ordinal()).
-                    findViewById(R.id.title);
-            if (selectedChild != null)
-                selectedChild.setTypeface(null, Typeface.BOLD);
-        }
-
-        // Do nothing if the user wants to reopen the current visible Fragment
-        FragmentManager fragmentManager = getSupportFragmentManager();
-        Fragment fragment = fragmentManager.findFragmentByTag(fragmentType.toString());
-        if(fragment != null && fragment.isVisible())
-            return;
-
-        switch (fragmentType) {
-            case Home:
-                fragment = new MainFragment();
-                break;
-            case Timeline:
-                fragment = new TimelineFragment();
-                break;
-            case Log:
-                fragment = new LogFragment();
-                break;
-            case Calculator:
-                startActivity(new Intent(this, CalculatorActivity.class));
-                return;
-            case Export:
-                startActivity(new Intent(this, ExportActivity.class));
-                return;
-            case Settings:
-                startActivity(new Intent(this, PreferencesActivity.class));
-                return;
-            default:
-                return;
+        for (int position = 0; position < viewPager.getAdapter().getCount(); position++) {
+            actionBar.addTab(actionBar.newTab()
+                    .setText(viewPager.getAdapter().getPageTitle(position))
+                    .setTabListener(tabListener));
         }
-
-        FragmentTransaction transaction = fragmentManager.beginTransaction();
-        transaction.replace(R.id.frame_content, fragment, fragmentType.toString());
-        transaction.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE);
-        transaction.commit();
     }
 
     @Override
     public boolean onOptionsItemSelected(MenuItem item) {
         switch (item.getItemId()) {
-            case android.R.id.home:
-                if (drawerLayout.isDrawerOpen(drawerList))
-                    drawerLayout.closeDrawer(drawerList);
-                else
-                    drawerLayout.openDrawer(drawerList);
+            case R.id.action_calculator:
+                startActivity(new Intent(this, CalculatorActivity.class));
+                return true;
+            case R.id.action_settings:
+                startActivity(new Intent(this, PreferencesActivity.class));
+                return true;
+            case R.id.action_newevent:
+                startActivityForResult(new Intent(this, NewEventActivity.class), MainActivity.REQUEST_EVENT_CREATED);
                 return true;
             default:
                 return super.onOptionsItemSelected(item);
         }
     }
+
+    private class FragmentPagerAdapter extends FragmentStatePagerAdapter {
+        List<Fragment> fragments;
+        int[] fragmentNameIds;
+
+        public FragmentPagerAdapter(FragmentManager fm) {
+            super(fm);
+            fragments = new ArrayList<Fragment>();
+            fragments.add(new MainFragment());
+            fragments.add(new TimelineFragment());
+            fragments.add(new LogFragment());
+
+            // TODO: Skip manual setting
+            fragmentNameIds = new int[fragments.size()];
+            fragmentNameIds[0] = R.string.home;
+            fragmentNameIds[1] = R.string.timeline;
+            fragmentNameIds[2] = R.string.log;
+        }
+
+        @Override
+        public Fragment getItem(int position) {
+            return fragments.get(position);
+        }
+
+        @Override
+        public int getCount() {
+            return fragments.size();
+        }
+
+        @Override
+        public CharSequence getPageTitle(int position) {
+            return getString(fragmentNameIds[position]);
+        }
+    }
 }
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/NewEventActivity.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/NewEventActivity.java
index 506ef27..5b415a9 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/NewEventActivity.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/NewEventActivity.java
@@ -19,8 +19,6 @@ import android.view.Menu;
 import android.view.MenuInflater;
 import android.view.MenuItem;
 import android.view.View;
-import android.view.animation.Animation;
-import android.view.animation.AnimationUtils;
 import android.widget.ArrayAdapter;
 import android.widget.AutoCompleteTextView;
 import android.widget.Button;
@@ -34,8 +32,9 @@ import android.widget.TimePicker;
 import com.mydiabetesprt.diabetes.database.DatabaseDataSource;
 import com.mydiabetesprt.diabetes.database.DatabaseHelper;
 import com.mydiabetesprt.diabetes.database.Entry;
-import com.mydiabetesprt.diabetes.database.Event;
 import com.mydiabetesprt.diabetes.database.makla;
+import com.mydiabetesprt.diabetes.database.Measurement;
+import com.mydiabetesprt.diabetes.database.Model;
 import com.mydiabetesprt.diabetes.fragments.DatePickerFragment;
 import com.mydiabetesprt.diabetes.fragments.TimePickerFragment;
 import com.mydiabetesprt.diabetes.helpers.FileHelper;
@@ -43,10 +42,11 @@ import com.mydiabetesprt.diabetes.helpers.PreferenceHelper;
 import com.mydiabetesprt.diabetes.helpers.Validator;
 import com.mydiabetesprt.diabetes.helpers.ViewHelper;
 
+import org.joda.time.DateTime;
+
 import java.io.File;
 import java.io.IOException;
 import java.util.ArrayList;
-import java.util.Calendar;
 import java.util.List;
 
 import de.keyboardsurfer.android.widget.crouton.Crouton;
@@ -66,7 +66,7 @@ public class NewEventActivity extends ActionBarActivity {
     DatabaseDataSource dataSource;
     PreferenceHelper preferenceHelper;
 
-    Calendar time;
+    DateTime time;
     boolean inputWasMade;
     Bitmap imageTemp;
     boolean mealInfoIsVisible;
@@ -119,7 +119,7 @@ public class NewEventActivity extends ActionBarActivity {
     public void initialize() {
         dataSource = new DatabaseDataSource(this);
         preferenceHelper = new PreferenceHelper(this);
-        time = Calendar.getInstance();
+        time = new DateTime();
         inputWasMade = false;
 
         getComponents();
@@ -142,60 +142,60 @@ public class NewEventActivity extends ActionBarActivity {
         if (extras != null) {
             if (extras.getLong(EXTRA_ID) != 0L) {
                 dataSource.open();
-                Event event = dataSource.getEventById(extras.getLong("ID"));
+                Measurement measurement = (Measurement)dataSource.get(DatabaseHelper.MEASUREMENT, extras.getLong("ID"));
+                Entry entry = (Entry)dataSource.get(DatabaseHelper.ENTRY, measurement.getEntryId());
                 dataSource.close();
 
-                time = event.getDate();
+                time = entry.getDate();
                 float value = preferenceHelper.
-                        formatDefaultToCustomUnit(event.getCategory(), event.getValue());
-                editTextNotes.setText(event.getNotes());
-                addValue(event.getCategory(), preferenceHelper.getDecimalFormat(
-                        event.getCategory()).format(value));
+                        formatDefaultToCustomUnit(measurement.getCategory(), measurement.getValue());
+                editTextNotes.setText(entry.getNote());
+                addValue(measurement.getCategory(), preferenceHelper.getDecimalFormat(
+                        measurement.getCategory()).format(value));
             }
             else if(extras.getSerializable(EXTRA_DATE) != null) {
-                time = (Calendar) extras.getSerializable(EXTRA_DATE);
+                time = (DateTime) extras.getSerializable(EXTRA_DATE);
             }
         }
     }
 
     private void setDate() {
-        buttonDate.setText(preferenceHelper.getDateFormat().format(time.getTime()));
+        buttonDate.setText(preferenceHelper.getDateFormat().print(time));
     }
 
     private void setTime() {
-        buttonTime.setText(preferenceHelper.getTimeFormat().format(time.getTime()));
+        buttonTime.setText(preferenceHelper.getTimeFormat().print(time));
     }
 
     private void setCategories() {
-        for(Event.Category category : preferenceHelper.getActiveCategories()) {
+        for(Measurement.Category category : preferenceHelper.getActiveCategories()) {
             addValue(category, null);
         }
     }
 
     private void submit() {
-        List<Event> events = new ArrayList<Event>();
+
         makla makla = null;
         boolean inputIsValid = true;
 
         // Validate date
-        Calendar now = Calendar.getInstance();
-        if (time.after(now)) {
+        DateTime now = new DateTime();
+        if (time.isAfter(now)) {
             ViewHelper.showAlert(this, getString(R.string.validator_value_infuture));
             return;
         }
 
+        List<Measurement> measurements = new ArrayList<Measurement>();
         // Iterate through all views and validate
         for (int position = 0; position < linearLayoutValues.getChildCount(); position++) {
             View view = linearLayoutValues.getChildAt(position);
-
             if(view != null && view.getTag() != null) {
-
-                if(view.getTag() instanceof Event.Category) {
+                if(view.getTag() instanceof Measurement.Category) {
                     EditText editTextValue = (EditText) view.findViewById(R.id.value);
                     String editTextText = editTextValue.getText().toString();
 
                     if(editTextText.length() > 0) {
-                        Event.Category category = (Event.Category) view.getTag();
+                        Measurement.Category category = (Measurement.Category) view.getTag();
 
                         if (!Validator.containsNumber(editTextText)) {
                             editTextValue.setError(getString(R.string.validator_value_empty));
@@ -209,13 +209,11 @@ public class NewEventActivity extends ActionBarActivity {
                         }
                         else {
                             editTextValue.setError(null);
-                            Event event = new Event();
+                            Measurement measurement = new Measurement();
                             float value = preferenceHelper.formatCustomToDefaultUnit(category, Float.parseFloat(editTextText));
-                            event.setValue(value);
-                            event.setDate(time);
-                            event.setNotes(editTextNotes.getText().toString());
-                            event.setCategory(category);
-                            events.add(event);
+                            measurement.setValue(value);
+                            measurement.setCategory(category);
+                            measurements.add(measurement);
                         }
                     }
                 }
@@ -228,8 +226,8 @@ public class NewEventActivity extends ActionBarActivity {
                         // Check if a Meal has been entered and get its values
                         boolean mealIsAvailable = false;
                         int eventPosition = 0;
-                        while(!mealIsAvailable && eventPosition < events.size()) {
-                            if(events.get(eventPosition).getCategory() == Event.Category.Meal)
+                        while(!mealIsAvailable && eventPosition < measurements.size()) {
+                            if(measurements.get(eventPosition).getCategory() == Measurement.Category.Meal)
                                 mealIsAvailable = true;
                             eventPosition++;
                         }
@@ -237,7 +235,7 @@ public class NewEventActivity extends ActionBarActivity {
                         if(mealIsAvailable) {
                             makla = new makla();
                             // TODO handle position better
-                            makla.setCarbohydrates(events.get(eventPosition-1).getValue());
+                            makla.setCarbohydrates(measurements.get(eventPosition-1).getValue());
                             makla.setName(editTextmakla.getText().toString());
                             makla.setDate(time);
                             // eventId is set later
@@ -248,7 +246,7 @@ public class NewEventActivity extends ActionBarActivity {
         }
 
         // Check whether there are values to submit
-        if(events.size() == 0) {
+        if(measurements.size() == 0) {
             ViewHelper.showAlert(this, getString(R.string.validator_value_none));
             inputIsValid = false;
         }
@@ -260,26 +258,28 @@ public class NewEventActivity extends ActionBarActivity {
             Entry entry = new Entry();
             entry.setDate(time);
             entry.setNote(editTextNotes.getText().toString());
-            long entryId = dataSource.insertEntry(entry);
+            long entryId = dataSource.insert(entry);
 
             // Events
             long[] ids;
             Bundle extras = getIntent().getExtras();
+            // Update existing
             if (extras != null && extras.getLong(EXTRA_ID) != 0L) {
-                events.get(0).setId(extras.getLong(EXTRA_ID));
+                measurements.get(0).setId(extras.getLong(EXTRA_ID));
                 ids = new long[1];
-                ids[0] = dataSource.updateEvent(events.get(0));
+                ids[0] = dataSource.update(measurements.get(0));
             }
+            // Insert new
             else {
-                ids = dataSource.insertEvents(events);
+                ids = dataSource.insert(measurements);
             }
 
             // makla
             if(makla != null) {
-                for(int eventPosition = 0; eventPosition < events.size(); eventPosition++) {
-                    if(events.get(eventPosition).getCategory() == Event.Category.Meal) {
-                        makla.setEventId(ids[eventPosition]);
-                        dataSource.insertmakla(makla);
+                for(int position = 0; position < measurements.size(); position++) {
+                    if(measurements.get(position).getCategory() == Measurement.Category.Meal) {
+                        makla.setEventId(ids[position]);
+                        dataSource.insert(makla);
                     }
                 }
             }
@@ -288,14 +288,14 @@ public class NewEventActivity extends ActionBarActivity {
 
             // Tell MainActivity that Events have been created
             Intent intent = new Intent();
-            intent.putExtra(MainActivity.EVENT_CREATED, events.size());
+            intent.putExtra(MainActivity.EVENT_CREATED, measurements.size());
             setResult(Activity.RESULT_OK, intent);
 
             finish();
         }
     }
 
-    private void addValue(final Event.Category category, String value) {
+    private void addValue(final Measurement.Category category, String value) {
         // Add view
         final LayoutInflater inflater = getLayoutInflater();
         final View view = inflater.inflate(R.layout.fragment_newvalue, linearLayoutValues, false);
@@ -314,7 +314,7 @@ public class NewEventActivity extends ActionBarActivity {
         if(value != null) {
             editTextValue.setText(value);
         }
-        if(category == Event.Category.BloodSugar)
+        if(category == Measurement.Category.BloodSugar)
             editTextValue.requestFocus();
 
         // OnChangeListener
@@ -344,18 +344,19 @@ public class NewEventActivity extends ActionBarActivity {
                         viewStatus.setBackgroundColor(getResources().getColor(R.color.green));
 
                     // Show an additional View for makla information
-                    if(category == Event.Category.Meal && !mealInfoIsVisible) {
+                    if(category == Measurement.Category.Meal && !mealInfoIsVisible) {
                         View viewMealInfo = inflater.inflate(R.layout.fragment_meal_info, linearLayoutValues, false);
                         viewMealInfo.setTag(DatabaseHelper.makla);
                         linearLayoutValues.addView(viewMealInfo, 3);
 
                         // AutoComplete
                         dataSource.open();
-                        List<makla> maklaList = dataSource.getmakla();
+                        List<Model> maklaList = dataSource.get(DatabaseHelper.makla, null, null, null, null, null, null, null);
                         dataSource.close();
                         String[] maklaNames = new String[maklaList.size()];
                         for(int maklaPosition = 0; maklaPosition < maklaList.size(); maklaPosition++) {
-                            maklaNames[maklaPosition] = maklaList.get(maklaPosition).getName();
+                            makla makla = (makla)maklaList.get(maklaPosition);
+                            maklaNames[maklaPosition] = makla.getName();
                         }
                         AutoCompleteTextView editTextmakla = (AutoCompleteTextView)viewMealInfo.findViewById(R.id.makla);
                         ArrayAdapter<String> adapter = new ArrayAdapter<String>(NewEventActivity.this, android.R.layout.simple_dropdown_item_1line, maklaNames);
@@ -378,8 +379,8 @@ public class NewEventActivity extends ActionBarActivity {
             long id = extras.getLong("ID");
             if (id != 0L) {
                 dataSource.open();
-                Event event = dataSource.getEventById(id);
-                dataSource.deleteEvent(event);
+                //Event event = dataSource.getEventById(id);
+                //dataSource.deleteEvent(event);
                 dataSource.close();
                 finish();
             }
@@ -427,9 +428,9 @@ public class NewEventActivity extends ActionBarActivity {
         DialogFragment fragment = new DatePickerFragment() {
             @Override
             public void onDateSet(DatePicker view, int year, int month, int day) {
-                time.set(Calendar.YEAR, year);
-                time.set(Calendar.MONTH, month);
-                time.set(Calendar.DAY_OF_MONTH, day);
+                time.withYear(year);
+                time.withMonthOfYear(month);
+                time.withDayOfMonth(day);
                 setDate();
             }
         };
@@ -443,8 +444,8 @@ public class NewEventActivity extends ActionBarActivity {
         DialogFragment fragment = new TimePickerFragment() {
             @Override
             public void onTimeSet(TimePicker view, int hourOfDay, int minute) {
-                time.set(Calendar.HOUR_OF_DAY, hourOfDay);
-                time.set(Calendar.MINUTE, minute);
+                time.withHourOfDay(hourOfDay);
+                time.withMinuteOfHour(minute);
                 setTime();
             }
         };
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/adapters/DrawerListViewAdapter.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/adapters/DrawerListViewAdapter.java
deleted file mode 100644
index 950fcb5..0000000
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/adapters/DrawerListViewAdapter.java
+++ /dev/null
@@ -1,70 +0,0 @@
-package com.mydiabetesprt.diabetes.adapters;
-
-import android.content.Context;
-import android.graphics.Typeface;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.BaseAdapter;
-import android.widget.ImageView;
-import android.widget.TextView;
-
-import com.mydiabetesprt.diabetes.R;
-import com.mydiabetesprt.diabetes.helpers.PreferenceHelper;
-
-/**
- * Created by Filip on 16.03.14.
- */
-public class DrawerListViewAdapter extends BaseAdapter {
-
-    private Context context;
-    private String[] titles;
-    private int[] icons;
-    public int fragmentCount;
-
-    PreferenceHelper preferenceHelper;
-
-    public DrawerListViewAdapter(Context context, String[] titles, int[] icons, int fragmentCount) {
-        this.context = context;
-        this.titles = titles;
-        this.icons = icons;
-        this.fragmentCount = fragmentCount;
-        this.preferenceHelper = new PreferenceHelper(context);
-    }
-
-    public View getView(int position, View convertView, ViewGroup parent) {
-        LayoutInflater inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
-
-        View itemView;
-        if(position < fragmentCount) {
-            itemView = inflater.inflate(R.layout.drawer_list_item_fragment, parent, false);
-        }
-        else {
-            itemView = inflater.inflate(R.layout.drawer_list_item_activity, parent, false);
-            ImageView imgIcon = (ImageView) itemView.findViewById(R.id.icon);
-            imgIcon.setImageResource(icons[position - fragmentCount]);
-        }
-
-        TextView txtTitle = (TextView) itemView.findViewById(R.id.title);
-        txtTitle.setText(titles[position]);
-        if(position == preferenceHelper.getStartFragment().ordinal())
-            txtTitle.setTypeface(null, Typeface.BOLD);
-
-        return itemView;
-    }
-
-    @Override
-    public int getCount() {
-        return titles.length;
-    }
-
-    @Override
-    public Object getItem(int position) {
-        return titles[position];
-    }
-
-    @Override
-    public long getItemId(int position) {
-        return position;
-    }
-}
\ No newline at end of file
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/adapters/EndlessListViewAdapter.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/adapters/EndlessListViewAdapter.java
deleted file mode 100644
index 449fd76..0000000
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/adapters/EndlessListViewAdapter.java
+++ /dev/null
@@ -1,120 +0,0 @@
-package com.mydiabetesprt.diabetes.adapters;
-
-import android.content.Context;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.view.animation.Animation;
-import android.view.animation.RotateAnimation;
-
-import com.mydiabetesprt.diabetes.R;
-import com.mydiabetesprt.diabetes.database.DatabaseDataSource;
-import com.mydiabetesprt.diabetes.database.Event;
-import com.commonsware.cwac.endless.EndlessAdapter;
-
-import java.util.ArrayList;
-import java.util.Calendar;
-import java.util.List;
-
-/**
- * Created by Filip on 03.05.2014.
- */
-public class EndlessListViewAdapter extends EndlessAdapter {
-
-    private RotateAnimation rotate;
-    private View pendingView;
-
-    private DatabaseDataSource dataSource;
-    private List<Event> cachedEvents;
-    private Calendar currentDate;
-    private Event.Category[] categories;
-
-    public boolean isScrollingUp;
-    public boolean isScrollingDown;
-
-    public EndlessListViewAdapter(Context context, Calendar startDate, Event.Category[] categories) {
-        super(new ListViewAdapterLog(context));
-
-        this.dataSource = new DatabaseDataSource(context);
-        this.currentDate = Calendar.getInstance();
-        this.currentDate.setTime(startDate.getTime());
-        this.categories = categories;
-
-        this.isScrollingUp = false;
-        this.isScrollingDown = false;
-
-        // First set of events
-        dataSource.open();
-        while(getWrappedEventAdapter().events.size() < 20) {
-            getWrappedEventAdapter().events.addAll(dataSource.getEventsOfDay(currentDate, categories));
-            currentDate.set(Calendar.DAY_OF_YEAR, currentDate.get(Calendar.DAY_OF_YEAR) - 1);
-        }
-        dataSource.close();
-
-        // Rotation of PendingView
-        rotate = new RotateAnimation(0f, 360f, Animation.RELATIVE_TO_SELF,
-                0.5f, Animation.RELATIVE_TO_SELF,
-                0.5f);
-        rotate.setDuration(600);
-        rotate.setRepeatMode(Animation.RESTART);
-        rotate.setRepeatCount(Animation.INFINITE);
-    }
-
-    protected ListViewAdapterLog getWrappedEventAdapter() {
-        return (ListViewAdapterLog)getWrappedAdapter();
-    }
-
-    @Override
-    protected View getPendingView(ViewGroup parent) {
-        // Placeholder
-        View row = LayoutInflater.from(parent.getContext()).inflate(R.layout.row, null);
-
-        pendingView = row.findViewById(android.R.id.text1);
-        pendingView.setVisibility(View.GONE);
-        pendingView = row.findViewById(R.id.throbber);
-        pendingView.setVisibility(View.VISIBLE);
-        startProgressAnimation();
-
-        return row;
-    }
-
-    @Override
-    protected boolean cacheInBackground() {
-
-        if(isScrollingDown || isScrollingUp) {
-
-            cachedEvents = new ArrayList<Event>();
-            dataSource.open();
-
-            if(isScrollingDown)
-                currentDate.set(Calendar.DAY_OF_YEAR, currentDate.get(Calendar.DAY_OF_YEAR) - 1);
-            else if(isScrollingUp)
-                currentDate.set(Calendar.DAY_OF_YEAR, currentDate.get(Calendar.DAY_OF_YEAR) + 1);
-
-            cachedEvents.addAll(dataSource.getEventsOfDay(currentDate, categories));
-            dataSource.close();
-        }
-
-        // Stop loading until user reaches one end of the ListView
-        return isScrollingDown || isScrollingUp;
-    }
-
-    @Override
-    protected void appendCachedData() {
-        if (isScrollingDown) {
-            getWrappedEventAdapter().events.addAll(cachedEvents);
-            isScrollingDown = false;
-        }
-        else if (isScrollingUp) {
-            for(Event event : cachedEvents)
-                getWrappedEventAdapter().events.add(0, event);
-            isScrollingUp = false;
-        }
-    }
-
-    void startProgressAnimation() {
-        if (pendingView!=null) {
-            pendingView.startAnimation(rotate);
-        }
-    }
-}
\ No newline at end of file
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/adapters/ListViewAdapterLog.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/adapters/ListViewAdapterLog.java
index de71e1c..a1720b7 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/adapters/ListViewAdapterLog.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/adapters/ListViewAdapterLog.java
@@ -11,7 +11,7 @@ import android.widget.ImageView;
 import android.widget.TextView;
 
 import com.mydiabetesprt.diabetes.R;
-import com.mydiabetesprt.diabetes.database.Event;
+import com.mydiabetesprt.diabetes.database.Measurement;
 import com.mydiabetesprt.diabetes.helpers.PreferenceHelper;
 
 import java.util.ArrayList;
@@ -32,19 +32,19 @@ public class ListViewAdapterLog extends BaseAdapter {
     }
 
     Context context;
-    public List<Event> events;
+    public List<Measurement> events;
     PreferenceHelper preferenceHelper;
     HashMap<String, Integer> imageResources;
 
     public ListViewAdapterLog(Context context){
         this.context = context;
-        this.events = new ArrayList<Event>();
+        this.events = new ArrayList<Measurement>();
 
         preferenceHelper = new PreferenceHelper((Activity)context);
 
         // Pre-load image resources
         imageResources = new HashMap<String, Integer>();
-        for(Event.Category category : Event.Category.values()) {
+        for(Measurement.Category category : Measurement.Category.values()) {
             String name = category.name().toLowerCase();
             int resourceId = context.getResources().getIdentifier(name,
                     "drawable", context.getPackageName());
@@ -56,7 +56,7 @@ public class ListViewAdapterLog extends BaseAdapter {
         return events.size();
     }
 
-    public Event getItem(int position) {
+    public Measurement getItem(int position) {
         return events.get(position);
     }
 
@@ -85,11 +85,11 @@ public class ListViewAdapterLog extends BaseAdapter {
         else
             holder = (ViewHolder) convertView.getTag();
 
-        Event event = getItem(position);
+        Measurement event = getItem(position);
 
         holder.image.setImageResource(imageResources.get(event.getCategory().name().toLowerCase()));
 
-        holder.time.setText(preferenceHelper.getTimeFormat().format(event.getDate().getTime()));
+        //holder.time.setText(preferenceHelper.getTimeFormat().format(event.getDate().getTime()));
 
         holder.unit.setText(preferenceHelper.getUnitAcronym(event.getCategory()));
 
@@ -99,15 +99,15 @@ public class ListViewAdapterLog extends BaseAdapter {
 
         // Highlighting
         holder.value.setTextColor(Color.BLACK);
-        if(event.getCategory() == Event.Category.BloodSugar && preferenceHelper.limitsAreHighlighted()) {
+        if(event.getCategory() == Measurement.Category.BloodSugar && preferenceHelper.limitsAreHighlighted()) {
             if(event.getValue() > preferenceHelper.getLimitHyperglycemia())
                 holder.value.setTextColor(context.getResources().getColor(R.color.red));
             else if(event.getValue() < preferenceHelper.getLimitHypoglycemia())
                 holder.value.setTextColor(context.getResources().getColor(R.color.blue));
         }
 
-        if(event.getNotes().length() > 0)
-            holder.noteInfo.setVisibility(View.VISIBLE);
+        //if(event.getNotes().length() > 0)
+           // holder.noteInfo.setVisibility(View.VISIBLE);
 
         return convertView;
     }
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/DatabaseDataSource.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/DatabaseDataSource.java
index e08a3ed..c65b548 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/DatabaseDataSource.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/DatabaseDataSource.java
@@ -2,23 +2,22 @@ package com.mydiabetesprt.diabetes.database;
 
 import android.content.ContentValues;
 import android.content.Context;
+import android.content.res.Resources;
 import android.database.Cursor;
 import android.database.sqlite.SQLiteDatabase;
 
 import com.mydiabetesprt.diabetes.helpers.Helper;
 
-import java.text.SimpleDateFormat;
 import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.Calendar;
 import java.util.List;
 
 /**
  * Created by Filip on 20.10.13.
  */
 public class DatabaseDataSource {
-    public static final String DB_FORMAT_DATE = "yyyy-MM-dd";
+
     public static final String DB_FORMAT_DATE_AND_TIME = "yyyy-MM-dd HH:mm:ss";
+    public static final String DB_FORMAT_DATE = "yyyy-MM-dd";
     public static final String DB_FORMAT_TIME = "HH:mm";
 
     public static final String FIRST_SECOND_OF_DAY = "00:00:00";
@@ -31,8 +30,6 @@ public class DatabaseDataSource {
         dbHelper = new DatabaseHelper(context);
     }
 
-    //region Database
-
     public void open() {
         db = dbHelper.getWritableDatabase();
     }
@@ -46,246 +43,180 @@ public class DatabaseDataSource {
                 dbHelper.getWritableDatabase().isOpen();
     }
 
-    // endregion
+    // region Helper
 
-    // region Entry
+    private ContentValues getContentValues(Model model) {
+        ContentValues values = null;
 
-    public long insertEntry(Entry entry) {
-        ContentValues values = new ContentValues();
-        values.put(DatabaseHelper.DATE,
-                Helper.getDateDatabaseFormat().format(entry.getDate().getTime()));
-        values.put(DatabaseHelper.NOTE, entry.getNote());
-        return db.insertOrThrow(DatabaseHelper.ENTRY, null, values);
-    }
+        if(model.getClass() == Entry.class)
+            values = getContentValuesEntry((Entry)model);
+        else if(model.getClass() == Measurement.class)
+            values = getContentValuesMeasurement((Measurement)model);
+        else if(model.getClass() == makla.class)
+            values = getContentValuesmakla((makla)model);
 
-    public List<Entry> getEntries() {
-        String query = "SELECT * FROM " + DatabaseHelper.ENTRY + " ORDER BY " + DatabaseHelper.DATE;
-        Cursor cursor = db.rawQuery(query, null);
+        if(values == null)
+            throw new IllegalArgumentException("getContentValues() missing for model '" +
+                    model.getClass().getName() + "'");
 
-        List<Entry> entries = new ArrayList<Entry>();
-        if (cursor.moveToFirst()) {
-            while(!cursor.isAfterLast()) {
-                Entry entry = new Entry();
-                entry.setId(Integer.parseInt(cursor.getString(0)));
-                entry.setDate(cursor.getString(1));
-                entry.setNote(cursor.getString(2));
-                entries.add(entry);
-
-                cursor.moveToNext();
-            }
-        }
-        return entries;
+        return values;
     }
 
-    // endregion
-
-    // region Measurement
+    private ContentValues getContentValuesEntry(Entry entry) {
+        ContentValues values = new ContentValues();
+        values.put(DatabaseHelper.DATE, Helper.getDateDatabaseFormat().print(entry.getDate()));
+        values.put(DatabaseHelper.NOTE, entry.getNote());
+        return values;
+    }
 
-    public long insertMeasurement(Measurement measurement) {
+    private ContentValues getContentValuesMeasurement(Measurement measurement) {
         ContentValues values = new ContentValues();
         values.put(DatabaseHelper.VALUE, measurement.getValue());
         values.put(DatabaseHelper.CATEGORY, measurement.getCategory().toString());
         values.put(DatabaseHelper.ENTRY_ID, measurement.getEntryId());
-        return db.insertOrThrow(DatabaseHelper.ENTRY, null, values);
-    }
-
-    public List<Measurement> getMeasurementsOfEntry(Entry entry) {
-        String query = "SELECT * FROM " + DatabaseHelper.MEASUREMENT + " WHERE " +
-        DatabaseHelper.ENTRY_ID + " = " + entry.getId() + " ";
-        Cursor cursor = db.rawQuery(query, null);
-
-        List<Measurement> measurements = new ArrayList<Measurement>();
-        if (cursor.moveToFirst()) {
-            while(!cursor.isAfterLast()) {
-                Measurement measurement = new Measurement();
-                measurement.setId(Integer.parseInt(cursor.getString(0)));
-                measurement.setValue(Float.parseFloat(cursor.getString(1)));
-                measurement.setCategory(Measurement.Category.valueOf(cursor.getString(2)));
-                measurement.setEntryId(Integer.parseInt(cursor.getString(3)));
-                measurements.add(measurement);
-
-                cursor.moveToNext();
-            }
-        }
-        return measurements;
+        return values;
     }
 
-    // endregion
-
-    // region Events
-
-    public long insertEvent(Event event) {
+    private ContentValues getContentValuesmakla(makla makla) {
         ContentValues values = new ContentValues();
-        values.put(DatabaseHelper.VALUE, event.getValue());
-        values.put(DatabaseHelper.DATE,
-                Helper.getDateDatabaseFormat().format(event.getDate().getTime()));
-        values.put(DatabaseHelper.NOTES, event.getNotes());
-        values.put(DatabaseHelper.CATEGORY, event.getCategory().toString());
-
-        return db.insertOrThrow(DatabaseHelper.EVENTS, null, values);
+        values.put(DatabaseHelper.CARBOHYDRATES, makla.getCarbohydrates());
+        values.put(DatabaseHelper.NAME, makla.getName());
+        values.put(DatabaseHelper.DATE, Helper.getDateDatabaseFormat().print(makla.getDate()));
+        values.put(DatabaseHelper.ENTRY_ID, makla.getEventId());
+        return values;
     }
 
-    public long[] insertEvents(List<Event> events) {
-        long[] ids = new long[events.size()];
-        for(int position = 0; position < events.size(); position++) {
-            ids[position] = insertEvent(events.get(position));
-        }
-        return ids;
-    }
 
-    public long updateEvent(Event event) {
-        ContentValues values = new ContentValues();
-        values.put(DatabaseHelper.VALUE, event.getValue());
-        values.put(DatabaseHelper.DATE, Helper.getDateDatabaseFormat().
-                format(event.getDate().getTime()));
-        values.put(DatabaseHelper.NOTES, event.getNotes());
-        values.put(DatabaseHelper.CATEGORY, event.getCategory().toString());
-
-        return db.update(DatabaseHelper.EVENTS,
-                values,
-                DatabaseHelper.ID + " = " + event.getId(),
-                null);
+    public Entry getEntry(Cursor cursor) {
+        Entry entry = new Entry();
+        entry.setId(Integer.parseInt(cursor.getString(0)));
+        entry.setDate(cursor.getString(1));
+        entry.setNote(cursor.getString(2));
+        return entry;
     }
 
-    public int deleteEvent(Event event) {
-        return db.delete(DatabaseHelper.EVENTS,
-                DatabaseHelper.ID + " = " + event.getId(),
-                null);
+    public Measurement getMeasurement(Cursor cursor) {
+        Measurement measurement = new Measurement();
+        measurement.setId(Integer.parseInt(cursor.getString(0)));
+        measurement.setValue(Float.parseFloat(cursor.getString(1)));
+        measurement.setCategory(Measurement.Category.valueOf(cursor.getString(2)));
+        measurement.setEntryId(Integer.parseInt(cursor.getString(3)));
+        return measurement;
     }
 
-    public int deleteEventById(Long id) {
-        return db.delete(DatabaseHelper.EVENTS,
-                DatabaseHelper.ID + " = " + id,
-                null);
+    public makla getmakla(Cursor cursor) {
+        makla makla = new makla();
+        makla.setId(Integer.parseInt(cursor.getString(0)));
+        makla.setCarbohydrates(Float.parseFloat(cursor.getString(1)));
+        makla.setName(cursor.getString(2));
+        makla.setDate(cursor.getString(3));
+        makla.setEventId(Integer.parseInt(cursor.getString(4)));
+        return makla;
     }
 
-    public int deleteEventsBefore(Calendar calendar) {
-        SimpleDateFormat format = new SimpleDateFormat(DB_FORMAT_DATE);
-        String date = format.format(calendar.getTime());
+    // endregion
 
-        return db.delete(DatabaseHelper.EVENTS,
-                DatabaseHelper.DATE + " <= Datetime('" + date + " " + LAST_SECOND_OF_DAY + "')",
-                null);
-    }
+    // region Read
 
-    public int countEvents() {
-        String query = "SELECT * FROM " + DatabaseHelper.EVENTS;
-        Cursor cursor = db.rawQuery(query, null);
-        int count = cursor.getCount();
-        cursor.close();
+    public Model get(String table, long id) {
+        String where = DatabaseHelper.ID + "=?";
+        Cursor cursor = db.query(table, null, where, new String[] { String.valueOf(id) },
+                null, null, null, null);
+        cursor.moveToFirst();
 
-        return count;
+        if(table.equals(DatabaseHelper.ENTRY))
+            return getEntry(cursor);
+        else if(table.equals(DatabaseHelper.MEASUREMENT))
+            return getMeasurement(cursor);
+        else if(table.equals(DatabaseHelper.makla))
+            return getmakla(cursor);
+        else
+            throw new Resources.NotFoundException();
     }
 
-    public int countEvents(Event.Category category) {
-        String query = "SELECT * FROM " + DatabaseHelper.EVENTS + " WHERE " +
-                DatabaseHelper.CATEGORY + " = '" + category.name() + "' ";
-        Cursor cursor = db.rawQuery(query, null);
-        int count = cursor.getCount();
-        cursor.close();
+    public List<Model> get(String table, String[] columns, String selection, String[] selectionArgs,
+                           String groupBy, String having, String orderBy, String limit) {
+        Cursor cursor = db.query(table, columns, selection, selectionArgs, groupBy, having, orderBy, limit);
 
-        return count;
+        List<Model> objects = new ArrayList<Model>();
+        if (cursor.moveToFirst()) {
+            while(!cursor.isAfterLast()) {
+                if(table.equals(DatabaseHelper.ENTRY))
+                    objects.add(getEntry(cursor));
+                else if(table.equals(DatabaseHelper.MEASUREMENT))
+                    objects.add(getMeasurement(cursor));
+                else if(table.equals(DatabaseHelper.makla))
+                    objects.add(getmakla(cursor));
+                cursor.moveToNext();
+            }
+        }
+        return objects;
     }
 
-    public int countEvents(Event.Category category, Calendar day) {
-        SimpleDateFormat format = new SimpleDateFormat(DB_FORMAT_DATE);
-        String date = format.format(day.getTime());
-
-        String query = "SELECT * FROM " + DatabaseHelper.EVENTS + " WHERE " +
-                DatabaseHelper.DATE + " >= Datetime('" + date + " " + FIRST_SECOND_OF_DAY + "') AND " +
-                DatabaseHelper.DATE + " <= Datetime('" + date + " " + LAST_SECOND_OF_DAY + "') AND " +
-                DatabaseHelper.CATEGORY + " = '" + category.name() + "' ";
+    public List<Model> getJoin(String tableOne, String tableTwo, String[] columns, String selection, String[] selectionArgs,
+                           String groupBy, String having, String orderBy, String limit) {
+        //String query = String.format("SELECT %s FROM %s INNER JOIN %s ON %s.%s = %s.%s ORDER BY entry.date LIMIT 1",
+        //        Helper.toStringDelimited(columns, ','), tableOne, tableTwo, tableOne, DatabaseHelper.ID, tableTwo, DatabaseHelper.ID);
+        String query = "SELECT * FROM entry INNER JOIN measurement ON measurement.entryId = entry._id ORDER BY entry.date LIMIT 1";
         Cursor cursor = db.rawQuery(query, null);
-        int count = cursor.getCount();
-        cursor.close();
-
-        return count;
-    }
 
-    public int countEventsBefore(Calendar calendar) {
-        SimpleDateFormat format = new SimpleDateFormat(DB_FORMAT_DATE);
-        String date = format.format(calendar.getTime());
+        List<Model> objects = new ArrayList<Model>();
+        if (cursor.moveToFirst()) {
+            while(!cursor.isAfterLast()) {
 
-        String query = "SELECT * FROM " + DatabaseHelper.EVENTS + " WHERE " +
-                DatabaseHelper.DATE + " <= Datetime('" + date + " " + LAST_SECOND_OF_DAY + "')";
-        Cursor cursor = db.rawQuery(query, null);
-        int count = cursor.getCount();
-        cursor.close();
 
-        return count;
+                cursor.moveToNext();
+            }
+        }
+        return objects;
     }
 
-    public int countEventsAboveValue(Event.Category category, Calendar day, float limit) {
-        SimpleDateFormat format = new SimpleDateFormat(DB_FORMAT_DATE);
-        String date = format.format(day.getTime());
-
-        String query = "SELECT * FROM " + DatabaseHelper.EVENTS + " WHERE " +
-                DatabaseHelper.VALUE + " > " + limit + " AND " +
-                DatabaseHelper.DATE + " >= Datetime('" + date + " " + FIRST_SECOND_OF_DAY + "') AND " +
-                DatabaseHelper.DATE + " <= Datetime('" + date + " " + LAST_SECOND_OF_DAY + "') AND " +
-                DatabaseHelper.CATEGORY + " = '" + category.name() + "' ";
+    public int count(String table, String[] columns, String selection, String selectionArg) {
+        String query = "SELECT COUNT(*) FROM " + table + " WHERE " + selection + " = '" + selectionArg + "';";
         Cursor cursor = db.rawQuery(query, null);
-        int count = cursor.getCount();
+        cursor.moveToFirst();
+        int count = cursor.getInt(0);
         cursor.close();
-
         return count;
     }
 
-    public int countEventsBelowValue(Event.Category category, Calendar day, float limit) {
-        SimpleDateFormat format = new SimpleDateFormat(DB_FORMAT_DATE);
-        String date = format.format(day.getTime());
+    // endregion
 
-        String query = "SELECT * FROM " + DatabaseHelper.EVENTS + " WHERE " +
-                DatabaseHelper.VALUE + " < " + limit + " AND " +
-                DatabaseHelper.DATE + " >= Datetime('" + date + " " + FIRST_SECOND_OF_DAY + "') AND " +
-                DatabaseHelper.DATE + " <= Datetime('" + date + " " + LAST_SECOND_OF_DAY + "') AND " +
-                DatabaseHelper.CATEGORY + " = '" + category.name() + "' ";
-        Cursor cursor = db.rawQuery(query, null);
-        int count = cursor.getCount();
-        cursor.close();
+    // region Write
 
-        return count;
+    public long insert(Model model){
+        return db.insertOrThrow(model.getTableName(), null, getContentValues(model));
     }
 
-    public Event getEventById(long id) {
-        String query = "SELECT * FROM " + DatabaseHelper.EVENTS + " WHERE " +
-                DatabaseHelper.ID + " = " + id;
-        Cursor cursor = db.rawQuery(query, null);
-
-        Event event = new Event();
-
-        if (cursor.moveToFirst()) {
-            event.setId(Integer.parseInt(cursor.getString(0)));
-            event.setValue(Float.parseFloat(cursor.getString(1)));
-            event.setDate(cursor.getString(2));
-            event.setNotes(cursor.getString(3));
-            event.setCategory(Event.Category.valueOf(cursor.getString(4)));
+    public long[] insert(List<? extends Model> models){
+        long[] ids = new long[models.size()];
+        for(int position = 0; position < models.size(); position++) {
+            Model model = models.get(position);
+            ids[position] = db.insertOrThrow(model.getTableName(), null, getContentValues(model));
         }
-        return event;
+        return ids;
     }
 
-    public List<Event> getEvents() {
-        String query = "SELECT * FROM " + DatabaseHelper.EVENTS + " ORDER BY " + DatabaseHelper.DATE;
-        Cursor cursor = db.rawQuery(query, null);
+    public long update(Model model) {
+        return db.update(model.getTableName(), getContentValues(model),
+                DatabaseHelper.ID + " = " + model.getId(), null);
+    }
 
-        List<Event> events = new ArrayList<Event>();
-        if (cursor.moveToFirst()) {
-            while(!cursor.isAfterLast()) {
-                Event event = new Event();
-                event.setId(Integer.parseInt(cursor.getString(0)));
-                event.setValue(Float.parseFloat(cursor.getString(1)));
-                event.setDate(cursor.getString(2));
-                event.setNotes(cursor.getString(3));
-                event.setCategory(Event.Category.valueOf(cursor.getString(4)));
-                events.add(event);
+    public int delete(Model model) {
+        return db.delete(model.getTableName(),
+                DatabaseHelper.ID + "=?",
+                new String[]{Long.toString(model.getId())});
+    }
 
-                cursor.moveToNext();
-            }
-        }
-        return events;
+    public int delete(Model model, String selection, String[] selectionArgs) {
+        return db.delete(model.getTableName(), selection + "=?", selectionArgs);
     }
 
-    public Event getLatestEvent(Event.Category category) {
+    // endregion
+
+    /*
+
+    public Measurement getLatestMeasurement(Measurement.Category category) {
         String query = "SELECT * FROM " + DatabaseHelper.EVENTS + " WHERE " +
                 DatabaseHelper.CATEGORY + " = '" + category.name() + "' " +
                 "ORDER BY " + DatabaseHelper.DATE + " DESC LIMIT 1;";
@@ -412,7 +343,7 @@ public class DatabaseDataSource {
         String query = "SELECT AVG(" + DatabaseHelper.VALUE + ") FROM " + DatabaseHelper.EVENTS + " WHERE " +
                 DatabaseHelper.DATE + " >= Datetime('" + format.format(dateBefore.getTime()) + "') AND " +
                 DatabaseHelper.DATE + " <= Datetime('" + format.format(now.getTime()) + "') AND " +
-                DatabaseHelper.CATEGORY + " = '" + Event.Category.BloodSugar.toString() + "' ";
+                DatabaseHelper.CATEGORY + " = '" + Measurement.Category.BloodSugar.toString() + "' ";
         Cursor cursor = db.rawQuery(query, null);
 
         float average = 0;
@@ -422,7 +353,8 @@ public class DatabaseDataSource {
         return average;
     }
 
-    public float[][] getAverageDataTable(Calendar date, Event.Category[] categories, int columns) {
+
+    public float[][] getAverageDataTable(Calendar date, Measurement.Category[] categories, int columns) {
         float[][] values = new float[categories.length][columns];
         List<Event> events = getEventsOfDay(date, categories);
 
@@ -455,41 +387,5 @@ public class DatabaseDataSource {
         }
         return values;
     }
-
-    // endregion
-
-    // region makla
-
-    public long insertmakla(makla makla) {
-        ContentValues values = new ContentValues();
-        values.put(DatabaseHelper.CARBOHYDRATES, makla.getCarbohydrates());
-        values.put(DatabaseHelper.NAME, makla.getName());
-        values.put(DatabaseHelper.DATE,
-                Helper.getDateDatabaseFormat().format(makla.getDate().getTime()));
-        values.put(DatabaseHelper.ENTRY_ID, makla.getEventId());
-        return db.insertOrThrow(DatabaseHelper.makla, null, values);
-    }
-
-    public List<makla> getmakla() {
-        String query = "SELECT * FROM " + DatabaseHelper.makla + " ORDER BY " + DatabaseHelper.DATE;
-        Cursor cursor = db.rawQuery(query, null);
-
-        List<makla> maklaList = new ArrayList<makla>();
-        if (cursor.moveToFirst()) {
-            while(!cursor.isAfterLast()) {
-                makla makla = new makla();
-                makla.setId(Integer.parseInt(cursor.getString(0)));
-                makla.setCarbohydrates(Float.parseFloat(cursor.getString(1)));
-                makla.setName(cursor.getString(2));
-                makla.setDate(cursor.getString(3));
-                makla.setEventId(Integer.parseInt(cursor.getString(4)));
-                maklaList.add(makla);
-
-                cursor.moveToNext();
-            }
-        }
-        return maklaList;
-    }
-
-    // endregion
+    */
 }
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/DatabaseHelper.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/DatabaseHelper.java
index 62ec161..1370a8f 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/DatabaseHelper.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/DatabaseHelper.java
@@ -6,11 +6,6 @@ import android.database.Cursor;
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteOpenHelper;
 
-import com.mydiabetesprt.diabetes.helpers.Helper;
-
-import java.util.ArrayList;
-import java.util.List;
-
 /**
  * Created by Filip on 20.10.13.
  */
@@ -91,7 +86,7 @@ public class DatabaseHelper extends SQLiteOpenHelper {
                 VALUE + " REAL NOT NULL, " +
                 CATEGORY + " TEXT NOT NULL, " +
                 ENTRY_ID + " INTEGER NOT NULL, " +
-                "FOREIGN KEY(" + ENTRY_ID + ") REFERENCES " + ENTRY + " (" + ID + "));");
+                "FOREIGN KEY(" + ENTRY_ID + ") REFERENCES " + ENTRY + " (" + ID + ") ON UPDATE CASCADE);");
         sqLiteDatabase.execSQL("CREATE TABLE IF NOT EXISTS " +
                 makla + " (" +
                 ID + " INTEGER PRIMARY KEY, " +
@@ -102,8 +97,8 @@ public class DatabaseHelper extends SQLiteOpenHelper {
                 ID + " INTEGER PRIMARY KEY, " +
                 MEASUREMENT_ID + " INTEGER, " +
                 makla_ID + " INTEGER, " +
-                "FOREIGN KEY(" + MEASUREMENT_ID + ") REFERENCES " + MEASUREMENT + " (" + ID + "), " +
-                "FOREIGN KEY(" + makla_ID + ") REFERENCES " + makla + " (" + ID + "));");
+                "FOREIGN KEY(" + MEASUREMENT_ID + ") REFERENCES " + MEASUREMENT + " (" + ID + ") ON UPDATE CASCADE, " +
+                "FOREIGN KEY(" + makla_ID + ") REFERENCES " + makla + " (" + ID + ") ON UPDATE CASCADE);");
     }
 
     @Override
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/Entry.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/Entry.java
index 9a8cedb..4487fb0 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/Entry.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/Entry.java
@@ -2,42 +2,25 @@ package com.mydiabetesprt.diabetes.database;
 
 import com.mydiabetesprt.diabetes.helpers.Helper;
 
-import java.text.ParseException;
-import java.util.Calendar;
+import org.joda.time.DateTime;
 
 /**
  * Created by Filip on 09.08.2014.
  */
-public class Entry {
-
-    private long id;
-    private Calendar date;
+public class Entry extends Model {
+    private DateTime date;
     private String note;
 
-    public long getId() {
-        return id;
-    }
-
-    public void setId(long id) {
-        this.id = id;
-    }
-
-    public Calendar getDate() {
+    public DateTime getDate() {
         return date;
     }
 
-    public void setDate(Calendar date) {
+    public void setDate(DateTime date) {
         this.date = date;
     }
 
     public void setDate(String dateString) {
-        try{
-            this.date = Calendar.getInstance();
-            this.date.setTime(Helper.getDateDatabaseFormat().parse(dateString));
-        }
-        catch (ParseException ex) {
-            ex.printStackTrace();
-        }
+        this.date = new DateTime(Helper.getDateDatabaseFormat().parseDateTime(dateString));
     }
 
     public String getNote() {
@@ -47,4 +30,9 @@ public class Entry {
     public void setNote(String note) {
         this.note = note;
     }
+
+    @Override
+    public String getTableName() {
+        return DatabaseHelper.ENTRY;
+    }
 }
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/Event.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/Event.java
deleted file mode 100644
index 6cf1486..0000000
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/Event.java
+++ /dev/null
@@ -1,77 +0,0 @@
-package com.mydiabetesprt.diabetes.database;
-
-import com.mydiabetesprt.diabetes.helpers.Helper;
-
-import java.text.ParseException;
-import java.util.Calendar;
-
-/**
- * Created by Filip on 20.10.13.
- */
-public class Event {
-
-    private long id;
-    private float value;
-    private Calendar date;
-    private String notes;
-    private Category category;
-    private long entryId;
-
-    public enum Category {
-        BloodSugar,
-        Bolus,
-        Meal,
-        Activity,
-        HbA1c,
-        Weight,
-        Pulse
-    }
-
-    public long getId() { return id; }
-
-    public void setId(long id) {
-        this.id = id;
-    }
-
-    public float getValue() {
-        return value;
-    }
-
-    public void setValue(float value) {
-        this.value = value;
-    }
-
-    public Calendar getDate() {
-        return date;
-    }
-
-    public void setDate(Calendar date) {
-        this.date = date;
-    }
-
-    public void setDate(String dateString) {
-        try{
-            this.date = Calendar.getInstance();
-            this.date.setTime(Helper.getDateDatabaseFormat().parse(dateString));
-        }
-        catch (ParseException ex) {
-            ex.printStackTrace();
-        }
-    }
-
-    public Category getCategory() { return category; }
-
-    public void setCategory(Category category) { this.category = category; }
-
-    public String getNotes() { return notes; }
-
-    public void setNotes(String notes) { this.notes = notes; }
-
-    public long getEntryId() {
-        return entryId;
-    }
-
-    public void setEntryId(long entryId) {
-        this.entryId = entryId;
-    }
-}
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/makla.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/makla.java
index 36dfe23..328b815 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/makla.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/makla.java
@@ -2,26 +2,18 @@ package com.mydiabetesprt.diabetes.database;
 
 import com.mydiabetesprt.diabetes.helpers.Helper;
 
-import java.text.ParseException;
-import java.util.Calendar;
+import org.joda.time.DateTime;
 
 /**
  * Created by Filip on 09.08.14.
  */
-public class makla {
+public class makla extends Model {
 
-    private long id;
     private float carbohydrates;
     private String name;
-    private Calendar date;
+    private DateTime date;
     private long eventId;
 
-    public long getId() { return id; }
-
-    public void setId(long id) {
-        this.id = id;
-    }
-
     public float getCarbohydrates() {
         return carbohydrates;
     }
@@ -38,22 +30,16 @@ public class makla {
         this.name = name;
     }
 
-    public Calendar getDate() {
+    public DateTime getDate() {
         return date;
     }
 
-    public void setDate(Calendar date) {
+    public void setDate(DateTime date) {
         this.date = date;
     }
 
     public void setDate(String dateString) {
-        try{
-            this.date = Calendar.getInstance();
-            this.date.setTime(Helper.getDateDatabaseFormat().parse(dateString));
-        }
-        catch (ParseException ex) {
-            ex.printStackTrace();
-        }
+        this.date = Helper.getDateDatabaseFormat().parseDateTime(dateString);
     }
 
     public long getEventId() {
@@ -63,4 +49,9 @@ public class makla {
     public void setEventId(long eventId) {
         this.eventId = eventId;
     }
+
+    @Override
+    public String getTableName() {
+        return DatabaseHelper.makla;
+    }
 }
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/Measurement.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/Measurement.java
index 48558e2..6221871 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/Measurement.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/Measurement.java
@@ -1,16 +1,10 @@
 package com.mydiabetesprt.diabetes.database;
 
-import com.mydiabetesprt.diabetes.helpers.Helper;
-
-import java.text.ParseException;
-import java.util.Calendar;
-
 /**
  * Created by Filip on 20.10.13.
  */
-public class Measurement {
+public class Measurement extends Model {
 
-    private long id;
     private float value;
     private Category category;
     private long entryId;
@@ -25,12 +19,6 @@ public class Measurement {
         Pulse
     }
 
-    public long getId() { return id; }
-
-    public void setId(long id) {
-        this.id = id;
-    }
-
     public float getValue() {
         return value;
     }
@@ -50,4 +38,9 @@ public class Measurement {
     public void setEntryId(long entryId) {
         this.entryId = entryId;
     }
+
+    @Override
+    public String getTableName() {
+        return DatabaseHelper.MEASUREMENT;
+    }
 }
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/Model.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/Model.java
new file mode 100644
index 0000000..034784b
--- /dev/null
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/Model.java
@@ -0,0 +1,19 @@
+package com.mydiabetesprt.diabetes.database;
+
+/**
+ * Created by Filip on 13.08.2014.
+ */
+public abstract class Model {
+
+    public long id;
+
+    public long getId() {
+        return id;
+    }
+
+    public void setId(long id) {
+        this.id = id;
+    }
+
+    public abstract String getTableName();
+}
\ No newline at end of file
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/DatePickerFragment.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/DatePickerFragment.java
index 37fb116..3177eb1 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/DatePickerFragment.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/DatePickerFragment.java
@@ -6,7 +6,7 @@ import android.os.Bundle;
 import android.support.v4.app.DialogFragment;
 import android.widget.DatePicker;
 
-import java.util.Calendar;
+import org.joda.time.DateTime;
 
 /**
  * Created by Filip on 23.10.13.
@@ -17,14 +17,14 @@ public class DatePickerFragment extends DialogFragment implements DatePickerDial
 
     @Override
     public Dialog onCreateDialog(Bundle savedInstanceState) {
-        Calendar calendar = (Calendar)getArguments().getSerializable(DATE);
+        DateTime date = (DateTime)getArguments().getSerializable(DATE);
 
-        if(calendar == null)
-            calendar = Calendar.getInstance();
+        if(date == null)
+            date = new DateTime();
 
-        int year = calendar.get(Calendar.YEAR);
-        int month = calendar.get(Calendar.MONTH);
-        int day = calendar.get(Calendar.DAY_OF_MONTH);
+        int year = date.getYear();
+        int month = date.getMonthOfYear();
+        int day = date.getDayOfMonth();
 
         return new DatePickerDialog(getActivity(), this, year, month, day);
     }
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/LogFragment.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/LogFragment.java
index 7ddf83b..8f0a440 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/LogFragment.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/LogFragment.java
@@ -9,8 +9,6 @@ import android.os.Bundle;
 import android.support.v4.app.DialogFragment;
 import android.support.v4.app.Fragment;
 import android.view.LayoutInflater;
-import android.view.Menu;
-import android.view.MenuInflater;
 import android.view.MenuItem;
 import android.view.View;
 import android.view.ViewGroup;
@@ -22,15 +20,13 @@ import android.widget.ListView;
 import com.mydiabetesprt.diabetes.MainActivity;
 import com.mydiabetesprt.diabetes.NewEventActivity;
 import com.mydiabetesprt.diabetes.R;
-import com.mydiabetesprt.diabetes.adapters.ListViewAdapterLog;
 import com.mydiabetesprt.diabetes.database.DatabaseDataSource;
-import com.mydiabetesprt.diabetes.database.Event;
+import com.mydiabetesprt.diabetes.database.Entry;
+import com.mydiabetesprt.diabetes.database.Measurement;
 import com.mydiabetesprt.diabetes.helpers.PreferenceHelper;
 
-import java.text.SimpleDateFormat;
-import java.util.ArrayList;
-import java.util.Calendar;
-import java.util.List;
+import org.joda.time.DateTime;
+import org.joda.time.format.DateTimeFormatter;
 
 /**
  * A simple {@link android.support.v4.app.Fragment} subclass.
@@ -44,7 +40,7 @@ public class LogFragment extends Fragment {
     DatabaseDataSource dataSource;
     PreferenceHelper preferenceHelper;
 
-    Calendar time;
+    DateTime time;
     boolean[] checkedCategories;
 
     ListView listViewEvents;
@@ -65,7 +61,6 @@ public class LogFragment extends Fragment {
     @Override
     public void onResume() {
         super.onResume();
-        ((MainActivity)getActivity()).getSupportActionBar().setTitle(getString(R.string.log));
         updateListView();
     }
 
@@ -75,19 +70,14 @@ public class LogFragment extends Fragment {
         updateListView();
     }
 
-    @Override
-    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
-        inflater.inflate(R.menu.report, menu);
-    }
-
     public void initialize() {
 
         dataSource = new DatabaseDataSource(getActivity());
         preferenceHelper = new PreferenceHelper(getActivity());
 
-        time = Calendar.getInstance();
+        time = new DateTime();
 
-        Event.Category[] categories = Event.Category.values();
+        Measurement.Category[] categories = Measurement.Category.values();
         checkedCategories = new boolean[categories.length];
         for(int item = 0; item < categories.length; item++) {
             checkedCategories[item] = preferenceHelper.isCategoryActive(categories[item]);
@@ -125,8 +115,9 @@ public class LogFragment extends Fragment {
 
         listViewEvents.setOnItemClickListener(new AdapterView.OnItemClickListener() {
             public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
-                final Event event = (Event) listViewEvents.getAdapter().getItem(position);
-                editEvent(event);
+                // TODO
+                //final Measurement measurement = (Measurement) listViewEvents.getAdapter().getItem(position);
+                //editEntry(measurement);
                 /*
                 AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
                 builder.setTitle(preferenceHelper.getCategoryName(event.getCategory()))
@@ -134,7 +125,7 @@ public class LogFragment extends Fragment {
                             public void onClick(DialogInterface dialog, int which) {
                                 switch (which) {
                                     case ACTION_EDIT:
-                                        editEvent(event);
+                                        editEntry(event);
                                         break;
                                     case ACTION_DELETE:
                                         deleteEvent(event);
@@ -189,18 +180,20 @@ public class LogFragment extends Fragment {
         */
     }
 
-    private void editEvent(Event event) {
+    private void editEntry(Entry entry) {
         Intent intent = new Intent(getActivity(), NewEventActivity.class);
-        intent.putExtra(NewEventActivity.EXTRA_ID, event.getId());
+        intent.putExtra(NewEventActivity.EXTRA_ID, entry.getId());
         startActivity(intent);
     }
 
     private void updateListView() {
 
-        SimpleDateFormat format = preferenceHelper.getDateFormat();
-        String weekDay = getResources().getStringArray(R.array.weekdays)[time.get(Calendar.DAY_OF_WEEK)-1];
-        ((Button)getView().findViewById(R.id.button_date)).setText(weekDay.substring(0,2) + "., " + format.format(time.getTime()));
+        DateTimeFormatter format = preferenceHelper.getDateFormat();
+        String weekDay = getResources().getStringArray(R.array.weekdays)[time.getDayOfWeek()];
+        ((Button)getView().findViewById(R.id.button_date)).setText(weekDay.substring(0,2) + "., " + format.print(time));
 
+        // TODO
+        /*
         dataSource.open();
         List<Event> eventsOfDay = dataSource.getEventsOfDay(time);
         dataSource.close();
@@ -219,21 +212,21 @@ public class LogFragment extends Fragment {
                 getActivity(),
                 Calendar.getInstance(),
                 preferenceHelper.getActiveCategories());
-        */
         listViewEvents.setAdapter(adapter);
 
         listViewEvents.setEmptyView(getView().findViewById(R.id.listViewEventsEmpty));
+        */
     }
 
     // LISTENERS
 
-    public void previousDay () {
-        time.set(Calendar.DAY_OF_MONTH, time.get(Calendar.DAY_OF_MONTH) - 1);
+    public void previousDay() {
+        time.withDayOfMonth(time.getDayOfMonth() - 1);
         updateListView();
     }
 
-    public void nextDay () {
-        time.set(Calendar.DAY_OF_MONTH, time.get(Calendar.DAY_OF_MONTH) + 1);
+    public void nextDay() {
+        time.withDayOfMonth(time.getDayOfMonth() + 1);
         updateListView();
     }
 
@@ -241,9 +234,9 @@ public class LogFragment extends Fragment {
         DialogFragment fragment = new DatePickerFragment() {
             @Override
             public void onDateSet(DatePicker view, int year, int month, int day) {
-                time.set(Calendar.YEAR, year);
-                time.set(Calendar.MONTH, month);
-                time.set(Calendar.DAY_OF_MONTH, day);
+                time.withYear(year);
+                time.withMonthOfYear(month);
+                time.withDayOfMonth(day);
                 updateListView();
             }
         };
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/MainFragment.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/MainFragment.java
index fed9829..4d1945d 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/MainFragment.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/MainFragment.java
@@ -1,31 +1,26 @@
 package com.mydiabetesprt.diabetes.fragments;
 
-import android.content.Intent;
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
 import android.view.LayoutInflater;
-import android.view.Menu;
-import android.view.MenuInflater;
-import android.view.MenuItem;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.TextView;
 
-import com.mydiabetesprt.diabetes.MainActivity;
-import com.mydiabetesprt.diabetes.NewEventActivity;
 import com.mydiabetesprt.diabetes.R;
 import com.mydiabetesprt.diabetes.database.DatabaseDataSource;
-import com.mydiabetesprt.diabetes.database.Event;
+import com.mydiabetesprt.diabetes.database.DatabaseHelper;
+import com.mydiabetesprt.diabetes.database.Measurement;
 import com.mydiabetesprt.diabetes.helpers.Helper;
 import com.mydiabetesprt.diabetes.helpers.PreferenceHelper;
 
-import java.util.Calendar;
+import org.joda.time.DateTime;
 
 public class MainFragment extends Fragment {
 
     DatabaseDataSource dataSource;
     PreferenceHelper preferenceHelper;
-    Calendar time;
+    DateTime time;
 
     TextView textViewLatestValue;
     TextView textViewLatestUnit;
@@ -55,15 +50,9 @@ public class MainFragment extends Fragment {
     @Override
     public void onResume() {
         super.onResume();
-        ((MainActivity)getActivity()).getSupportActionBar().setTitle(getString(R.string.app_name));
         updateContent();
     }
 
-    @Override
-    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
-        inflater.inflate(R.menu.add, menu);
-    }
-
     private void getComponents() {
         textViewLatestValue = (TextView) getView().findViewById(R.id.textview_latest_value);
         textViewLatestUnit = (TextView) getView().findViewById(R.id.textview_latest_unit);
@@ -86,13 +75,21 @@ public class MainFragment extends Fragment {
 
         preferenceHelper = new PreferenceHelper(getActivity());
 
-        time = Calendar.getInstance();
+        time = new DateTime();
+
+        int countBloodSugarMeasurements = dataSource.count(
+                DatabaseHelper.MEASUREMENT,
+                null,
+                DatabaseHelper.CATEGORY,
+                Measurement.Category.BloodSugar.toString());
 
-        /*
-        if(dataSource.countEvents(Event.Category.BloodSugar) > 0) {
+        if(countBloodSugarMeasurements > 0) {
             textViewLatestValue.setTextSize(60);
-            updateLatest();
-            updateDashboard();
+            dataSource.open();
+            dataSource.getJoin(null, null, null, null, null, null, null, null, null);
+            dataSource.close();
+            //updateLatest();
+            //updateDashboard();
         }
         else {
             textViewLatestValue.setTextSize(40);
@@ -100,19 +97,19 @@ public class MainFragment extends Fragment {
             textViewAverageWeek.setText(Helper.PLACEHOLDER);
             textViewAverageDay.setText(Helper.PLACEHOLDER);
         }
-        */
 
         dataSource.close();
     }
 
+    /*
     private void updateLatest() {
         Event latestEvent = dataSource.getLatestEvent(Event.Category.BloodSugar);
 
         // Value
         float value = preferenceHelper.
-                formatDefaultToCustomUnit(Event.Category.BloodSugar, latestEvent.getValue());
+                formatDefaultToCustomUnit(Measurement.Category.BloodSugar, latestEvent.getValue());
         textViewLatestValue.setText(preferenceHelper.
-                getDecimalFormat(Event.Category.BloodSugar).format(value));
+                getDecimalFormat(Measurement.Category.BloodSugar).format(value));
 
         // Highlighting
         if(preferenceHelper.limitsAreHighlighted()) {
@@ -161,25 +158,25 @@ public class MainFragment extends Fragment {
 
     private void updateAverage() {
         float avgMonth = preferenceHelper.
-                formatDefaultToCustomUnit(Event.Category.BloodSugar,
+                formatDefaultToCustomUnit(Measurement.Category.BloodSugar,
                         dataSource.getBloodSugarAverage(30));
         float avgWeek = preferenceHelper.
-                formatDefaultToCustomUnit(Event.Category.BloodSugar,
+                formatDefaultToCustomUnit(Measurement.Category.BloodSugar,
                         dataSource.getBloodSugarAverage(7));
         float avgDay = preferenceHelper.
-                formatDefaultToCustomUnit(Event.Category.BloodSugar,
+                formatDefaultToCustomUnit(Measurement.Category.BloodSugar,
                         dataSource.getBloodSugarAverage(1));
 
         String avgMonthString = preferenceHelper.
-                getDecimalFormat(Event.Category.BloodSugar).format(avgMonth);
+                getDecimalFormat(Measurement.Category.BloodSugar).format(avgMonth);
         if(avgMonth <= 0)
             avgMonthString = Helper.PLACEHOLDER;
         String avgWeekString = preferenceHelper.
-                getDecimalFormat(Event.Category.BloodSugar).format(avgWeek);
+                getDecimalFormat(Measurement.Category.BloodSugar).format(avgWeek);
         if(avgWeek <= 0)
             avgWeekString = Helper.PLACEHOLDER;
         String avgDayString = preferenceHelper.
-                getDecimalFormat(Event.Category.BloodSugar).format(avgDay);
+                getDecimalFormat(Measurement.Category.BloodSugar).format(avgDay);
         if(avgDay <= 0)
             avgDayString = Helper.PLACEHOLDER;
 
@@ -187,15 +184,5 @@ public class MainFragment extends Fragment {
         textViewAverageWeek.setText(avgWeekString);
         textViewAverageDay.setText(avgDayString);
     }
-
-    @Override
-    public boolean onOptionsItemSelected(MenuItem item) {
-        switch (item.getItemId()) {
-            case R.id.action_newevent:
-                getActivity().startActivityForResult(new Intent(getActivity(), NewEventActivity.class), MainActivity.REQUEST_EVENT_CREATED);
-                return true;
-            default:
-                return super.onOptionsItemSelected(item);
-        }
-    }
+    */
 }
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/TimePickerFragment.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/TimePickerFragment.java
index 724ef49..b556350 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/TimePickerFragment.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/TimePickerFragment.java
@@ -7,7 +7,7 @@ import android.support.v4.app.DialogFragment;
 import android.text.format.DateFormat;
 import android.widget.TimePicker;
 
-import java.util.Calendar;
+import org.joda.time.DateTime;
 
 /**
  * Created by Filip on 23.10.13.
@@ -18,16 +18,13 @@ public class TimePickerFragment extends DialogFragment implements TimePickerDial
 
     @Override
     public Dialog onCreateDialog(Bundle savedInstanceState) {
-        Calendar calendar = (Calendar)getArguments().getSerializable(TIME);
+        DateTime time = (DateTime)getArguments().getSerializable(TIME);
 
-        if(calendar == null)
-            calendar = Calendar.getInstance();
+        if(time == null)
+            time = new DateTime();
 
-        if(calendar == null)
-            calendar = Calendar.getInstance();
-
-        int hourOfDay = calendar.get(Calendar.HOUR_OF_DAY);
-        int minute = calendar.get(Calendar.MINUTE);
+        int hourOfDay = time.getHourOfDay();
+        int minute = time.getMinuteOfHour();
 
         return new TimePickerDialog(getActivity(), this, hourOfDay, minute,
                 DateFormat.is24HourFormat(getActivity()));
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/TimelineFragment.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/TimelineFragment.java
index 2b17db8..7beb33c 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/TimelineFragment.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/TimelineFragment.java
@@ -8,12 +8,9 @@ import android.os.Bundle;
 import android.support.v4.app.DialogFragment;
 import android.support.v4.app.Fragment;
 import android.view.LayoutInflater;
-import android.view.Menu;
-import android.view.MenuInflater;
 import android.view.MenuItem;
 import android.view.View;
 import android.view.ViewGroup;
-import android.widget.Button;
 import android.widget.DatePicker;
 import android.widget.ImageView;
 import android.widget.LinearLayout;
@@ -22,19 +19,16 @@ import com.mydiabetesprt.diabetes.MainActivity;
 import com.mydiabetesprt.diabetes.NewEventActivity;
 import com.mydiabetesprt.diabetes.R;
 import com.mydiabetesprt.diabetes.database.DatabaseDataSource;
-import com.mydiabetesprt.diabetes.database.Event;
+import com.mydiabetesprt.diabetes.database.Measurement;
 import com.mydiabetesprt.diabetes.helpers.ChartHelper;
 import com.mydiabetesprt.diabetes.helpers.Helper;
 import com.mydiabetesprt.diabetes.helpers.PreferenceHelper;
-import com.mydiabetesprt.diabetes.helpers.ViewHelper;
 
-import org.achartengine.model.SeriesSelection;
 import org.achartengine.model.XYSeries;
 import org.achartengine.renderer.XYSeriesRenderer;
+import org.joda.time.DateTime;
 
-import java.text.SimpleDateFormat;
 import java.util.ArrayList;
-import java.util.Calendar;
 import java.util.List;
 
 /**
@@ -47,11 +41,11 @@ public class TimelineFragment extends Fragment {
     private final String HYPOGLYCEMIA = "Hypoglycemia";
     private final String BACKGROUND = "Background";
 
-    DatabaseDataSource dataSource;
-    PreferenceHelper preferenceHelper;
-    ChartHelper chartHelperChart;
-    ChartHelper chartHelperTable;
-    Calendar time;
+    private DatabaseDataSource dataSource;
+    private PreferenceHelper preferenceHelper;
+    private ChartHelper chartHelperChart;
+    private ChartHelper chartHelperTable;
+    private DateTime time;
 
     boolean[] activeCategories;
     int activeCategoryCount;
@@ -75,7 +69,6 @@ public class TimelineFragment extends Fragment {
     @Override
     public void onResume() {
         super.onResume();
-        ((MainActivity)getActivity()).getSupportActionBar().setTitle(getString(R.string.timeline));
         updateContent();
     }
 
@@ -85,24 +78,19 @@ public class TimelineFragment extends Fragment {
         updateContent();
     }
 
-    @Override
-    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
-        inflater.inflate(R.menu.add, menu);
-    }
-
     public void initialize() {
         dataSource = new DatabaseDataSource(getActivity());
         preferenceHelper = new PreferenceHelper(getActivity());
-        time = Calendar.getInstance();
+        time = new DateTime();
 
         // Check all active Categories but Blood Sugar (always active in Timeline)
-        Event.Category[] categories = Event.Category.values();
+        Measurement.Category[] categories = Measurement.Category.values();
         activeCategories = new boolean[categories.length];
         for(int item = 0; item < categories.length; item++)
             activeCategories[item] = preferenceHelper.isCategoryActive(categories[item]);
 
-        chartHelperChart = new ChartHelper(getActivity(), ChartHelper.ChartType.ScatterChart);
-        chartHelperTable = new ChartHelper(getActivity(), ChartHelper.ChartType.LineChart);
+        //chartHelperChart = new ChartHelper(getActivity(), ChartHelper.ChartType.ScatterChart);
+        //chartHelperTable = new ChartHelper(getActivity(), ChartHelper.ChartType.LineChart);
 
         getComponents();
         initializeGUI();
@@ -145,7 +133,7 @@ public class TimelineFragment extends Fragment {
     }
 
     private void updateContent() {
-
+        /*
         SimpleDateFormat format = preferenceHelper.getDateFormat();
         String weekDay = getResources().getStringArray(R.array.weekdays)[time.get(Calendar.DAY_OF_WEEK)-1];
         ((Button)getView().findViewById(R.id.button_date)).setText(weekDay.substring(0,2) + "., " + format.format(time.getTime()));
@@ -159,6 +147,7 @@ public class TimelineFragment extends Fragment {
         }
         else
             getView().findViewById(R.id.table).setVisibility(View.GONE);
+            */
     }
 
     //region Chart
@@ -203,7 +192,7 @@ public class TimelineFragment extends Fragment {
         chartHelperChart.renderer.setShowGrid(true);
         chartHelperChart.renderer.setShowGridY(true);
         chartHelperChart.renderer.setYAxisMax(
-                preferenceHelper.formatDefaultToCustomUnit(Event.Category.BloodSugar, 280));
+                preferenceHelper.formatDefaultToCustomUnit(Measurement.Category.BloodSugar, 280));
     }
 
     private void setChartData() {
@@ -218,11 +207,15 @@ public class TimelineFragment extends Fragment {
             chartHelperChart.seriesDataset.addSeries(seriesBloodSugarHypo);
         }
 
+
+        /*
         dataSource.open();
-        List<Event> bloodSugar = dataSource.getEventsOfDay(time, Event.Category.BloodSugar);
+        HashMap<Entry, List<Measurement>> data = new HashMap<Entry, List<Measurement>>();
+
+        List<Measurement> measurements = dataSource.getEventsOfDay(time, Measurement.Category.BloodSugar);
         dataSource.close();
 
-        for(Event event : bloodSugar) {
+        for(Measurement measurement : measurements) {
             float x_value = Helper.formatCalendarToHourMinutes(event.getDate());
 
             float y_value = preferenceHelper.
@@ -247,6 +240,7 @@ public class TimelineFragment extends Fragment {
                 seriesBloodSugar.add(x_value, y_value);
             }
         }
+        */
     }
 
     private void initializeChart() {
@@ -295,8 +289,8 @@ public class TimelineFragment extends Fragment {
         int activeCategoryPosition = 0;
         for(int item = 0; item < activeCategories.length; item++) {
 
-            if(activeCategories[item] && item != Event.Category.BloodSugar.ordinal()) {
-                Event.Category category = Event.Category.values()[item];
+            if(activeCategories[item] && item != Measurement.Category.BloodSugar.ordinal()) {
+                Measurement.Category category = Measurement.Category.values()[item];
 
                 // Category image
                 ImageView image = new ImageView(getActivity());
@@ -337,18 +331,19 @@ public class TimelineFragment extends Fragment {
             series.add(24 + ChartHelper.CHART_OFFSET_RIGHT, row);
         }
 
-        List<Event.Category> checkedCategoriesList = new ArrayList<Event.Category>();
+        List<Measurement.Category> checkedCategoriesList = new ArrayList<Measurement.Category>();
         for(int position = 0; position < activeCategories.length; position++) {
-            if(activeCategories[position] && position != Event.Category.BloodSugar.ordinal())
-                checkedCategoriesList.add(Event.Category.values()[position]);
+            if(activeCategories[position] && position != Measurement.Category.BloodSugar.ordinal())
+                checkedCategoriesList.add(Measurement.Category.values()[position]);
         }
+        /*
         dataSource.open();
         float[][] values = dataSource.getAverageDataTable(time,
-                checkedCategoriesList.toArray(new Event.Category[checkedCategoriesList.size()]), 12);
+                checkedCategoriesList.toArray(new Measurement.Category[checkedCategoriesList.size()]), 12);
         dataSource.close();
 
         for(int categoryPosition = 0; categoryPosition < checkedCategoriesList.size(); categoryPosition++) {
-            Event.Category category = checkedCategoriesList.get(categoryPosition);
+            Measurement.Category category = checkedCategoriesList.get(categoryPosition);
             XYSeries series = new XYSeries(category.name());
             chartHelperTable.seriesDataset.addSeries(series);
             for(int hour = 0; hour < 12; hour++) {
@@ -356,7 +351,7 @@ public class TimelineFragment extends Fragment {
                 if(value > 0) {
                     float x_value = (hour * 2) + 1;
                     float y_value = activeCategoryCount - 1 - categoryPosition + 0.3f;
-                    String valueString = preferenceHelper.getDecimalFormat(Event.Category.BloodSugar).
+                    String valueString = preferenceHelper.getDecimalFormat(Measurement.Category.BloodSugar).
                             format(preferenceHelper.formatDefaultToCustomUnit(category, value));
 
                     series.add(x_value, y_value);
@@ -364,6 +359,7 @@ public class TimelineFragment extends Fragment {
                 }
             }
         }
+        */
     }
 
     private void initializeTable() {
@@ -378,12 +374,12 @@ public class TimelineFragment extends Fragment {
     //region Listeners
 
     public void previousDay() {
-        time.set(Calendar.DAY_OF_MONTH, time.get(Calendar.DAY_OF_MONTH) - 1);
+        time.withDayOfMonth(time.getDayOfMonth() - 1);
         updateContent();
     }
 
     public void nextDay() {
-        time.set(Calendar.DAY_OF_MONTH, time.get(Calendar.DAY_OF_MONTH) + 1);
+        time.withDayOfMonth(time.getDayOfMonth() + 1);
         updateContent();
     }
 
@@ -391,9 +387,9 @@ public class TimelineFragment extends Fragment {
         DialogFragment fragment = new DatePickerFragment() {
             @Override
             public void onDateSet(DatePicker view, int year, int month, int day) {
-                time.set(Calendar.YEAR, year);
-                time.set(Calendar.MONTH, month);
-                time.set(Calendar.DAY_OF_MONTH, day);
+                time.withYear(year);
+                time.withMonthOfYear(month);
+                time.withDayOfMonth(day);
                 updateContent();
             }
         };
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/helpers/ChartHelper.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/helpers/ChartHelper.java
index 79b2883..1dcb148 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/helpers/ChartHelper.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/helpers/ChartHelper.java
@@ -6,7 +6,7 @@ import android.graphics.Color;
 import android.graphics.Paint;
 
 import com.mydiabetesprt.diabetes.R;
-import com.mydiabetesprt.diabetes.database.Event;
+import com.mydiabetesprt.diabetes.database.Measurement;
 
 import org.achartengine.ChartFactory;
 import org.achartengine.GraphicalView;
@@ -91,7 +91,7 @@ public class ChartHelper {
 
         renderer.setYLabels(8);
         float minimum = new PreferenceHelper(activity).
-                formatDefaultToCustomUnit(Event.Category.BloodSugar,
+                formatDefaultToCustomUnit(Measurement.Category.BloodSugar,
                         activity.getResources().getIntArray(R.array.bloodsugar_extrema)[0]);
         renderer.setYAxisMin(minimum);
     }
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/helpers/FileHelper.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/helpers/FileHelper.java
index d6a361c..3128f0a 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/helpers/FileHelper.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/helpers/FileHelper.java
@@ -4,10 +4,11 @@ import android.app.ProgressDialog;
 import android.content.Context;
 import android.os.AsyncTask;
 import android.os.Environment;
+import android.util.Log;
 
 import com.mydiabetesprt.diabetes.R;
 import com.mydiabetesprt.diabetes.database.DatabaseDataSource;
-import com.mydiabetesprt.diabetes.database.Event;
+import com.mydiabetesprt.diabetes.database.Measurement;
 import com.itextpdf.text.BaseColor;
 import com.itextpdf.text.Chunk;
 import com.itextpdf.text.Document;
@@ -24,18 +25,19 @@ import com.itextpdf.text.pdf.PdfPTable;
 import com.itextpdf.text.pdf.PdfPageEventHelper;
 import com.itextpdf.text.pdf.PdfWriter;
 
+import org.joda.time.DateTime;
+import org.joda.time.DateTimeConstants;
+import org.joda.time.Days;
+import org.joda.time.format.DateTimeFormat;
+
 import java.io.File;
 import java.io.FileOutputStream;
 import java.io.FileReader;
-import java.io.FileWriter;
 import java.io.IOException;
 import java.text.SimpleDateFormat;
-import java.util.Calendar;
-import java.util.List;
 import java.util.concurrent.ExecutionException;
 
 import au.com.bytecode.opencsv.CSVReader;
-import au.com.bytecode.opencsv.CSVWriter;
 
 /**
  * Created by Filip on 05.06.2014.
@@ -81,7 +83,7 @@ public class FileHelper {
         csvImportTask.execute(fileName);
     }
 
-    public File exportPDF(Calendar dateStart, Calendar dateEnd) {
+    public File exportPDF(DateTime dateStart, DateTime dateEnd) {
         PDFExportTask pdfExportTask = new PDFExportTask();
         pdfExportTask.execute(dateStart, dateEnd);
 
@@ -103,12 +105,13 @@ public class FileHelper {
 
         @Override
         protected File doInBackground(Void... params) {
+            File directory = new File(PATH_STORAGE);
 
+            /*
             dataSource.open();
             List<Event> events = dataSource.getEvents();
             dataSource.close();
 
-            File directory = new File(PATH_STORAGE);
 
             SimpleDateFormat format = new SimpleDateFormat("yyyyMMddHHmmss");
             File file = new File(directory + "/backup" +
@@ -132,8 +135,8 @@ public class FileHelper {
             catch (IOException ex) {
                 //Log.e("DiaguardError", ex.getMessage());
             }
-
-            return file;
+*/
+            return directory;
         }
 
         @Override
@@ -156,6 +159,7 @@ public class FileHelper {
                 String filePath = PATH_STORAGE + "/" + params[0];
                 CSVReader reader = new CSVReader(new FileReader(filePath), DELIMITER);
 
+                /*
                 Event event = new Event();
                 String[] nextLine;
                 dataSource.open();
@@ -168,6 +172,7 @@ public class FileHelper {
                     dataSource.insertEvent(event);
                 }
                 dataSource.close();
+                */
                 reader.close();
             } catch (IOException ex) {
                 //Log.e("DiaguardError", ex.getMessage());
@@ -189,26 +194,33 @@ public class FileHelper {
         }
     }
 
-    private class PDFExportTask extends AsyncTask<Calendar, String, File> {
+    private class PDFExportTask extends AsyncTask<DateTime, String, File> {
         ProgressDialog progressDialog;
         private final int TEXT_SIZE = 9;
 
-        Event.Category[] selectedCategories =
-                new Event.Category[] {
-                        Event.Category.BloodSugar,
-                        Event.Category.Bolus,
-                        Event.Category.Meal,
-                        Event.Category.Activity};
+        Measurement.Category[] selectedCategories =
+                new Measurement.Category[] {
+                        Measurement.Category.BloodSugar,
+                        Measurement.Category.Bolus,
+                        Measurement.Category.Meal,
+                        Measurement.Category.Activity};
 
-        Calendar dateStart;
-        Calendar dateEnd;
+        DateTime dateStart;
+        DateTime dateEnd;
 
         @Override
-        protected File doInBackground(Calendar... params) {
+        protected File doInBackground(DateTime... params) {
 
-            File directory = new File(PATH_STORAGE);
-            File file = new File(directory + "/export" + new SimpleDateFormat("yyyyMMddHHmmss").
-                    format(Calendar.getInstance().getTime()) + ".pdf");
+            if(!Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED))
+                return null;
+
+            File directory = new File(FileHelper.PATH_STORAGE);
+
+            if(!directory.exists())
+                directory.mkdirs();
+
+            File file = new File(directory + "/export" + DateTimeFormat.forPattern("yyyyMMddHHmmss").
+                    print(new DateTime()) + ".pdf");
 
             dateStart = params[0];
             dateEnd = params[1];
@@ -231,16 +243,14 @@ public class FileHelper {
                 document.open();
                 iTextGMetaData(document);
 
-                final Calendar dateIteration = Calendar.getInstance();
-                dateIteration.setTime(dateStart.getTime());
+                DateTime dateIteration = dateStart;
 
                 // One day after last chosen day
-                Calendar dateAfter = Calendar.getInstance();
-                dateAfter.setTime(dateEnd.getTime());
-                dateAfter.set(Calendar.DAY_OF_MONTH, dateAfter.get(Calendar.DAY_OF_MONTH) + 1);
+                DateTime dateAfter = dateEnd;
+                dateAfter.withDayOfMonth(dateAfter.dayOfMonth().get() + 1);
 
                 // Total number of days to export
-                int totalDays = Helper.getDifferenceInDays(dateStart, dateEnd) + 1;
+                int totalDays = Days.daysBetween(dateStart, dateEnd).getDays();
 
                 String[] weekDays = context.getResources().getStringArray(R.array.weekdays);
 
@@ -249,10 +259,10 @@ public class FileHelper {
 
                 // Day by day
                 int currentDay = 1;
-                while(dateIteration.before(dateAfter)) {
+                while(dateIteration.isBefore(dateAfter)) {
 
                     // title bar for new week
-                    if(currentDay > 1 && dateIteration.get(Calendar.DAY_OF_WEEK) == 2) {
+                    if(currentDay > 1 && dateIteration.getDayOfWeek() == 2) {
                         document.newPage();
                         document.add(getWeekBar(dateIteration));
                         document.add(Chunk.NEWLINE);
@@ -265,8 +275,8 @@ public class FileHelper {
                     PdfPCell cell;
 
                     // Header
-                    cell = new PdfPCell(new Phrase(weekDays[dateIteration.get(Calendar.DAY_OF_WEEK)-1].substring(0, 2) + " " +
-                            new SimpleDateFormat("dd.MM.").format(dateIteration.getTime()),
+                    cell = new PdfPCell(new Phrase(weekDays[dateIteration.getDayOfWeek()-1].substring(0, 2) + " " +
+                            new SimpleDateFormat("dd.MM.").format(dateIteration),
                             new Font(fontBold)));
                     cell.setBorder(0);
                     cell.setBorder(Rectangle.BOTTOM);
@@ -281,12 +291,14 @@ public class FileHelper {
 
                     // Content
                     dataSource.open();
-                    float[][] values = dataSource.getAverageDataTable(dateIteration, selectedCategories, 12);
+                    // TODO
+                    float[][] values; // = dataSource.getAverageDataTable(dateIteration, selectedCategories, 12);
+                    values = new float[0][0];
                     dataSource.close();
 
                     // Insert values into table
                     for(int categoryPosition = 0; categoryPosition < selectedCategories.length; categoryPosition++) {
-                        Event.Category category = selectedCategories[categoryPosition];
+                        Measurement.Category category = selectedCategories[categoryPosition];
 
                         cell = new PdfPCell(new Paragraph(preferenceHelper.getCategoryName(category), fontGray));
                         cell.setBorder(0);
@@ -303,15 +315,14 @@ public class FileHelper {
                                 String valueString = preferenceHelper.
                                         getDecimalFormat(category).format(value);
 
-                                if(category == Event.Category.BloodSugar) {
+                                paragraph = new Paragraph(valueString, fontBasis);
+                                if(category == Measurement.Category.BloodSugar) {
                                     if (values[categoryPosition][hour] <
                                             preferenceHelper.getLimitHypoglycemia())
                                         paragraph = new Paragraph(valueString, fontBlue);
                                     else if (values[categoryPosition][hour] >
                                             preferenceHelper.getLimitHyperglycemia())
                                         paragraph = new Paragraph(valueString, fontRed);
-                                    else
-                                        paragraph = new Paragraph(valueString, fontBasis);
                                 }
                             }
 
@@ -338,14 +349,14 @@ public class FileHelper {
                     publishProgress(context.getString(R.string.day) + " " + currentDay + "/" + totalDays);
 
                     // Next day
-                    dateIteration.set(Calendar.DAY_OF_MONTH, dateIteration.get(Calendar.DAY_OF_MONTH) + 1);
+                    dateIteration.withDayOfMonth(dateIteration.dayOfMonth().get() + 1);
                     currentDay++;
                 }
 
                 document.close();
             }
             catch (Exception ex) {
-                //Log.e("DiaguardError", ex.getMessage());
+                Log.e("DiaguardError", ex.getMessage());
             }
 
             return file;
@@ -372,31 +383,31 @@ public class FileHelper {
         }
 
         private void iTextGMetaData(Document document) {
-            String subject = context.getResources().getString(R.string.app_name) + " " +
-                    context.getResources().getString(R.string.export) + ": " +
-                    preferenceHelper.getDateFormat().format(dateStart.getTime()) + " - " +
-                    preferenceHelper.getDateFormat().format(dateEnd.getTime());
+            String subject = context.getString(R.string.app_name) + " " +
+                    context.getString(R.string.export) + ": " +
+                    preferenceHelper.getDateFormat().print(dateStart) + " - " +
+                    preferenceHelper.getDateFormat().print(dateEnd);
             document.addTitle(subject);
-            document.addAuthor(context.getResources().getString(R.string.app_name));
-            document.addCreator(context.getResources().getString(R.string.app_name));
+            document.addAuthor(context.getString(R.string.app_name));
+            document.addCreator(context.getString(R.string.app_name));
         }
 
-        private Paragraph getWeekBar(Calendar weekStart) {
+        private Paragraph getWeekBar(DateTime weekStart) {
 
             Paragraph paragraph = new Paragraph();
 
             // Week
-            Chunk chunk = new Chunk(context.getString(R.string.calendarweek) + " " + weekStart.get(Calendar.WEEK_OF_YEAR));
+            Chunk chunk = new Chunk(context.getString(R.string.calendarweek) + " " + weekStart.getWeekyear());
             chunk.setFont(FontFactory.getFont(FontFactory.HELVETICA, 12, Font.BOLD));
             paragraph.add(chunk);
 
-            Calendar weekEnd = Calendar.getInstance();
-            weekEnd.setTime(weekStart.getTime());
-            weekEnd.set(Calendar.DAY_OF_WEEK, Calendar.SUNDAY);
+            DateTime weekEnd = new DateTime();
+            weekEnd = weekStart;
+            weekEnd.withDayOfWeek(DateTimeConstants.SUNDAY);
 
             // Dates
-            chunk = new Chunk("\n" + preferenceHelper.getDateFormat().format(weekStart.getTime()) + " - " +
-                    preferenceHelper.getDateFormat().format(weekEnd.getTime()));
+            chunk = new Chunk("\n" + preferenceHelper.getDateFormat().print(weekStart) + " - " +
+                    preferenceHelper.getDateFormat().print(weekEnd));
             chunk.setFont(FontFactory.getFont(FontFactory.HELVETICA, 9));
             paragraph.add(chunk);
 
@@ -422,9 +433,9 @@ public class FileHelper {
         public void onEndPage(PdfWriter writer, Document document) {
             Rectangle rect = writer.getBoxSize("Header");
 
-            Calendar today = Calendar.getInstance();
+            DateTime today = new DateTime();
             String stamp = context.getString(R.string.export_stamp) + " " +
-                    preferenceHelper.getDateFormat().format(today.getTime());
+                    preferenceHelper.getDateFormat().print(today);
             Chunk chunk = new Chunk(stamp,
                     FontFactory.getFont(FontFactory.HELVETICA, 9, BaseColor.GRAY));
             ColumnText.showTextAligned(writer.getDirectContent(),
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/helpers/Helper.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/helpers/Helper.java
index 9cf7efa..9cd3990 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/helpers/Helper.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/helpers/Helper.java
@@ -2,18 +2,24 @@ package com.mydiabetesprt.diabetes.helpers;
 
 import android.content.Context;
 
+import com.mydiabetesprt.diabetes.DiaguardApplication;
 import com.mydiabetesprt.diabetes.R;
 
+import org.joda.time.DateTime;
+import org.joda.time.format.DateTimeFormat;
+import org.joda.time.format.DateTimeFormatter;
+
 import java.text.DecimalFormat;
 import java.text.DecimalFormatSymbols;
+import java.text.Format;
 import java.text.SimpleDateFormat;
-import java.util.Calendar;
 
 /**
  * Created by Filip on 10.12.13.
  */
 public class Helper {
-
+    public static final String DB_FORMAT_DATE_DB = "yyyy-MM-dd HH:mm:ss";
+    public static final String DB_FORMAT_TIME = "HH:mm";
     public static final String PLACEHOLDER = "-";
 
     public static DecimalFormat getDecimalFormat() {
@@ -28,33 +34,35 @@ public class Helper {
         return new DecimalFormat("#");
     }
 
-    public static SimpleDateFormat getDateDatabaseFormat() {
-        return new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+    private static String getTimePattern() {
+        return DB_FORMAT_TIME;
     }
 
-    public static float formatCalendarToHourMinutes(Calendar time) {
-        int hour = time.get(Calendar.HOUR_OF_DAY);
-        int minute = time.get(Calendar.MINUTE);
-        return hour + ((float)minute / 60.0f);
+    private static String getDatePattern() {
+        Format dateFormat = android.text.format.DateFormat.getDateFormat(DiaguardApplication.getContext().getApplicationContext());
+        return ((SimpleDateFormat)dateFormat).toLocalizedPattern();
     }
 
-    public static float getDPI(Context context, float pixels) {
-        return pixels * (context.getResources().getDisplayMetrics().densityDpi / 160);
+    public static DateTimeFormatter getDateDatabaseFormat() {
+        return DateTimeFormat.forPattern(DB_FORMAT_DATE_DB);
     }
 
-    public static int getDifferenceInDays(Calendar dateStart, Calendar dateEnd) {
-        long diffMilliseconds = dateEnd.getTimeInMillis() - dateStart.getTimeInMillis();
-        return (int)(diffMilliseconds / (24 * 60 * 60 * 1000));
+    public static DateTimeFormatter getDateFormat() {
+        return DateTimeFormat.forPattern(getDatePattern());
     }
 
-    public static int getDifferenceInHours(Calendar dateStart, Calendar dateEnd) {
-        long diffMilliseconds = dateEnd.getTimeInMillis() - dateStart.getTimeInMillis();
-        return (int)(diffMilliseconds / (60 * 60 * 1000));
+    public static DateTimeFormatter getTimeFormat() {
+        return DateTimeFormat.forPattern(getTimePattern());
     }
 
-    public static int getDifferenceInMinutes(Calendar dateStart, Calendar dateEnd) {
-        long diffMilliseconds = dateEnd.getTimeInMillis() - dateStart.getTimeInMillis();
-        return (int)(diffMilliseconds / (60 * 1000));
+    public static float formatCalendarToHourMinutes(DateTime time) {
+        int hour = time.getHourOfDay();
+        int minute = time.getMinuteOfHour();
+        return hour + ((float)minute / 60.0f);
+    }
+
+    public static float getDPI(Context context, float pixels) {
+        return pixels * (context.getResources().getDisplayMetrics().densityDpi / 160);
     }
 
     public static String getTextAgo(Context context, int differenceInMinutes) {
@@ -78,4 +86,14 @@ public class Helper {
 
         return  textAgo.replace("[value]", Integer.toString(differenceInMinutes));
     }
+
+    public static String toStringDelimited(String[] array, char delimiter) {
+        StringBuilder stringBuilder = new StringBuilder();
+        for (String string : array) {
+            stringBuilder.append(string);
+            stringBuilder.append(delimiter);
+        }
+        stringBuilder.deleteCharAt(stringBuilder.length()-1);
+        return stringBuilder.toString();
+    }
 }
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/helpers/PreferenceHelper.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/helpers/PreferenceHelper.java
index da33a3d..819ea60 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/helpers/PreferenceHelper.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/helpers/PreferenceHelper.java
@@ -5,18 +5,19 @@ import android.content.SharedPreferences;
 import android.content.res.Resources;
 import android.preference.PreferenceManager;
 
-import com.mydiabetesprt.diabetes.MainActivity;
 import com.mydiabetesprt.diabetes.R;
-import com.mydiabetesprt.diabetes.database.Event;
+import com.mydiabetesprt.diabetes.database.Measurement;
 import com.mydiabetesprt.diabetes.preferences.CategoryPreference;
 import com.mydiabetesprt.diabetes.preferences.FactorPreference;
 
+import org.joda.time.DateTime;
+import org.joda.time.format.DateTimeFormat;
+import org.joda.time.format.DateTimeFormatter;
+
 import java.text.DecimalFormat;
 import java.text.DecimalFormatSymbols;
-import java.text.SimpleDateFormat;
 import java.util.ArrayList;
 import java.util.Arrays;
-import java.util.Calendar;
 import java.util.List;
 
 /**
@@ -39,17 +40,7 @@ public class PreferenceHelper {
 
     // GENERAL
 
-    public MainActivity.FragmentType getStartFragment() {
-        int startFragment = Integer.parseInt(sharedPreferences.getString("start_fragment", "0"));
-        switch(startFragment) {
-            case 0: return MainActivity.FragmentType.Home;
-            case 1: return MainActivity.FragmentType.Timeline;
-            case 2: return MainActivity.FragmentType.Log;
-            default: return MainActivity.FragmentType.Home;
-        }
-    }
-
-    public boolean validateEventValue(Event.Category category, float value) {
+    public boolean validateEventValue(Measurement.Category category, float value) {
         int resourceIdExtrema = context.getResources().getIdentifier(category.name().toLowerCase() +
                 "_extrema", "array", context.getPackageName());
 
@@ -66,11 +57,11 @@ public class PreferenceHelper {
 
     // DATES
 
-    public SimpleDateFormat getDateAndTimeFormat() {
-        return new SimpleDateFormat(getDateFormat().toPattern() + " " + getTimeFormat().toPattern());
+    public DateTimeFormatter getDateAndTimeFormat() {
+        return DateTimeFormat.forPattern(getDateFormat().toString() + " " + getTimeFormat().toString());
     }
 
-    public SimpleDateFormat getDateFormat() {
+    public DateTimeFormatter getDateFormat() {
         String dateString = sharedPreferences.getString("dateformat",
                 context.getResources().getString(R.string.dateformat_default));
 
@@ -78,11 +69,11 @@ public class PreferenceHelper {
         dateString = dateString.replace("mm", "MM");
         dateString = dateString.replace("DD", "dd");
 
-        return new SimpleDateFormat(dateString);
+        return DateTimeFormat.forPattern(dateString);
     }
 
-    public SimpleDateFormat getTimeFormat() {
-        return new SimpleDateFormat("HH:mm");
+    public DateTimeFormatter getTimeFormat() {
+        return DateTimeFormat.forPattern("HH:mm");
     }
 
     // BLOOD SUGAR
@@ -111,7 +102,7 @@ public class PreferenceHelper {
     }
 
     // TODO: Localization
-    public DecimalFormat getDecimalFormat(Event.Category category) {
+    public DecimalFormat getDecimalFormat(Measurement.Category category) {
         DecimalFormatSymbols symbols = new DecimalFormatSymbols();
         symbols.setDecimalSeparator('.');
 
@@ -134,28 +125,28 @@ public class PreferenceHelper {
 
     // CATEGORIES
 
-    public String getCategoryName(Event.Category category) {
-        int position = Event.Category.valueOf(category.name()).ordinal();
+    public String getCategoryName(Measurement.Category category) {
+        int position = Measurement.Category.valueOf(category.name()).ordinal();
         String[] categories = context.getResources().getStringArray(R.array.categories);
         return categories[position];
     }
 
     // UNITS
 
-    public String[] getUnitsNames(Event.Category category) {
+    public String[] getUnitsNames(Measurement.Category category) {
         String categoryName = category.name().toLowerCase();
         int resourceIdUnits = context.getResources().getIdentifier(categoryName +
                 "_units", "array", context.getPackageName());
         return context.getResources().getStringArray(resourceIdUnits);
     }
 
-    public String getUnitName(Event.Category category) {
+    public String getUnitName(Measurement.Category category) {
         String sharedPref = sharedPreferences.
                 getString("unit_" + category.name().toLowerCase(), "1");
         return getUnitsNames(category)[Arrays.asList(getUnitsValues(category)).indexOf(sharedPref)];
     }
 
-    public String[] getUnitsAcronyms(Event.Category category) {
+    public String[] getUnitsAcronyms(Measurement.Category category) {
         String categoryName = category.name().toLowerCase();
         int resourceIdUnits = context.getResources().getIdentifier(categoryName +
                 "_units_acronyms", "array", context.getPackageName());
@@ -165,7 +156,7 @@ public class PreferenceHelper {
             return context.getResources().getStringArray(resourceIdUnits);
     }
 
-    public String getUnitAcronym(Event.Category category) {
+    public String getUnitAcronym(Measurement.Category category) {
         String[] acronyms = getUnitsAcronyms(category);
         if(acronyms == null)
             return getUnitName(category);
@@ -182,25 +173,25 @@ public class PreferenceHelper {
         }
     }
 
-    public String[] getUnitsValues(Event.Category category) {
+    public String[] getUnitsValues(Measurement.Category category) {
         String categoryName = category.name().toLowerCase();
         int resourceIdUnits = context.getResources().getIdentifier(categoryName +
                 "_units_values", "array", context.getPackageName());
         return context.getResources().getStringArray(resourceIdUnits);
     }
 
-    public float getUnitValue(Event.Category category) {
+    public float getUnitValue(Measurement.Category category) {
         String sharedPref = sharedPreferences.
                 getString("unit_" + category.name().toLowerCase(), "1");
         String value = getUnitsValues(category)[Arrays.asList(getUnitsValues(category)).indexOf(sharedPref)];
         return Float.valueOf(value);
     }
 
-    public float formatCustomToDefaultUnit(Event.Category category, float value) {
+    public float formatCustomToDefaultUnit(Measurement.Category category, float value) {
         return value / getUnitValue(category);
     }
 
-    public float formatDefaultToCustomUnit(Event.Category category, float value) {
+    public float formatDefaultToCustomUnit(Measurement.Category category, float value) {
         return value * getUnitValue(category);
     }
 
@@ -214,8 +205,8 @@ public class PreferenceHelper {
     }
 
     public Daytime getCurrentDaytime() {
-        Calendar now = Calendar.getInstance();
-        int hour = now.get(Calendar.HOUR_OF_DAY);
+        DateTime now = new DateTime();
+        int hour = now.getHourOfDay();
 
         if(hour >= 4 && hour < 10)
             return Daytime.Morning;
@@ -233,17 +224,17 @@ public class PreferenceHelper {
 
     // CATEGORIES
 
-    public boolean isCategoryActive(Event.Category category) {
+    public boolean isCategoryActive(Measurement.Category category) {
         return sharedPreferences.getBoolean(category.name() + CategoryPreference.ACTIVE, true);
     }
 
-    public Event.Category[] getActiveCategories() {
-        List<Event.Category> activeCategories = new ArrayList<Event.Category>();
+    public Measurement.Category[] getActiveCategories() {
+        List<Measurement.Category> activeCategories = new ArrayList<Measurement.Category>();
 
-        for(int item = 0; item < Event.Category.values().length; item++)
-            if(isCategoryActive(Event.Category.values()[item]))
-                activeCategories.add(Event.Category.values()[item]);
+        for(int item = 0; item < Measurement.Category.values().length; item++)
+            if(isCategoryActive(Measurement.Category.values()[item]))
+                activeCategories.add(Measurement.Category.values()[item]);
 
-        return activeCategories.toArray(new Event.Category[activeCategories.size()]);
+        return activeCategories.toArray(new Measurement.Category[activeCategories.size()]);
     }
 }
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/helpers/Validator.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/helpers/Validator.java
index e2e745a..4228483 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/helpers/Validator.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/helpers/Validator.java
@@ -6,7 +6,7 @@ import android.text.Editable;
 import android.widget.EditText;
 
 import com.mydiabetesprt.diabetes.R;
-import com.mydiabetesprt.diabetes.database.Event;
+import com.mydiabetesprt.diabetes.database.Measurement;
 
 /**
  * Created by Filip on 05.11.13.
@@ -17,7 +17,7 @@ public class Validator {
         return input.matches(".*\\d.*");
     }
 
-    public static boolean validateEditTextEvent(Context context, EditText editText, Event.Category category) {
+    public static boolean validateEditTextEvent(Context context, EditText editText, Measurement.Category category) {
         Editable editable = editText.getText();
 
         if(editable == null) {
@@ -44,7 +44,7 @@ public class Validator {
         }
     }
 
-    public static boolean validateEventValue(Context context, EditText editText, Event.Category category, String value) {
+    public static boolean validateEventValue(Context context, EditText editText, Measurement.Category category, String value) {
         PreferenceHelper preferenceHelper = new PreferenceHelper(context);
 
         if (!containsNumber(value)) {
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/preferences/BackupPreference.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/preferences/BackupPreference.java
index 65f8553..2a0635b 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/preferences/BackupPreference.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/preferences/BackupPreference.java
@@ -6,7 +6,6 @@ import android.content.Context;
 import android.content.DialogInterface;
 import android.preference.DialogPreference;
 import android.util.AttributeSet;
-import android.util.Log;
 
 import com.mydiabetesprt.diabetes.R;
 import com.mydiabetesprt.diabetes.database.DatabaseDataSource;
@@ -14,11 +13,11 @@ import com.mydiabetesprt.diabetes.helpers.FileHelper;
 import com.mydiabetesprt.diabetes.helpers.PreferenceHelper;
 import com.mydiabetesprt.diabetes.helpers.ViewHelper;
 
+import org.joda.time.DateTime;
+import org.joda.time.format.DateTimeFormat;
+
 import java.io.File;
-import java.text.ParseException;
-import java.text.SimpleDateFormat;
 import java.util.ArrayList;
-import java.util.Calendar;
 import java.util.List;
 
 /**
@@ -54,9 +53,8 @@ public class BackupPreference extends DialogPreference {
                         switch (which) {
                             case ACTION_CREATEBACKUP:
                                 createBackup();
-                                SimpleDateFormat format = new SimpleDateFormat("yyyyMMddHHmmss");
                                 String path = FileHelper.PATH_STORAGE + "/backup" +
-                                        format.format(Calendar.getInstance().getTime()) + ".csv";
+                                        DateTimeFormat.forPattern("yyyyMMddHHmmss").print(new DateTime()) + ".csv";
                                 ViewHelper.showInfo(activity,
                                         activity.getResources().getString(R.string.pref_data_backup_finished) + ": " + path);
                                 break;
@@ -86,19 +84,11 @@ public class BackupPreference extends DialogPreference {
         }
 
         final String[] csvArray = csvFiles.toArray(new String[csvFiles.size()]);
-        SimpleDateFormat format = new SimpleDateFormat("yyyyMMddHHmmss");
-
         final String[] csvArrayDates = new String[csvArray.length];
         for(int position = 0; position < csvArray.length; position++) {
             String dateString = csvArray[position].substring(6, csvArray[position].lastIndexOf("."));
-            try {
-                Calendar date = Calendar.getInstance();
-                date.setTime(format.parse(dateString));
-                csvArrayDates[position] = preferenceHelper.getDateAndTimeFormat().format(date.getTime());
-            }
-            catch (ParseException ex) {
-                Log.e("BackupPreference", ex.getMessage());
-            }
+            DateTime date = DateTimeFormat.forPattern("yyyyMMddHHmmss").parseDateTime(dateString);
+            csvArrayDates[position] = preferenceHelper.getDateAndTimeFormat().print(date);
         }
 
         AlertDialog.Builder builder = new AlertDialog.Builder(activity);
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/preferences/BloodSugarPreference.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/preferences/BloodSugarPreference.java
index fb2159d..e0ba408 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/preferences/BloodSugarPreference.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/preferences/BloodSugarPreference.java
@@ -13,7 +13,7 @@ import android.widget.EditText;
 import android.widget.TextView;
 
 import com.mydiabetesprt.diabetes.R;
-import com.mydiabetesprt.diabetes.database.Event;
+import com.mydiabetesprt.diabetes.database.Measurement;
 import com.mydiabetesprt.diabetes.helpers.PreferenceHelper;
 import com.mydiabetesprt.diabetes.helpers.Validator;
 
@@ -47,12 +47,12 @@ public class BloodSugarPreference extends EditTextPreference {
             throw new Resources.NotFoundException();
 
         float value = Float.parseFloat(sharedPreferences.getString(getKey(), ""));
-        value = preferenceHelper.formatDefaultToCustomUnit(Event.Category.BloodSugar, value);
-        editTextValue.setText(preferenceHelper.getDecimalFormat(Event.Category.BloodSugar).format(value));
+        value = preferenceHelper.formatDefaultToCustomUnit(Measurement.Category.BloodSugar, value);
+        editTextValue.setText(preferenceHelper.getDecimalFormat(Measurement.Category.BloodSugar).format(value));
         editTextValue.setSelection(editTextValue.getText().length());
 
         textViewUnit = (TextView) view.findViewById(R.id.unit);
-        textViewUnit.setText(preferenceHelper.getUnitName(Event.Category.BloodSugar));
+        textViewUnit.setText(preferenceHelper.getUnitName(Measurement.Category.BloodSugar));
     }
 
     @Override
@@ -68,7 +68,7 @@ public class BloodSugarPreference extends EditTextPreference {
             @Override
             public void onClick(View v)
             {
-                if(Validator.validateEditTextEvent(context, editTextValue, Event.Category.BloodSugar))
+                if(Validator.validateEditTextEvent(context, editTextValue, Measurement.Category.BloodSugar))
                 {
                     alertDialog.dismiss();
                     onDialogClosed(true);
@@ -90,7 +90,7 @@ public class BloodSugarPreference extends EditTextPreference {
             if(editor == null)
                 throw new Resources.NotFoundException();
 
-            value = preferenceHelper.formatCustomToDefaultUnit(Event.Category.BloodSugar, value);
+            value = preferenceHelper.formatCustomToDefaultUnit(Measurement.Category.BloodSugar, value);
             editor.putString(getKey(), Float.toString(value));
             editor.commit();
         }
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/preferences/CategoryPreference.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/preferences/CategoryPreference.java
index a531f4f..602f814 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/preferences/CategoryPreference.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/preferences/CategoryPreference.java
@@ -12,7 +12,7 @@ import android.widget.ArrayAdapter;
 import android.widget.ListView;
 
 import com.mydiabetesprt.diabetes.R;
-import com.mydiabetesprt.diabetes.database.Event;
+import com.mydiabetesprt.diabetes.database.Measurement;
 import com.mydiabetesprt.diabetes.helpers.PreferenceHelper;
 import com.mydiabetesprt.diabetes.helpers.ViewHelper;
 
@@ -44,8 +44,8 @@ public class CategoryPreference extends DialogPreference {
         listView.setChoiceMode(ListView.CHOICE_MODE_MULTIPLE);
         listView.setAdapter(adapter);
 
-        for(int item = 0; item < Event.Category.values().length; item++)
-            listView.setItemChecked(item, preferenceHelper.isCategoryActive(Event.Category.values()[item]));
+        for(int item = 0; item < Measurement.Category.values().length; item++)
+            listView.setItemChecked(item, preferenceHelper.isCategoryActive(Measurement.Category.values()[item]));
     }
 
     @Override
@@ -59,7 +59,7 @@ public class CategoryPreference extends DialogPreference {
                 SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(getContext());
                 SharedPreferences.Editor editor = sharedPreferences.edit();
                 for (int item = 0; item < checkedItems.size(); item++)
-                    editor.putBoolean(Event.Category.values()[item].name() + ACTIVE, checkedItems.valueAt(item));
+                    editor.putBoolean(Measurement.Category.values()[item].name() + ACTIVE, checkedItems.valueAt(item));
                 editor.apply();
             }
             else {
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/preferences/CleanUpPreference.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/preferences/CleanUpPreference.java
index dec4e39..1e65af3 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/preferences/CleanUpPreference.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/preferences/CleanUpPreference.java
@@ -12,9 +12,8 @@ import android.widget.DatePicker;
 import com.mydiabetesprt.diabetes.R;
 import com.mydiabetesprt.diabetes.database.DatabaseDataSource;
 import com.mydiabetesprt.diabetes.helpers.PreferenceHelper;
-import com.mydiabetesprt.diabetes.helpers.ViewHelper;
 
-import java.util.Calendar;
+import org.joda.time.DateTime;
 
 /**
  * Created by Filip on 04.11.13.
@@ -37,14 +36,16 @@ public class CleanUpPreference extends DialogPreference {
         preferenceHelper = new PreferenceHelper(activity);
     }
 
-    private void cleanUp(Calendar date) {
+    private void cleanUp(DateTime date) {
 
+        /*
         dataSource.open();
         int count = dataSource.deleteEventsBefore(date);
         dataSource.close();
 
         ViewHelper.showInfo(activity, count + " " +
                 activity.getResources().getString(R.string.pref_data_cleanup_return));
+        */
     }
 
     @Override
@@ -59,17 +60,21 @@ public class CleanUpPreference extends DialogPreference {
 
         if(positiveResult) {
 
-            final Calendar date = Calendar.getInstance();
-            date.set(datePicker.getYear(), datePicker.getMonth(), datePicker.getDayOfMonth());
+            final DateTime date = new DateTime();
+            date.withYear(datePicker.getYear());
+            date.withMonthOfYear(datePicker.getMonth());
+            date.withDayOfMonth(datePicker.getDayOfMonth());
 
+            /*
             dataSource.open();
             int count = dataSource.countEventsBefore(date);
             dataSource.close();
+            */
 
             AlertDialog.Builder dialogBuilder = new AlertDialog.Builder(activity);
             dialogBuilder
                     .setTitle(activity.getResources().getString(R.string.pref_data_cleanup_confirm_title))
-                    .setMessage(count + " " + activity.getResources().getString(R.string.pref_data_cleanup_confirm_message))
+                    .setMessage(/*count + */" " + activity.getResources().getString(R.string.pref_data_cleanup_confirm_message))
                     .setNegativeButton(R.string.cancel, new DialogInterface.OnClickListener() {
                         public void onClick(DialogInterface dialog, int id) {
                             dialog.cancel();
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/views/EndlessListView.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/views/EndlessListView.java
deleted file mode 100644
index 78e5d2e..0000000
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/views/EndlessListView.java
+++ /dev/null
@@ -1,93 +0,0 @@
-package com.mydiabetesprt.diabetes.views;
-
-import android.content.Context;
-import android.util.AttributeSet;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.widget.AbsListView;
-import android.widget.ListView;
-
-import com.mydiabetesprt.diabetes.adapters.ListViewAdapterLog;
-
-import java.util.List;
-
-/**
- * Created by Filip on 01.05.2014.
- */
-public class EndlessListView extends ListView implements AbsListView.OnScrollListener {
-
-    private View footer;
-    private boolean isLoading;
-    private EndlessListener listener;
-    private ListViewAdapterLog adapter;
-
-    public EndlessListView(Context context, AttributeSet attrs, int defStyle) {
-        super(context, attrs, defStyle);
-        this.setOnScrollListener(this);
-    }
-
-    public EndlessListView(Context context, AttributeSet attrs) {
-        super(context, attrs);
-        this.setOnScrollListener(this);
-    }
-
-    public EndlessListView(Context context) {
-        super(context);
-        this.setOnScrollListener(this);
-    }
-
-    public void setListener(EndlessListener listener) {
-        this.listener = listener;
-    }
-
-    @Override
-    public void onScroll(AbsListView view, int firstVisibleItem,
-                         int visibleItemCount, int totalItemCount) {
-
-        if (getAdapter() == null)
-            return ;
-
-        if (getAdapter().getCount() == 0)
-            return ;
-
-        int l = visibleItemCount + firstVisibleItem;
-        if (l >= totalItemCount && !isLoading) {
-            // It is time to add new data. We call the listener
-            this.addFooterView(footer);
-            isLoading = true;
-            //listener.loadData();
-        }
-    }
-
-    @Override
-    public void onScrollStateChanged(AbsListView view, int scrollState) {}
-
-    public void setLoadingView(int resId) {
-        LayoutInflater inflater = (LayoutInflater) super.getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
-        footer = (View) inflater.inflate(resId, null);
-        this.addFooterView(footer);
-    }
-
-    public void setAdapter(ListViewAdapterLog adapter) {
-        super.setAdapter(adapter);
-        this.adapter = adapter;
-        this.removeFooterView(footer);
-    }
-
-    public void addNewData(List<String> data) {
-
-        this.removeFooterView(footer);
-
-        //adapter.addAll(data);
-        adapter.notifyDataSetChanged();
-        isLoading = false;
-    }
-
-    public EndlessListener getListener() {
-        return listener;
-    }
-
-    public static interface EndlessListener {
-        public void loadData() ;
-    }
-}
\ No newline at end of file
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/views/EventEditText.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/views/EventEditText.java
deleted file mode 100644
index 9114d82..0000000
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/views/EventEditText.java
+++ /dev/null
@@ -1,64 +0,0 @@
-package com.mydiabetesprt.diabetes.views;
-
-import android.content.Context;
-import android.text.Editable;
-import android.widget.EditText;
-
-import com.mydiabetesprt.diabetes.R;
-import com.mydiabetesprt.diabetes.database.Event;
-import com.mydiabetesprt.diabetes.helpers.PreferenceHelper;
-import com.mydiabetesprt.diabetes.helpers.Validator;
-
-/**
- * Created by Filip on 01.06.2014.
- */
-public class EventEditText extends EditText {
-
-    public Event.Category category;
-
-    public EventEditText(Context context, Event.Category category) {
-        super(context);
-        this.category = category;
-    }
-
-    public boolean isValid() {
-        Editable editable = this.getText();
-        if(editable == null) {
-            throw new IllegalArgumentException();
-        }
-        else {
-            String value = editable.toString();
-            if (value.length() == 0) {
-                // Check for Hint values
-                CharSequence charSequence = this.getHint();
-                if(charSequence != null && charSequence.toString().length() > 0 ) {
-                    return hasValidValue(charSequence.toString());
-                }
-                else {
-                    setError(getContext().getString(R.string.validator_value_empty));
-                    return false;
-                }
-            }
-            else {
-                setError(null);
-                return (hasValidValue(value));
-            }
-        }
-    }
-
-    private boolean hasValidValue(String value) {
-        PreferenceHelper preferenceHelper = new PreferenceHelper(getContext());
-
-        if (!Validator.containsNumber(value)) {
-            setError(getContext().getString(R.string.validator_value_number));
-            return false;
-        }
-        else if (!preferenceHelper.validateEventValue(category,
-                preferenceHelper.formatCustomToDefaultUnit(category,
-                        Float.parseFloat(value)))) {
-            setError(getContext().getString(R.string.validator_value_unrealistic));
-            return false;
-        }
-        return true;
-    }
-}
diff --git a/Diaguard/src/main/res/drawable-hdpi/ic_home.png b/Diaguard/src/main/res/drawable-hdpi/ic_home.png
deleted file mode 100644
index 7159ffd6e10fc6f34efaeadef7643172a574b9b9..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1216
zcmV;x1V8(UP)<h;3K|Lk000e1NJLTq002k;002k`1^@s6RqeA!00006VoOIv0RI60
z0RN!9r;`8x010qNS#tmY4#NNd4#NS*Z>VGd000McNliru-UkL1A1&d-XF~u01Widq
zK~#9!?VL}D8&w>~zrV@0Ra=oBv?7(Ff+A=^tI&&3g>La6B6{<pNIfVXym@GEQWV4<
zswY7a+mqOfD2w%=VxiWp7DTO9%DS%F?y_2&(CpUid_3$M9OFzfGfj8?ynZ1h872wu
zGrzy{UY=AT0oMR801vqL0_3$K0KhH4ahA0JJmxhdK;3RPdi@|U&wsT5yzZ^VxYz5$
zFnoyt3d8Vi;M%0mHyzG);3u+a3V7HTFq?o+fDZYz02~B@M#QE*C<fdBJj2E7EU*n&
zm-c&g19c<t3NXuPH3>WlwCW0G95@7=;nJxKd=I>Qsm5WWEb=66kaUNnrzPzu;kxXU
z^p&Jv%xrE&00A<yq~n1Da<`<-k{*$Cm!z=@81S^D1CowQ`a;rgX7+d1v84iv0$u-y
zfYp+2le9(By^?O0v{BOalGaMPvZ9`TK~h`NoTM2^rz9PfG%4wXnJo?*zol5sL`g1E
zrVg3ec>lp5<>a*<wuM(E9ZUnX+CxCA@&Fq15YSj2KrIgewUVmwAR$280B}uKkTmWf
z>xn*CP*y-T$_l$ivOF=!SJ`Di1p?Fm;<S7Cro?ey2K2AOtbjsEOP&G>hXQh)tdD?}
z%q)`y`3k6)C(SQ<>SCDzbvy*r&I9N#4*{JU3MkgiwtWTE-_ZvN8BCJqJp|P0V=&Og
zKJ^gLvCJJTaD}9<XMi@D+4N9A(OeOpty(fOOPVK3tE46ASC9BC<mu)k9q|az(WC%9
z4A5bZ0DWG>f`0S}(6>bZO?w3BR1rY)lK$`j&Us0va{+Q0zAfp52Y_ZIolC1~f|Qyd
zD!nH?0Q9A#cG^0jU_jx7E5CaU2lRE);;Jk$NRlQR-ngE1V^kqPW;QEns=<JMm-Itn
zKrtU}s!p2Ozz~u;2On?TT;qzGH)ns3nH?Lnm~&8&j=$a2KsYCd!O7}klJsE%-Rs%3
z2DJ#F?<Bp~AUJc9zR7Z8CO~dI@mp%nUB*3Tb~@A8^L#7tnWXz_4rfZzoo3b<nFYoA
zl<m=>8Uxy$6;2)(i_-q0mRI1{HKR?K+5SAY+w;1ZwEVw}4<y}RGdO1?ZFb#(MruKk
z!Z4JXbtOHidfhAPN_xV~X7f(g<O0-cwIWyhS<>^W&oY?<W;T(f?iq>PVsinHQ+>S=
zg@+ZL>T^G6VHobJFr0&Kmbjch{q}mj2-Z6lgmVN~RjOmhuS&%%>D>rU=`-lD%}D~_
zDWF#}oPEHWO2A10^&IeL31H3xuT?si#<JV(v8`@aLNma4bfLm9tTd$Pc^&ZL3cz_E
z*icF;zsM3G3f^1Y6&|%_ft^VSqc)069k?3U3tSihm?hv%;JVs^NwKOHaFfe2MYSKe
z)opapEcI=dvkf>5v@<~IxT5c&TDwz0P+Ndk-7YRkJG<-ywt4|(03-u8y6tp60zL+I
exMM-taQ*=#1ReJkkc)u;0000<MNUMnLSTXhX)U+_

diff --git a/Diaguard/src/main/res/drawable-mdpi/ic_home.png b/Diaguard/src/main/res/drawable-mdpi/ic_home.png
deleted file mode 100644
index 8200113c1b24f54a255427d46f997c34a29591e8..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 784
zcmV+r1MmEaP)<h;3K|Lk000e1NJLTq001xm001xu1^@s6R|5Hm00006VoOIv0RI60
z0RN!9r;`8x010qNS#tmY4#NNd4#NS*Z>VGd000McNliru-UkL1A36IOvpxU-0-Z@j
zK~!ko?V3$%6Hyd~-!rKJQ4st>gn|oEL=i<1cY+A+R9pz!rMPn=C`$i<pet9>eG#N|
zA&3i$?vz3lsbGsmiPfU0Z4{-}CiA%HRHkEQl9WtxFZgaUnN8m3o;&w^Or#tHEPZYV
zZUNik_q`Bs0{G6NJ_0AbfB@EqVR(~&RR#KhRZfA#jR2Q{H)QJxu-2s&F9L^wVOrA}
zU{lvtJNn)aj7HmIB`O00Ku_9lG?JwmHM8WsK+-x%yCv<HbWPIMHm*;<q-T;!k}76a
zZRBYgK#J)@l8#E+DQSnK-pF(z$3Ra@nv(Qd(zv7%Gke+$jDXv?uYtJdAi)sGGbIfd
zJ@8!20w{O@Q1Bg~Ckwzl0I)0oe1C|20H|dFRR06yuZ1jtIo|<hJOG%<0+{sxU^WY2
z)B}L=%*2J`UAHCb=wPLtkSl$75F=Z<9C6tD^Mu#B_5Wjs0UkCgB_wIWVSty-0K7{k
z3s<&&<SiW_dN|6C=7Wl)x6MT0v!qD}0m_m-B~QyBamLEbYSDbgHI13sujDu-ZLn38
zH18O|K{G2gvxQ`4za`yp$owlaE7eQ3S#zK}4n^T=GJ$0RM5JSqUN~TWQqrTeQpXz9
z92+EkiO%3|O)UD%Y_Qp;epwXE?5m`6T{M5s%m%Xx&4$K+)mj{R@9MDm_mcKSi>Q_(
z5Id3PB%PM@t;2oqrAFpks=dQ7+yngV!1%lh9B*rn5_|7^7Wk2)`32xgE)7;J5_^G4
z4(8{9W4U&Ru}B;MCfaCzs$(z0V-RbA>uoSU9OawN_T{lHbtGEBRy7Tr?`n<@!|-p$
z1}*@#Ce2?2wm2~jN&MAdBXAe^kh0=KK(CXdoH`(<fcwCM=z4P=#{U3X8rw8|DFpNY
O0000<MNUMnLSTX&wpuX&

diff --git a/Diaguard/src/main/res/drawable-xhdpi/ic_home.png b/Diaguard/src/main/res/drawable-xhdpi/ic_home.png
deleted file mode 100644
index c413eb7c2844b79b83449ae3fc44616ecc6fe9a5..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1638
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

diff --git a/Diaguard/src/main/res/drawable-xxhdpi/ic_home.png b/Diaguard/src/main/res/drawable-xxhdpi/ic_home.png
deleted file mode 100644
index 27fcf2e1c95f153ef84021aa9572f091e54a6499..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 2649
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
Hu0mjfTEqii

diff --git a/Diaguard/src/main/res/drawable-xxxhdpi/ic_home.png b/Diaguard/src/main/res/drawable-xxxhdpi/ic_home.png
index 440fa844120d59ea734155ff075312fc2ccc665f..b7d875cac3e924a5a91e4c9cafbbf3a5ee86d744 100644
GIT binary patch
delta 2552
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

delta 3657
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
b{9^ep1p$PEnH51#00000NkvXXu0mjfG<$z`

diff --git a/Diaguard/src/main/res/layout/activity_main.xml b/Diaguard/src/main/res/layout/activity_main.xml
index 1d33a08..f11a7b4 100644
--- a/Diaguard/src/main/res/layout/activity_main.xml
+++ b/Diaguard/src/main/res/layout/activity_main.xml
@@ -1,22 +1,7 @@
 <?xml version="1.0" encoding="utf-8"?>
 
-<android.support.v4.widget.DrawerLayout
+<android.support.v4.view.ViewPager
     xmlns:android="http://schemas.android.com/apk/res/android"
-    android:id="@+id/drawer_layout"
+    android:id="@+id/viewpager"
     android:layout_width="match_parent"
-    android:layout_height="match_parent">
-
-    <FrameLayout android:id="@+id/frame_content"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"/>
-
-    <ListView android:id="@+id/drawer_navigation"
-        android:layout_width="240dp"
-        android:layout_height="match_parent"
-        android:layout_gravity="start"
-        android:choiceMode="singleChoice"
-        android:divider="@android:color/transparent"
-        android:dividerHeight="0dp"
-        android:background="@android:color/white"/>
-
-</android.support.v4.widget.DrawerLayout>
\ No newline at end of file
+    android:layout_height="match_parent" />
\ No newline at end of file
diff --git a/Diaguard/src/main/res/layout/fragment_main.xml b/Diaguard/src/main/res/layout/fragment_main.xml
index c2c7869..dee4e86 100644
--- a/Diaguard/src/main/res/layout/fragment_main.xml
+++ b/Diaguard/src/main/res/layout/fragment_main.xml
@@ -1,7 +1,6 @@
 <ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
     android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:background="@color/gray">
+    android:layout_height="match_parent">
 
     <LinearLayout
         android:layout_width="match_parent"
@@ -14,28 +13,10 @@
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
             android:orientation="vertical"
-            android:background="@drawable/background_round_white"
             android:layout_marginBottom="@dimen/margin_between"
             android:layout_marginTop="@dimen/margin_between">
 
             <LinearLayout
-                style="@style/BoxLabelBackground"
-                android:background="@drawable/background_round_top_gray_lt">
-
-                <ImageView
-                    android:layout_width="@dimen/size_image"
-                    android:layout_height="@dimen/size_image"
-                    android:src="@drawable/bloodsugar"/>
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:text="@string/bloodsugar_latest"
-                    style="@style/BoxLabel"/>
-
-                </LinearLayout>
-
-            <LinearLayout
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
                 android:orientation="vertical"
@@ -100,12 +81,10 @@
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
             android:orientation="vertical"
-            android:background="@drawable/background_round_white"
             android:layout_marginBottom="@dimen/margin_between">
 
             <LinearLayout
-                style="@style/BoxLabelBackground"
-                android:background="@drawable/background_round_top_gray_lt">
+                style="@style/BoxLabelBackground">
 
                 <ImageView
                     android:layout_width="@dimen/size_image"
diff --git a/Diaguard/src/main/res/menu/main.xml b/Diaguard/src/main/res/menu/main.xml
new file mode 100644
index 0000000..78e57fa
--- /dev/null
+++ b/Diaguard/src/main/res/menu/main.xml
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<menu xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:diaguard="http://schemas.android.com/apk/res-auto">
+
+    <item android:id="@+id/action_calculator"
+        android:icon="@drawable/ic_action_calculator"
+        android:title="@string/calculator"
+        diaguard:showAsAction="ifRoom"/>
+
+    <item android:id="@+id/action_settings"
+        android:icon="@drawable/ic_action_settings"
+        android:title="@string/settings"
+        diaguard:showAsAction="ifRoom"/>
+
+    <item android:id="@+id/action_newevent"
+        android:icon="@drawable/ic_action_new"
+        android:title="@string/newevent"
+        diaguard:showAsAction="ifRoom"/>
+
+</menu>
\ No newline at end of file
diff --git a/Diaguard/src/main/res/values-w820dp/dimens.xml b/Diaguard/src/main/res/values-w820dp/dimens.xml
new file mode 100644
index 0000000..63fc816
--- /dev/null
+++ b/Diaguard/src/main/res/values-w820dp/dimens.xml
@@ -0,0 +1,6 @@
+<resources>
+    <!-- Example customization of dimensions originally defined in res/values/dimens.xml
+         (such as screen margins) for screens with more than 820dp of available width. This
+         would include 7" and 10" devices in landscape (~960dp and ~1280dp respectively). -->
+    <dimen name="activity_horizontal_margin">64dp</dimen>
+</resources>
diff --git a/Diaguard/src/main/res/values/styles.xml b/Diaguard/src/main/res/values/styles.xml
index 3ca9fc1..4df59da 100644
--- a/Diaguard/src/main/res/values/styles.xml
+++ b/Diaguard/src/main/res/values/styles.xml
@@ -30,10 +30,10 @@
     </style>
     
     <style name="Padding">
-        <item name="android:paddingLeft">@dimen/padding_end</item>
-        <item name="android:paddingRight">@dimen/padding_end</item>
-        <item name="android:paddingTop">@dimen/margin_between</item>
-        <item name="android:paddingBottom">@dimen/margin_between</item>
+        <item name="android:paddingLeft">@dimen/activity_horizontal_margin</item>
+        <item name="android:paddingRight">@dimen/activity_horizontal_margin</item>
+        <item name="android:paddingTop">@dimen/activity_vertical_margin</item>
+        <item name="android:paddingBottom">@dimen/activity_vertical_margin</item>
     </style>
 
     <style name="Box">
@@ -61,7 +61,6 @@
         <item name="android:layout_width">match_parent</item>
         <item name="android:layout_height">wrap_content</item>
         <item name="android:orientation">horizontal</item>
-        <item name="android:background">@color/gray_lt</item>
         <item name="android:paddingLeft">@dimen/padding_end</item>
         <item name="android:gravity">center_vertical</item>
     </style>
-- 
1.9.0.msysgit.0

From c1fbfd4952d0a3e632d91da690945c91975d090e Mon Sep 17 00:00:00 2001
From: Philipp Fahlteich <philipp.fahlteich@gmail.com>
Date: Sun, 10 Aug 2014 21:26:30 +0200
Subject: [PATCH] Database Upgrade: Added makla and replaced Events with Entries
 and Measurements

---
 .../com/mydiabetesprt/diabetes/NewEventActivity.java |  13 ++-
 .../diaguard/database/DatabaseDataSource.java      |  68 ++++++++++-
 .../diaguard/database/DatabaseHelper.java          | 124 ++++++++++++++++++---
 .../com/mydiabetesprt/diabetes/database/Entry.java   |  50 +++++++++
 .../com/mydiabetesprt/diabetes/database/Event.java   |   9 ++
 .../mydiabetesprt/diabetes/database/Measurement.java |  53 +++++++++
 .../diaguard/fragments/MainFragment.java           |   2 +
 7 files changed, 297 insertions(+), 22 deletions(-)
 create mode 100644 Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/Entry.java
 create mode 100644 Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/Measurement.java

diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/NewEventActivity.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/NewEventActivity.java
index 9f46ca0..506ef27 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/NewEventActivity.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/NewEventActivity.java
@@ -33,6 +33,7 @@ import android.widget.TimePicker;
 
 import com.mydiabetesprt.diabetes.database.DatabaseDataSource;
 import com.mydiabetesprt.diabetes.database.DatabaseHelper;
+import com.mydiabetesprt.diabetes.database.Entry;
 import com.mydiabetesprt.diabetes.database.Event;
 import com.mydiabetesprt.diabetes.database.makla;
 import com.mydiabetesprt.diabetes.fragments.DatePickerFragment;
@@ -253,9 +254,16 @@ public class NewEventActivity extends ActionBarActivity {
         }
 
         if(inputIsValid) {
-            long[] ids;
-
             dataSource.open();
+
+            // Entry
+            Entry entry = new Entry();
+            entry.setDate(time);
+            entry.setNote(editTextNotes.getText().toString());
+            long entryId = dataSource.insertEntry(entry);
+
+            // Events
+            long[] ids;
             Bundle extras = getIntent().getExtras();
             if (extras != null && extras.getLong(EXTRA_ID) != 0L) {
                 events.get(0).setId(extras.getLong(EXTRA_ID));
@@ -266,6 +274,7 @@ public class NewEventActivity extends ActionBarActivity {
                 ids = dataSource.insertEvents(events);
             }
 
+            // makla
             if(makla != null) {
                 for(int eventPosition = 0; eventPosition < events.size(); eventPosition++) {
                     if(events.get(eventPosition).getCategory() == Event.Category.Meal) {
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/DatabaseDataSource.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/DatabaseDataSource.java
index a53ab28..e08a3ed 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/DatabaseDataSource.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/DatabaseDataSource.java
@@ -48,7 +48,71 @@ public class DatabaseDataSource {
 
     // endregion
 
-    //region Events
+    // region Entry
+
+    public long insertEntry(Entry entry) {
+        ContentValues values = new ContentValues();
+        values.put(DatabaseHelper.DATE,
+                Helper.getDateDatabaseFormat().format(entry.getDate().getTime()));
+        values.put(DatabaseHelper.NOTE, entry.getNote());
+        return db.insertOrThrow(DatabaseHelper.ENTRY, null, values);
+    }
+
+    public List<Entry> getEntries() {
+        String query = "SELECT * FROM " + DatabaseHelper.ENTRY + " ORDER BY " + DatabaseHelper.DATE;
+        Cursor cursor = db.rawQuery(query, null);
+
+        List<Entry> entries = new ArrayList<Entry>();
+        if (cursor.moveToFirst()) {
+            while(!cursor.isAfterLast()) {
+                Entry entry = new Entry();
+                entry.setId(Integer.parseInt(cursor.getString(0)));
+                entry.setDate(cursor.getString(1));
+                entry.setNote(cursor.getString(2));
+                entries.add(entry);
+
+                cursor.moveToNext();
+            }
+        }
+        return entries;
+    }
+
+    // endregion
+
+    // region Measurement
+
+    public long insertMeasurement(Measurement measurement) {
+        ContentValues values = new ContentValues();
+        values.put(DatabaseHelper.VALUE, measurement.getValue());
+        values.put(DatabaseHelper.CATEGORY, measurement.getCategory().toString());
+        values.put(DatabaseHelper.ENTRY_ID, measurement.getEntryId());
+        return db.insertOrThrow(DatabaseHelper.ENTRY, null, values);
+    }
+
+    public List<Measurement> getMeasurementsOfEntry(Entry entry) {
+        String query = "SELECT * FROM " + DatabaseHelper.MEASUREMENT + " WHERE " +
+        DatabaseHelper.ENTRY_ID + " = " + entry.getId() + " ";
+        Cursor cursor = db.rawQuery(query, null);
+
+        List<Measurement> measurements = new ArrayList<Measurement>();
+        if (cursor.moveToFirst()) {
+            while(!cursor.isAfterLast()) {
+                Measurement measurement = new Measurement();
+                measurement.setId(Integer.parseInt(cursor.getString(0)));
+                measurement.setValue(Float.parseFloat(cursor.getString(1)));
+                measurement.setCategory(Measurement.Category.valueOf(cursor.getString(2)));
+                measurement.setEntryId(Integer.parseInt(cursor.getString(3)));
+                measurements.add(measurement);
+
+                cursor.moveToNext();
+            }
+        }
+        return measurements;
+    }
+
+    // endregion
+
+    // region Events
 
     public long insertEvent(Event event) {
         ContentValues values = new ContentValues();
@@ -402,7 +466,7 @@ public class DatabaseDataSource {
         values.put(DatabaseHelper.NAME, makla.getName());
         values.put(DatabaseHelper.DATE,
                 Helper.getDateDatabaseFormat().format(makla.getDate().getTime()));
-        values.put(DatabaseHelper.EVENT_ID, makla.getEventId());
+        values.put(DatabaseHelper.ENTRY_ID, makla.getEventId());
         return db.insertOrThrow(DatabaseHelper.makla, null, values);
     }
 
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/DatabaseHelper.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/DatabaseHelper.java
index a99b678..62ec161 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/DatabaseHelper.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/DatabaseHelper.java
@@ -1,9 +1,16 @@
 package com.mydiabetesprt.diabetes.database;
 
+import android.content.ContentValues;
 import android.content.Context;
+import android.database.Cursor;
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteOpenHelper;
 
+import com.mydiabetesprt.diabetes.helpers.Helper;
+
+import java.util.ArrayList;
+import java.util.List;
+
 /**
  * Created by Filip on 20.10.13.
  */
@@ -12,52 +19,133 @@ public class DatabaseHelper extends SQLiteOpenHelper {
     // Metadata
     private static final String DATABASE_NAME = "diaguard.db";
     private static final int DATABASE_VERSION = 18;
+
+    // For compatibility purposes
     private static final int DATABASE_VERSION_1_0 = 17;
 
     // Primary key: Underscore for CursorAdapter to work
     public static final String ID = "_id";
 
-    // Events
-    public static final String EVENTS = "events";
-    public static final String VALUE = "value";
+    // Entry
+    public static final String ENTRY = "entry";
     public static final String DATE = "date";
-    public static final String NOTES = "notes";
+    public static final String NOTE = "note";
+
+    // Measurement
+    public static final String MEASUREMENT = "measurement";
+    public static final String VALUE = "value";
     public static final String CATEGORY = "category";
+    public static final String ENTRY_ID = "entryId";
 
     // makla
     public static final String makla = "makla";
     public static final String CARBOHYDRATES = "carbohydrates";
     public static final String NAME = "name";
-    public static final String EVENT_ID = "eventId";
+
+    // Measurement_makla
+    public static final String makla_EATEN = "makla_eaten";
+    public static final String MEASUREMENT_ID = "measurementId";
+    public static final String makla_ID = "maklaId";
+
+    // DEPRECATED
+    public static final String EVENTS = "events";
+    public static final String NOTES = "notes";
 
     public DatabaseHelper(Context context) {
         super(context, DATABASE_NAME, null, DATABASE_VERSION);
     }
 
     @Override
-    public void onCreate(SQLiteDatabase sqliteDatabase) {
-        sqliteDatabase.execSQL("CREATE TABLE IF NOT EXISTS " +
-                EVENTS + " (" + ID + " INTEGER PRIMARY KEY, " +
+    public void onCreate(SQLiteDatabase sqLiteDatabase) {
+        onCreateVersion18(sqLiteDatabase);
+    }
+
+    private void onCreateVersion17(SQLiteDatabase sqLiteDatabase) {
+        sqLiteDatabase.execSQL("CREATE TABLE IF NOT EXISTS " +
+                EVENTS + " (" +
+                ID + " INTEGER PRIMARY KEY, " +
                 VALUE + " REAL NOT NULL, " +
                 DATE + " TEXT NOT NULL, " +
                 NOTES + " TEXT, " +
                 CATEGORY + " TEXT NOT NULL);");
-        sqliteDatabase.execSQL("CREATE TABLE IF NOT EXISTS " +
-                makla + " (" + ID + " INTEGER PRIMARY KEY, " +
-                CARBOHYDRATES + " REAL NOT NULL, " +
-                NAME + " TEXT, " +
+    }
+
+    private void insertTestDataVersion17(SQLiteDatabase sqLiteDatabase) {
+        sqLiteDatabase.execSQL("INSERT INTO " + EVENTS + " (" +
+                 VALUE + "," + DATE + "," + NOTES + "," + CATEGORY +
+                ") VALUES (133.0,'2014-08-09 21:31:23','TestNote','BloodSugar');");
+        sqLiteDatabase.execSQL("INSERT INTO " + EVENTS + " (" +
+                VALUE + "," + DATE + "," + NOTES + "," + CATEGORY +
+                ") VALUES (5,'2014-06-09 21:31:23','Notenoteyos','Meal');");
+    }
+
+    private void onCreateVersion18(SQLiteDatabase sqLiteDatabase) {
+        sqLiteDatabase.execSQL("CREATE TABLE IF NOT EXISTS " +
+                ENTRY + " (" +
+                ID + " INTEGER PRIMARY KEY, " +
                 DATE + " TEXT NOT NULL, " +
-                EVENT_ID + " INTEGER, " +
-                "FOREIGN KEY(" + EVENT_ID + ") REFERENCES " + EVENTS + " ( " + ID + "));");
+                NOTE + " TEXT);");
+        sqLiteDatabase.execSQL("CREATE TABLE IF NOT EXISTS " +
+                MEASUREMENT + " (" +
+                ID + " INTEGER PRIMARY KEY, " +
+                VALUE + " REAL NOT NULL, " +
+                CATEGORY + " TEXT NOT NULL, " +
+                ENTRY_ID + " INTEGER NOT NULL, " +
+                "FOREIGN KEY(" + ENTRY_ID + ") REFERENCES " + ENTRY + " (" + ID + "));");
+        sqLiteDatabase.execSQL("CREATE TABLE IF NOT EXISTS " +
+                makla + " (" +
+                ID + " INTEGER PRIMARY KEY, " +
+                CARBOHYDRATES + " REAL NOT NULL, " +
+                NAME + " TEXT NOT NULL);");
+        sqLiteDatabase.execSQL("CREATE TABLE IF NOT EXISTS " +
+                makla_EATEN + " (" +
+                ID + " INTEGER PRIMARY KEY, " +
+                MEASUREMENT_ID + " INTEGER, " +
+                makla_ID + " INTEGER, " +
+                "FOREIGN KEY(" + MEASUREMENT_ID + ") REFERENCES " + MEASUREMENT + " (" + ID + "), " +
+                "FOREIGN KEY(" + makla_ID + ") REFERENCES " + makla + " (" + ID + "));");
     }
 
     @Override
-    public void onUpgrade(SQLiteDatabase sqliteDatabase, int oldVersion, int newVersion) {
-        if(newVersion > oldVersion) {
-            onCreate(sqliteDatabase);
+    public void onUpgrade(SQLiteDatabase sqLiteDatabase, int oldVersion, int newVersion) {
+        if(oldVersion < newVersion) {
+            onCreate(sqLiteDatabase);
+            int upgradeFromVersion = oldVersion;
+            while (upgradeFromVersion < newVersion) {
+                switch (upgradeFromVersion) {
+                    // Add makla, Entry and replace Event with Measurement
+                    case DATABASE_VERSION_1_0:
+                        upgradeToVersion18(sqLiteDatabase);
+                        break;
+                }
+                upgradeFromVersion++;
+            }
+        }
+    }
+
+    // TODO: Group by Events with the same date
+    private void upgradeToVersion18(SQLiteDatabase sqliteDatabase) {
+        String query = "SELECT * FROM " + DatabaseHelper.EVENTS + " ORDER BY " + DatabaseHelper.DATE;
+        Cursor cursor = sqliteDatabase.rawQuery(query, null);
+
+        if (cursor.moveToFirst()) {
+            while(!cursor.isAfterLast()) {
+                // Entry
+                ContentValues values = new ContentValues();
+                values.put(DatabaseHelper.DATE, cursor.getString(2));
+                values.put(DatabaseHelper.NOTE, cursor.getString(3));
+                long entryId = sqliteDatabase.insertOrThrow(DatabaseHelper.ENTRY, null, values);
+
+                // Measurement
+                values = new ContentValues();
+                values.put(DatabaseHelper.VALUE, Float.parseFloat(cursor.getString(1)));
+                values.put(DatabaseHelper.CATEGORY, cursor.getString(4));
+                values.put(DatabaseHelper.ENTRY_ID, entryId);
+                sqliteDatabase.insertOrThrow(DatabaseHelper.MEASUREMENT, null, values);
 
-            if (oldVersion == DATABASE_VERSION_1_0) {
+                cursor.moveToNext();
             }
         }
+        sqliteDatabase.execSQL("DROP TABLE IF EXISTS " + EVENTS + ";");
     }
 }
\ No newline at end of file
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/Entry.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/Entry.java
new file mode 100644
index 0000000..9a8cedb
--- /dev/null
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/Entry.java
@@ -0,0 +1,50 @@
+package com.mydiabetesprt.diabetes.database;
+
+import com.mydiabetesprt.diabetes.helpers.Helper;
+
+import java.text.ParseException;
+import java.util.Calendar;
+
+/**
+ * Created by Filip on 09.08.2014.
+ */
+public class Entry {
+
+    private long id;
+    private Calendar date;
+    private String note;
+
+    public long getId() {
+        return id;
+    }
+
+    public void setId(long id) {
+        this.id = id;
+    }
+
+    public Calendar getDate() {
+        return date;
+    }
+
+    public void setDate(Calendar date) {
+        this.date = date;
+    }
+
+    public void setDate(String dateString) {
+        try{
+            this.date = Calendar.getInstance();
+            this.date.setTime(Helper.getDateDatabaseFormat().parse(dateString));
+        }
+        catch (ParseException ex) {
+            ex.printStackTrace();
+        }
+    }
+
+    public String getNote() {
+        return note;
+    }
+
+    public void setNote(String note) {
+        this.note = note;
+    }
+}
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/Event.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/Event.java
index 06aa3a0..6cf1486 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/Event.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/Event.java
@@ -15,6 +15,7 @@ public class Event {
     private Calendar date;
     private String notes;
     private Category category;
+    private long entryId;
 
     public enum Category {
         BloodSugar,
@@ -65,4 +66,12 @@ public class Event {
     public String getNotes() { return notes; }
 
     public void setNotes(String notes) { this.notes = notes; }
+
+    public long getEntryId() {
+        return entryId;
+    }
+
+    public void setEntryId(long entryId) {
+        this.entryId = entryId;
+    }
 }
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/Measurement.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/Measurement.java
new file mode 100644
index 0000000..48558e2
--- /dev/null
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/database/Measurement.java
@@ -0,0 +1,53 @@
+package com.mydiabetesprt.diabetes.database;
+
+import com.mydiabetesprt.diabetes.helpers.Helper;
+
+import java.text.ParseException;
+import java.util.Calendar;
+
+/**
+ * Created by Filip on 20.10.13.
+ */
+public class Measurement {
+
+    private long id;
+    private float value;
+    private Category category;
+    private long entryId;
+
+    public enum Category {
+        BloodSugar,
+        Bolus,
+        Meal,
+        Activity,
+        HbA1c,
+        Weight,
+        Pulse
+    }
+
+    public long getId() { return id; }
+
+    public void setId(long id) {
+        this.id = id;
+    }
+
+    public float getValue() {
+        return value;
+    }
+
+    public void setValue(float value) {
+        this.value = value;
+    }
+
+    public Category getCategory() { return category; }
+
+    public void setCategory(Category category) { this.category = category; }
+
+    public long getEntryId() {
+        return entryId;
+    }
+
+    public void setEntryId(long entryId) {
+        this.entryId = entryId;
+    }
+}
diff --git a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/MainFragment.java b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/MainFragment.java
index bb78173..fed9829 100644
--- a/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/MainFragment.java
+++ b/Diaguard/src/main/java/com/mydiabetesprt/diabetes/fragments/MainFragment.java
@@ -88,6 +88,7 @@ public class MainFragment extends Fragment {
 
         time = Calendar.getInstance();
 
+        /*
         if(dataSource.countEvents(Event.Category.BloodSugar) > 0) {
             textViewLatestValue.setTextSize(60);
             updateLatest();
@@ -99,6 +100,7 @@ public class MainFragment extends Fragment {
             textViewAverageWeek.setText(Helper.PLACEHOLDER);
             textViewAverageDay.setText(Helper.PLACEHOLDER);
         }
+        */
 
         dataSource.close();
     }
-- 
1.9.0.msysgit.0

